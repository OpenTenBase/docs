{"config":{"lang":["en","zh"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"\u6b22\u8fce\u5149\u4e34 OpenTenBase \u6587\u6863\u7ad9!","text":"<p>OpenTenBase \u4f01\u4e1a\u7ea7\u5206\u5e03\u5f0fHTAP\u5f00\u6e90\u6570\u636e\u5e93\uff0c\u5177\u5907\u9ad8\u6269\u5c55\u6027\u3001\u5546\u4e1a\u6570\u636e\u5e93\u8bed\u6cd5\u517c\u5bb9\u3001\u5206\u5e03\u5f0fHTAP\u5f15\u64ce\u3001\u591a\u7ea7\u5bb9\u707e\u548c\u591a\u7ef4\u5ea6\u8d44\u6e90\u9694\u79bb\u7b49\u80fd\u529b\uff0c\u6210\u529f\u5e94\u7528\u5728\u91d1\u878d\u3001\u533b\u7597\u3001\u822a\u5929\u7b49\u884c\u4e1a\u7684\u6838\u5fc3\u4e1a\u52a1\u7cfb\u7edf\u3002</p> <p>\u6b22\u8fce\u8bbf\u95ee\u5b98\u7f51\uff1ahttps://opentenbase.org</p> <p>\u5feb\u901f\u5165\u95e8 </p> <p>\u5e94\u7528\u63a5\u5165\u6307\u5357 </p> <p>\u57fa\u672c\u4f7f\u7528 </p>"},{"location":"download/","title":"\u4e0b\u8f7d","text":"<p>\u8bf7\u70b9\u51fb\u5982\u4e0b\u94fe\u63a5\u4e0b\u8f7d</p> \u5185\u6838 \u4e0b\u8f7d\u5730\u5740 OpenTenBase \u70b9\u51fb\u4e0b\u8f7d TXSQL \u70b9\u51fb\u4e0b\u8f7d"},{"location":"faq/","title":"\u5e38\u89c1\u95ee\u9898","text":"<ol> <li>\u5f3a\u540c\u6b65\u7b49\u5f85ack\u8d85\u8fc7sqlasyntimeout\uff08\u9ed8\u8ba430s\uff09\u540e\u7684\u9519\u8bef\u63d0\u793a</li> </ol> <pre><code>ERROR 1613 (XA106): The transaction is in doubt. Please check whether the transaction has been committed.\n</code></pre> <ol> <li>\u5927\u4e8b\u52a1\u4ea7\u751f\u7684binlog\u8d85\u8fc7binlog_write_threshold\uff08\u9ed8\u8ba41610612736\uff09\u540e\u9519\u8bef\u63d0\u793a\uff1a</li> </ol> <pre><code>ERROR 4040 (HY000): binlog write threshold(xxx) exceeded, the transaction has xxx (bytes) binlogs, it is aborted.\n</code></pre>"},{"location":"contribution/docs-format-guide/","title":"\u6587\u6863\u5e93\u683c\u5f0f\u624b\u518c","text":"<p>\u672c\u9875\u9762\u5c06\u5217\u51fa\u5728\u7f16\u5199 OpenTenBase \u6587\u6863\u65f6\u9700\u8981\u6ce8\u610f\u7684\u683c\u5f0f\u89c4\u8303\u3002\u8bf7\u60a8\u5728\u64b0\u5199\u6216\u8005\u4fee\u6b63\u6587\u6863\u5185\u5bb9\u4e4b\u524d\u4ed4\u7ec6\u9605\u8bfb\u672c\u9875\u9762\uff0c\u4ee5\u5e2e\u52a9\u60a8\u64b0\u5199\u66f4\u9ad8\u8d28\u91cf\u7684\u5185\u5bb9\u3002</p>"},{"location":"contribution/docs-format-guide/#_2","title":"\u5b58\u50a8\u683c\u5f0f\u4e0e\u6587\u6863\u94fe\u63a5","text":"<ol> <li>\u6587\u4ef6\u540d\u4ee5\u5c0f\u5199\u5b57\u6bcd\u7f16\u5199\uff0c\u5355\u8bcd\u4e2d\u95f4\u4ee5 <code>-</code> \u5206\u5272\u3002 \u4f8b\u5982\uff1a<code>docs-format-guide.md</code>\u3002</li> <li>\u82f1\u8bed\u6587\u6863\u5728\u6587\u4ef6\u540d\u540e\u52a0 <code>.en</code> \u3002 \u4f8b\u5982\uff1a<code>docs-format-guide.en.md</code>\u3002\u82f1\u8bed\u6587\u6863\u4e0e\u4e2d\u6587\u6587\u6863\u5b58\u653e\u4e8e\u540c\u4e00\u76ee\u5f55\u3002</li> <li>\u7ad9\u5185\u94fe\u63a5\u8bf7\u4f7f\u7528\u76f8\u5bf9\u8def\u5f84\uff0c\u4f8b\u5982\uff1a<code>[\u683c\u5f0f\u624b\u518c](docs-format-guide.md)</code>\u3001<code>[\u5e38\u89c1\u95ee\u9898](../faq.md)</code>\u3002</li> <li>\u6240\u6709\u4f7f\u7528\u7684\u56fe\u7247\u5747\u5b58\u50a8\u5230\u4ed3\u5e93\u7684 <code>docs/assets</code> \u76ee\u5f55\u4e0b\u4e14\u62e5\u6709\u6709\u610f\u4e49\u7684\u6587\u4ef6\u540d\u3002\u56fe\u7247\u7684\u5f15\u7528\u8bf7\u4f7f\u7528\u76f8\u5bf9\u8def\u5f84\uff0c\u4f8b\u5982\uff1a<code>![OpenTenBase favicon](./assets/favicon.png)</code>\u3002</li> </ol>"},{"location":"contribution/docs-format-guide/#_3","title":"\u6587\u6863\u57fa\u672c\u683c\u5f0f\u8981\u6c42","text":"<ul> <li>\u9664\u6587\u7ae0\u5f00\u5934\u4e0e\u6587\u7ae0\u540d\u79f0\u7edf\u4e00\u7684\u6807\u9898\u5916\uff0c\u6587\u7ae0\u4e2d\u4e0d\u5e94\u51fa\u73b0 <code>#</code> \u6216\u8005 <code>&lt;h1&gt;</code> \u5f62\u5f0f\u7684\u4e00\u7ea7\u6807\u9898\u3002</li> <li>\u6807\u9898\u7684\u4e95\u53f7\u540e\u5e94\u6709\u4e00\u4e2a\u82f1\u6587\u534a\u89d2\u7a7a\u683c\u3002\u4f8b\u5982\uff1a<code>## \u4e8c\u7ea7\u6807\u9898</code>\u3002</li> <li>\u6807\u9898\u540e\u5e94\u6709\u4e00\u4e2a\u7a7a\u884c\u3002</li> <li>\u7f29\u8fdb\u4f7f\u7528 4 \u4e2a\u7a7a\u683c\uff0c\u4e0d\u8981\u4f7f\u7528 Tab\u3002</li> <li>\u4ee3\u7801\u5757\u3001\u8868\u683c\u7b49\u5757\u7ea7\u5143\u7d20\u524d\u540e\u5e94\u5404\u6709\u4e00\u4e2a\u7a7a\u884c\u3002</li> <li>\u4e8c\u7ea7\u5217\u8868\u5e94\u5728\u5f00\u5934\u589e\u52a0 4 \u4e2a\u7a7a\u683c\u7f29\u8fdb\u3002</li> <li>\u540c\u7ea7\u5217\u8868\u4e4b\u95f4\u7684\u989d\u5916\u5185\u5bb9\u524d\u540e\u5e94\u5404\u6709\u4e00\u4e2a\u7a7a\u884c\uff0c\u4e14\u589e\u52a0 4 \u4e2a\u7a7a\u683c\u7f29\u8fdb\u3002</li> <li>\u4f7f\u7528 <code>???</code> \u6216 <code>!!!</code> \u5f00\u5934\u7684 Admonitions \u8bed\u6cd5\u65f6\uff0c\u6bcf\u4e00\u884c\u8981\u5305\u62ec\u5728 Admonitions \u8bed\u6cd5\u7684\u6587\u672c\u6846\u7684\u6587\u672c\uff0c\u5f00\u5934\u5fc5\u987b\u6709 4 \u4e2a\u7a7a\u683c\u7f29\u8fdb\u3002\u5373\u4f7f\u662f\u7a7a\u884c\uff0c\u4e5f\u5fc5\u987b\u4fdd\u6301\u4e0e\u5176\u4ed6\u884c\u4e00\u81f4\u7684\u7f29\u8fdb\u3002Admonitions \u8bed\u6cd5\u524d\u540e\u5e94\u5404\u6709\u4e00\u4e2a\u7a7a\u884c\uff0c\u4f46\u5185\u5bb9\u524d\u540e\u4e0d\u9700\u8981\u7a7a\u884c\u3002</li> <li><code>```</code> \u6837\u5f0f\u7684\u4ee3\u7801\u5757\u5e94\u6307\u5b9a\u76f8\u5173\u8bed\u8a00\u3002\u4f8b\u5982\uff1a<code>``` shell</code>\u3002\u5982\u679c\u4ee3\u7801\u5185\u5bb9\u4e3a\u7eaf\u6587\u672c\uff0c\u5219\u6307\u5b9a <code>text</code> \u4f5c\u4e3a\u8bed\u8a00\u3002</li> <li> <p>\u4e2d\u6587\u6587\u6863\u64b0\u5199\u8fc7\u7a0b\u4e2d\u5e94\u9075\u5faa\u672c\u6587\u7ed3\u5c3e\u7684\u4e2d\u6587\u6587\u6848\u6392\u7248\u6307\u5317\u3002</p> <p>!!! note \"\u63d0\u793a\"     \u5982\u679c\u9700\u8981\u7684\u8bdd\uff0c\u8bf7\u53c2\u8003\u6392\u7248\u6307\u5317\u7684\u5de5\u5177\u90e8\u5206\u4f7f\u7528\u76f8\u5173\u5de5\u5177\u5e2e\u52a9\u786e\u4fdd\u6587\u6848\u6392\u7248\u7684\u6b63\u786e\u6027\u3002</p> </li> </ul>"},{"location":"contribution/docs-format-guide/#_4","title":"\u4e2d\u6587\u6587\u6848\u6392\u7248\u6307\u5317","text":"<p>!!! note \"\u63d0\u793a\"     \u4ee5\u4e0b\u5185\u5bb9\u66f4\u6539\u81ea GitHub \u7528\u6237 sparanoid \u7684\u300a\u4e2d\u6587\u6587\u6848\u6392\u7248\u6307\u5317\u300b\uff0c\u5176\u5185\u5bb9\u4f7f\u7528 MIT \u534f\u8bae\u6388\u6743\u3002\u539f GitHub \u4ed3\u5e93</p>"},{"location":"contribution/docs-format-guide/#_5","title":"\u7a7a\u683c","text":"<p>\u300c\u6709\u7814\u7a76\u663e\u793a\uff0c\u6253\u5b57\u7684\u65f6\u5019\u4e0d\u559c\u6b22\u5728\u4e2d\u6587\u548c\u82f1\u6587\u4e4b\u95f4\u52a0\u7a7a\u683c\u7684\u4eba\uff0c\u611f\u60c5\u8def\u90fd\u8d70\u5f97\u5f88\u8f9b\u82e6\uff0c\u6709\u4e03\u6210\u7684\u6bd4\u4f8b\u4f1a\u5728 34 \u5c81\u7684\u65f6\u5019\u8ddf\u81ea\u5df1\u4e0d\u7231\u7684\u4eba\u7ed3\u5a5a\uff0c\u800c\u5176\u4f59\u4e09\u6210\u7684\u4eba\u6700\u540e\u53ea\u80fd\u628a\u9057\u4ea7\u7559\u7ed9\u81ea\u5df1\u7684\u732b\u3002\u6bd5\u7adf\u7231\u60c5\u8ddf\u4e66\u5199\u90fd\u9700\u8981\u9002\u65f6\u5730\u7559\u767d\u3002</p> <p>\u4e0e\u5927\u5bb6\u5171\u52c9\u4e4b\u3002\u300d\u2014\u2014vinta/paranoid-auto-spacing</p>"},{"location":"contribution/docs-format-guide/#_6","title":"\u4e2d\u82f1\u6587\u4e4b\u95f4\u9700\u8981\u589e\u52a0\u7a7a\u683c","text":"<p>\u6b63\u786e\uff1a</p> <p>OpenTenBase \u662f\u5f00\u6e90\u7684\u5206\u5e03\u5f0f\u6570\u636e\u5e93\uff0c\u53ef\u4ee5\u8f7b\u677e\u5e94\u5bf9\u4ebf\u7ea7\u6570\u636e\u7684\u5b58\u50a8\u3001\u5206\u6790\u548c\u67e5\u8be2\u3002\u96c6\u9ad8\u6269\u5c55\u6027\u3001\u9ad8SQL\u517c\u5bb9\u5ea6\u3001\u5b8c\u6574\u7684\u5206\u5e03\u5f0f\u4e8b\u52a1\u652f\u6301\u3001\u591a\u7ea7\u5bb9\u707e\u80fd\u529b\u4ee5\u53ca\u591a\u7ef4\u5ea6\u8d44\u6e90\u9694\u79bb\u7b49\u80fd\u529b\u4e8e\u4e00\u8eab\uff0c\u91c7\u7528\u65e0\u5171\u4eab\u7684\u96c6\u7fa4\u67b6\u6784\uff0c\u9002\u7528\u4e8ePB\u7ea7\u6d77\u91cf HTAP \u573a\u666f\u3002</p> <p>\u9519\u8bef\uff1a</p> <p>OpenTenBase\u662f\u5f00\u6e90\u7684\u5206\u5e03\u5f0f\u6570\u636e\u5e93\uff0c\u53ef\u4ee5\u8f7b\u677e\u5e94\u5bf9\u4ebf\u7ea7\u6570\u636e\u7684\u5b58\u50a8\u3001\u5206\u6790\u548c\u67e5\u8be2\u3002\u96c6\u9ad8\u6269\u5c55\u6027\u3001\u9ad8SQL\u517c\u5bb9\u5ea6\u3001\u5b8c\u6574\u7684\u5206\u5e03\u5f0f\u4e8b\u52a1\u652f\u6301\u3001\u591a\u7ea7\u5bb9\u707e\u80fd\u529b\u4ee5\u53ca\u591a\u7ef4\u5ea6\u8d44\u6e90\u9694\u79bb\u7b49\u80fd\u529b\u4e8e\u4e00\u8eab\uff0c\u91c7\u7528\u65e0\u5171\u4eab\u7684\u96c6\u7fa4\u67b6\u6784\uff0c\u9002\u7528\u4e8ePB\u7ea7\u6d77\u91cf HTAP\u573a\u666f\u3002</p> <p>OpenTenBase \u662f\u5f00\u6e90\u7684\u5206\u5e03\u5f0f\u6570\u636e\u5e93\uff0c\u53ef\u4ee5\u8f7b\u677e\u5e94\u5bf9\u4ebf\u7ea7\u6570\u636e\u7684\u5b58\u50a8\u3001\u5206\u6790\u548c\u67e5\u8be2\u3002\u96c6\u9ad8\u6269\u5c55\u6027\u3001\u9ad8SQL\u517c\u5bb9\u5ea6\u3001\u5b8c\u6574\u7684\u5206\u5e03\u5f0f\u4e8b\u52a1\u652f\u6301\u3001\u591a\u7ea7\u5bb9\u707e\u80fd\u529b\u4ee5\u53ca\u591a\u7ef4\u5ea6\u8d44\u6e90\u9694\u79bb\u7b49\u80fd\u529b\u4e8e\u4e00\u8eab\uff0c\u91c7\u7528\u65e0\u5171\u4eab\u7684\u96c6\u7fa4\u67b6\u6784\uff0c\u9002\u7528\u4e8ePB\u7ea7\u6d77\u91cfHTAP \u573a\u666f\u3002</p> <p>\u5b8c\u6574\u7684\u6b63\u786e\u7528\u6cd5\uff1a</p> <p>OpenTenBase \u662f\u5f00\u6e90\u7684\u5206\u5e03\u5f0f\u6570\u636e\u5e93\uff0c\u53ef\u4ee5\u8f7b\u677e\u5e94\u5bf9\u4ebf\u7ea7\u6570\u636e\u7684\u5b58\u50a8\u3001\u5206\u6790\u548c\u67e5\u8be2\u3002\u96c6\u9ad8\u6269\u5c55\u6027\u3001\u9ad8SQL\u517c\u5bb9\u5ea6\u3001\u5b8c\u6574\u7684\u5206\u5e03\u5f0f\u4e8b\u52a1\u652f\u6301\u3001\u591a\u7ea7\u5bb9\u707e\u80fd\u529b\u4ee5\u53ca\u591a\u7ef4\u5ea6\u8d44\u6e90\u9694\u79bb\u7b49\u80fd\u529b\u4e8e\u4e00\u8eab\uff0c\u91c7\u7528\u65e0\u5171\u4eab\u7684\u96c6\u7fa4\u67b6\u6784\uff0c\u9002\u7528\u4e8ePB\u7ea7\u6d77\u91cf HTAP \u573a\u666f\u3002</p>"},{"location":"contribution/docs-format-guide/#_7","title":"\u4e2d\u6587\u4e0e\u6570\u5b57\u4e4b\u95f4\u9700\u8981\u589e\u52a0\u7a7a\u683c","text":"<p>\u6b63\u786e\uff1a</p> <p>OpenTenBase \u6709\u8d85\u8fc7 10 \u5e74\u7684\u53d1\u5c55\u5386\u53f2\u3002</p> <p>\u9519\u8bef\uff1a</p> <p>OpenTenBase \u6709\u8d85\u8fc710\u5e74\u7684\u53d1\u5c55\u5386\u53f2\u3002</p>"},{"location":"contribution/docs-format-guide/#_8","title":"\u6570\u5b57\u4e0e\u5355\u4f4d\u4e4b\u95f4\u9700\u8981\u589e\u52a0\u7a7a\u683c","text":"<p>\u6b63\u786e\uff1a</p> <p>\u4f7f\u7528 4k \u6247\u533a\u9a71\u52a8\u5668\u65f6\uff0c\u6700\u5927\u5927\u5c0f\u4e3a 16 TiB\u3002</p> <p>\u9519\u8bef\uff1a</p> <p>\u4f7f\u7528 4k \u6247\u533a\u9a71\u52a8\u5668\u65f6\uff0c\u6700\u5927\u5927\u5c0f\u4e3a 16TiB\u3002</p> <p>\u4f8b\u5916\uff1a\u5ea6\u6570\uff0f\u767e\u5206\u6bd4\u4e0e\u6570\u5b57\u4e4b\u95f4\u4e0d\u9700\u8981\u589e\u52a0\u7a7a\u683c\uff1a</p> <p>\u6b63\u786e\uff1a</p> <p>\u89d2\u5ea6\u4e3a 90\u00b0 \u7684\u89d2\uff0c\u5c31\u662f\u76f4\u89d2\u3002</p> <p>\u65b0 MacBook Pro \u6709 15% \u7684 CPU \u6027\u80fd\u63d0\u5347\u3002</p> <p>\u9519\u8bef\uff1a</p> <p>\u89d2\u5ea6\u4e3a 90 \u00b0 \u7684\u89d2\uff0c\u5c31\u662f\u76f4\u89d2\u3002</p> <p>\u65b0 MacBook Pro \u6709 15 % \u7684 CPU \u6027\u80fd\u63d0\u5347\u3002</p>"},{"location":"contribution/docs-format-guide/#_9","title":"\u5168\u89d2\u6807\u70b9\u4e0e\u5176\u4ed6\u5b57\u7b26\u4e4b\u95f4\u4e0d\u52a0\u7a7a\u683c","text":"<p>\u6b63\u786e\uff1a</p> <p>chrony \u662f\u7f51\u7edc\u65f6\u95f4\u534f\u8bae\uff08NTP\uff09\u7684\u901a\u7528\u5b9e\u73b0\u3002</p> <p>\u9519\u8bef\uff1a</p> <p>chrony \u662f\u7f51\u7edc\u65f6\u95f4\u534f\u8bae\uff08 NTP \uff09\u7684\u901a\u7528\u5b9e\u73b0\u3002</p>"},{"location":"contribution/docs-format-guide/#text-spacing","title":"\u7528 <code>text-spacing</code> \u6765\u633d\u6551\uff1f","text":"<p>CSS Text Module Level 4 \u7684 <code>text-spacing</code> \u548c Microsoft \u7684 <code>-ms-text-autospace</code> \u53ef\u4ee5\u5b9e\u73b0\u81ea\u52a8\u4e3a\u4e2d\u82f1\u6587\u4e4b\u95f4\u589e\u52a0\u7a7a\u767d\u3002\u4e0d\u8fc7\u76ee\u524d\u5e76\u672a\u666e\u53ca\uff0c\u53e6\u5916\u5728\u5176\u4ed6\u5e94\u7528\u573a\u666f\uff0c\u4f8b\u5982 macOS\u3001iOS\u3001Windows \u7b49\u7528\u6237\u754c\u9762\u76ee\u524d\u5e76\u4e0d\u5b58\u5728\u8fd9\u4e2a\u7279\u6027\uff0c\u6240\u4ee5\u8bf7\u7ee7\u7eed\u4fdd\u6301\u968f\u624b\u52a0\u7a7a\u683c\u7684\u4e60\u60ef\u3002</p>"},{"location":"contribution/docs-format-guide/#_10","title":"\u6807\u70b9\u7b26\u53f7","text":""},{"location":"contribution/docs-format-guide/#_11","title":"\u5168\u89d2\u548c\u534a\u89d2","text":"<p>\u4e0d\u660e\u767d\u4ec0\u4e48\u662f\u5168\u89d2\uff08\u5168\u5f62\uff09\u4e0e\u534a\u89d2\uff08\u534a\u5f62\uff09\u7b26\u53f7\uff1f\u8bf7\u67e5\u770b\u7ef4\u57fa\u767e\u79d1\u6761\u76ee\u300e\u5168\u89d2\u548c\u534a\u89d2\u300f\u3002</p>"},{"location":"contribution/docs-format-guide/#_12","title":"\u4f7f\u7528\u5168\u89d2\u4e2d\u6587\u6807\u70b9","text":"<p>\u6b63\u786e\uff1a</p> <p>chrony \u662f\u7f51\u7edc\u65f6\u95f4\u534f\u8bae\uff08NTP\uff09\u7684\u901a\u7528\u5b9e\u73b0\u3002</p> <p>\u9519\u8bef\uff1a</p> <p>chrony \u662f\u7f51\u7edc\u65f6\u95f4\u534f\u8bae (NTP) \u7684\u901a\u7528\u5b9e\u73b0\u3002</p> <p>chrony \u662f\u7f51\u7edc\u65f6\u95f4\u534f\u8bae(NTP)\u7684\u901a\u7528\u5b9e\u73b0\u3002</p>"},{"location":"contribution/docs-format-guide/#_13","title":"\u6570\u5b57\u4f7f\u7528\u534a\u89d2\u5b57\u7b26","text":"<p>\u6b63\u786e\uff1a</p> <p>\u4f7f\u7528 4k \u6247\u533a\u9a71\u52a8\u5668\u65f6\uff0c\u6700\u5927\u5927\u5c0f\u4e3a 16 TiB\u3002</p> <p>\u9519\u8bef\uff1a</p> <p>\u4f7f\u7528 \uff14k \u6247\u533a\u9a71\u52a8\u5668\u65f6\uff0c\u6700\u5927\u5927\u5c0f\u4e3a \uff11\uff16 TiB\u3002</p> <p>\u4f8b\u5916\uff1a\u5728\u8bbe\u8ba1\u7a3f\u3001\u5ba3\u4f20\u6d77\u62a5\u4e2d\u5982\u51fa\u73b0\u6781\u5c11\u91cf\u6570\u5b57\u7684\u60c5\u5f62\u65f6\uff0c\u4e3a\u65b9\u4fbf\u6587\u5b57\u5bf9\u9f50\uff0c\u662f\u53ef\u4ee5\u4f7f\u7528\u5168\u89d2\u6570\u5b57\u7684\u3002</p>"},{"location":"contribution/docs-format-guide/#_14","title":"\u9047\u5230\u5b8c\u6574\u7684\u82f1\u6587\u6574\u53e5\u3001\u7279\u6b8a\u540d\u8bcd\uff0c\u5176\u5185\u5bb9\u4f7f\u7528\u534a\u89d2\u6807\u70b9","text":"<p>\u6b63\u786e\uff1a</p> <p>\u4e54\u5e03\u65af\u90a3\u53e5\u8bdd\u662f\u600e\u4e48\u8bf4\u7684\uff1f\u300cStay hungry, stay foolish.\u300d</p> <p>\u63a8\u8350\u4f60\u9605\u8bfb\u300aHackers &amp; Painters: Big Ideas from the Computer Age\u300b\uff0c\u975e\u5e38\u7684\u6709\u8da3\u3002</p> <p>\u9519\u8bef\uff1a</p> <p>\u4e54\u5e03\u65af\u90a3\u53e5\u8bdd\u662f\u600e\u4e48\u8bf4\u7684\uff1f\u300cStay hungry\uff0cstay foolish\u3002\u300d</p> <p>\u63a8\u8350\u4f60\u9605\u8bfb\u300aHackers\uff06Painters\uff1aBig Ideas from the Computer Age\u300b\uff0c\u975e\u5e38\u7684\u6709\u8da3\u3002</p>"},{"location":"contribution/docs-format-guide/#_15","title":"\u540d\u8bcd","text":""},{"location":"contribution/docs-format-guide/#_16","title":"\u4e13\u6709\u540d\u8bcd\u4f7f\u7528\u6b63\u786e\u7684\u5927\u5c0f\u5199","text":"<p>\u5927\u5c0f\u5199\u76f8\u5173\u7528\u6cd5\u539f\u5c5e\u4e8e\u82f1\u6587\u4e66\u5199\u8303\u7574\uff0c\u4e0d\u5c5e\u4e8e\u672c\u6587\u8ba8\u8bba\u5185\u5bb9\uff0c\u5728\u8fd9\u91cc\u53ea\u5bf9\u90e8\u5206\u6613\u9519\u7528\u6cd5\u8fdb\u884c\u7b80\u8ff0\u3002</p> <p>\u6b63\u786e\uff1a</p> <p>\u6b22\u8fce\u6765\u5230 OpenTenBase \u6587\u6863\u5e93\uff01</p> <p>\u9519\u8bef\uff1a</p> <p>\u6b22\u8fce\u6765\u5230 opentenbase \u6587\u6863\u5e93\uff01</p> <p>\u6b22\u8fce\u6765\u5230 OPENTENBASE \u6587\u6863\u5e93\uff01</p> <p>\u6b22\u8fce\u6765\u5230 openTenBase \u6587\u6863\u5e93\uff01</p> <p>\u6b22\u8fce\u6765\u5230 openTenbase \u6587\u6863\u5e93\uff01</p> <p>\u6ce8\u610f\uff1a\u5f53\u7f51\u9875\u4e2d\u9700\u8981\u914d\u5408\u6574\u4f53\u89c6\u89c9\u98ce\u683c\u800c\u51fa\u73b0\u5168\u90e8\u5927\u5199\uff0f\u5c0f\u5199\u7684\u60c5\u5f62\uff0cHTML \u4e2d\u8bf7\u4f7f\u7528\u6807\u6dee\u7684\u5927\u5c0f\u5199\u89c4\u8303\u8fdb\u884c\u4e66\u5199\uff1b\u5e76\u901a\u8fc7 <code>text-transform: uppercase;</code>\uff0f<code>text-transform: lowercase;</code> \u5bf9\u8868\u73b0\u5f62\u5f0f\u8fdb\u884c\u5b9a\u4e49\u3002</p>"},{"location":"contribution/docs-format-guide/#_17","title":"\u4e0d\u8981\u4f7f\u7528\u4e0d\u5730\u9053\u7684\u7f29\u5199","text":"<p>\u6b63\u786e\uff1a</p> <p>\u6211\u4eec\u9700\u8981\u4e00\u4f4d\u719f\u6089 TypeScript\u3001HTML5\uff0c\u81f3\u5c11\u7406\u89e3\u4e00\u79cd\u6846\u67b6\uff08\u5982 React\u3001Next.js\uff09\u7684\u524d\u7aef\u5f00\u53d1\u8005\u3002</p> <p>\u9519\u8bef\uff1a</p> <p>\u6211\u4eec\u9700\u8981\u4e00\u4f4d\u719f\u6089 Ts\u3001h5\uff0c\u81f3\u5c11\u7406\u89e3\u4e00\u79cd\u6846\u67b6\uff08\u5982 RJS\u3001nextjs\uff09\u7684 FED\u3002</p>"},{"location":"contribution/docs-format-guide/#_18","title":"\u4e89\u8bae","text":"<p>\u4ee5\u4e0b\u7528\u6cd5\u7565\u5e26\u6709\u4e2a\u4eba\u8272\u5f69\uff0c\u5373\uff1a\u65e0\u8bba\u662f\u5426\u9075\u5faa\u4e0b\u8ff0\u89c4\u5219\uff0c\u4ece\u8bed\u6cd5\u7684\u89d2\u5ea6\u6765\u8bb2\u90fd\u662f\u6b63\u786e\u7684\u3002</p>"},{"location":"contribution/docs-format-guide/#_19","title":"\u94fe\u63a5\u4e4b\u95f4\u589e\u52a0\u7a7a\u683c","text":"<p>!!! note \"\u5907\u6ce8\"     \u6b64\u5904\u6211\u4eec\u5efa\u8bae\u5c06\u94fe\u63a5\u5185\u5bb9\u5f53\u4f5c\u666e\u901a\u5185\u5bb9\u5904\u7406\uff0c\u5373\uff1a\u5982\u679c\u524d\u540e\u5185\u5bb9\u5747\u4e3a\u4e2d\u6587\u4e14\u94fe\u63a5\u540d\u79f0\u4e3a\u4e2d\u6587\uff0c\u5219\u4e0d\u9700\u8981\u5728\u94fe\u63a5\u524d\u540e\u589e\u52a0\u7a7a\u683c\u3002\u5426\u5219\uff0c\u5728\u82f1\u8bed/\u6570\u5b57\u4e0e\u4e2d\u6587\u4e4b\u95f4\u589e\u52a0\u7a7a\u683c\u3002</p> <p>\u7528\u6cd5\uff1a</p> <p>\u8bf7 \u63d0\u4ea4\u4e00\u4e2a issue \u53cd\u9988\u76f8\u5173\u95ee\u9898\u3002</p> <p>\u8bbf\u95ee\u6211\u4eec\u7f51\u7ad9\u7684\u6700\u65b0\u52a8\u6001\uff0c\u8bf7 \u70b9\u51fb\u8fd9\u91cc \u8fdb\u884c\u8ba2\u9605\uff01</p> <p>\u5bf9\u6bd4\u7528\u6cd5\uff1a</p> <p>\u8bf7\u63d0\u4ea4\u4e00\u4e2a issue\u53cd\u9988\u76f8\u5173\u95ee\u9898\u3002</p> <p>\u8bbf\u95ee\u6211\u4eec\u7f51\u7ad9\u7684\u6700\u65b0\u52a8\u6001\uff0c\u8bf7\u70b9\u51fb\u8fd9\u91cc\u8fdb\u884c\u8ba2\u9605\uff01</p>"},{"location":"contribution/docs-format-guide/#_20","title":"\u7b80\u4f53\u4e2d\u6587\u4f7f\u7528\u76f4\u89d2\u5f15\u53f7","text":"<p>!!! note \"\u5907\u6ce8\"     \u6b64\u5904\u6211\u4eec\u5efa\u8bae\u4f7f\u7528\u666e\u901a\u5f15\u53f7\uff08\u201c\u201d \u4e0e \u2018\u2019\uff09\u3002</p> <p>\u7528\u6cd5\uff1a</p> <p>\u300c\u8001\u5e08\uff0c\u300e\u6709\u6761\u4e0d\u7d0a\u300f\u7684\u300e\u7d0a\u300f\u662f\u4ec0\u4e48\u610f\u601d\uff1f\u300d</p> <p>\u5bf9\u6bd4\u7528\u6cd5\uff1a</p> <p>\u201c\u8001\u5e08\uff0c\u2018\u6709\u6761\u4e0d\u7d0a\u2019\u7684\u2018\u7d0a\u2019\u662f\u4ec0\u4e48\u610f\u601d\uff1f\u201d</p>"},{"location":"contribution/docs-format-guide/#_21","title":"\u5de5\u5177","text":"\u4ed3\u5e93 \u8bed\u8a00 vinta/paranoid-auto-spacing JavaScript serkodev/vue-pangu Vue.js (Web Converter) huei90/pangu.node Node.js huacnlee/auto-correct Ruby huacnlee/autocorrect Rust, WASM, CLI huacnlee/go-auto-correct Go sparanoid/space-lover PHP (WordPress) nauxliu/auto-correct PHP jxlwqq/chinese-typesetting PHP hotoo/pangu.vim Vim sparanoid/grunt-auto-spacing Node.js (Grunt) hjiang/scripts/add-space-between-latin-and-cjk Python hustcc/hint Python studygolang/autocorrect Go n0vad3v/Tekorret Python VS Code - huacnlee.auto-correct VS Code Extension"},{"location":"contribution/docs-format-guide/#_22","title":"\u53c2\u8003\u6587\u732e","text":"<ul> <li>Guidelines for Using Capital Letters - ThoughtCo.</li> <li>Letter case - Wikipedia</li> <li>Punctuation - Oxford Dictionaries</li> <li>Punctuation - The Purdue OWL</li> <li>How to Use English Punctuation Correctly - wikiHow</li> <li>\u683c\u5f0f - openSUSE</li> <li>\u5168\u5f62\u548c\u534a\u5f62 - \u7ef4\u57fa\u767e\u79d1</li> <li>\u5f15\u53f7 - \u7ef4\u57fa\u767e\u79d1</li> <li>\u7591\u95ee\u60ca\u53f9\u53f7 - \u7ef4\u57fa\u767e\u79d1</li> </ul>"},{"location":"contribution/how-to/","title":"\u5982\u4f55\u8d21\u732e OpenTenBase","text":""},{"location":"contribution/how-to/#_1","title":"\u8d21\u732e\u6587\u6863","text":"<ol> <li>Fork \u6587\u6863\u4ed3\u5e93</li> <li> <p>\u5c06\u60a8 Fork \u540e\u7684\u6587\u6863\u4ed3\u5e93 clone \u81f3\u672c\u5730</p> <p><code>git clone git@github.com:yourname/docs.git # (1)</code></p> <p>1.\uff08\u4f60\u9700\u8981\u5c06 <code>yourname</code> \u66f4\u6362\u4e3a\u4f60\u81ea\u5df1\u7684 GitHub \u7528\u6237\u540d\uff09</p> </li> <li> <p>\u5b89\u88c5\u73af\u5883</p> <ul> <li>\u5b89\u88c5 Python 3.x</li> <li>\u5b89\u88c5 mkdocs-material \u53ca\u591a\u8bed\u8a00\u63d2\u4ef6</li> </ul> <p><code>pip install mkdocs-material mkdocs-static-i18n</code></p> <ul> <li>\u5728\u672c\u5730\u8fd0\u884c\u9884\u89c8\u670d\u52a1\u5668</li> </ul> <p><code>mkdocs serve</code></p> </li> <li> <p>\u53ef\u4ee5\u5f00\u59cb\u8d21\u732e\u5566\uff01</p> <ul> <li>\u5177\u4f53 markdown \u53ca\u672c\u6587\u6863\u7ad9\u652f\u6301\u7684\u663e\u793a\u7279\u6027\u53ef\u67e5\u770b mkdocs-material \u7684\u8bf4\u660e\u6587\u6863\u3002</li> <li>\u8bf7\u6ce8\u610f\u9075\u5b88\u672c\u6587\u6863\u7ad9\u7684 \u683c\u5f0f\u624b\u518c\u3002</li> </ul> </li> <li> <p>\u5728\u672c\u5730\u901a\u8fc7\u9884\u89c8\u670d\u52a1\u5668\u786e\u8ba4\u5185\u5bb9\u4e0e\u683c\u5f0f\u6b63\u786e\u540e\uff0ccommit \u60a8\u7684\u4fee\u6539\u3002</p> </li> <li>\u5411\u6587\u6863\u4ed3\u5e93\u63d0\u4ea4 Pull Request\uff0c\u5f85\u7ef4\u62a4\u8005\u5ba1\u6838\u540e\u5373\u53ef\u5408\u5e76\u3002</li> </ol>"},{"location":"contribution/how-to/#_2","title":"\u4e3a\u4ee3\u7801\u505a\u51fa\u8d21\u732e","text":"<p>\u5982\u679c\u60a8\u6709\u597d\u7684\u610f\u89c1\u6216\u5efa\u8bae\uff0c\u6b22\u8fce\u521b\u5efaIssues\u6216Pull Requests\uff0c\u4e3a OpenTenBase \u5f00\u6e90\u793e\u533a\u505a\u51fa\u8d21\u732e\u3002OpenTenBase \u4e0d\u65ad\u62db\u52df\u8d21\u732e\u8005\uff0c\u54ea\u6015\u662f\u56de\u7b54 issue \u4e2d\u7684\u95ee\u9898\uff0c\u6216\u8005\u505a\u4e00\u4e9b\u7b80\u5355\u7684 bug \u4fee\u590d\uff0c\u90fd\u4f1a\u5bf9 OpenTenBase \u6709\u5f88\u5927\u7684\u5e2e\u52a9\u3002 \u817e\u8baf\u5f00\u6e90\u6fc0\u52b1\u8ba1\u5212 \u9f13\u52b1\u5f00\u53d1\u8005\u53c2\u4e0e\u548c\u8d21\u732e\uff0c\u671f\u5f85\u60a8\u7684\u52a0\u5165\u3002</p>"},{"location":"contribution/how-to/#issue","title":"Issue","text":""},{"location":"contribution/how-to/#_3","title":"\u5bf9\u4e8e\u8d21\u732e\u8005","text":"<p>\u63d0\u4ea4\u95ee\u9898\u524d\u8bf7\u786e\u4fdd\u6ee1\u8db3\u4ee5\u4e0b\u6761\u4ef6\uff1a</p> <ul> <li>\u5fc5\u987b\u662f\u9519\u8bef\u6216\u65b0\u529f\u80fd</li> <li>\u5df2\u5728 issue \u4e2d\u641c\u7d22\u8fc7\uff0c\u6ca1\u6709\u627e\u5230\u7c7b\u4f3c\u7684\u95ee\u9898\u6216\u89e3\u51b3\u65b9\u6848</li> <li>\u521b\u5efa\u65b0\u95ee\u9898\u65f6\uff0c\u8bf7\u63d0\u4f9b\u8be6\u7ec6\u63cf\u8ff0\u3001\u622a\u56fe\u6216\u77ed\u89c6\u9891\uff0c\u4ee5\u5e2e\u52a9\u6211\u4eec\u5b9a\u4f4d\u95ee\u9898</li> </ul>"},{"location":"contribution/how-to/#pull-request","title":"Pull Request","text":"<p>\u6211\u4eec\u6b22\u8fce\u5927\u5bb6\u8d21\u732e\u4ee3\u7801\uff0c\u8ba9\u6211\u4eec\u7684\u4ea7\u54c1\u66f4\u52a0\u5f3a\u5927\u3002\u4ee3\u7801\u56e2\u961f\u4f1a\u76d1\u63a7\u6240\u6709\u7684 Pull Request \uff0c\u6211\u4eec\u4f1a\u505a\u76f8\u5e94\u7684\u4ee3\u7801\u68c0\u67e5\u548c\u6d4b\u8bd5\u3002\u6d4b\u8bd5\u901a\u8fc7\u540e\uff0c\u6211\u4eec\u4f1a\u63a5\u53d7 PR \uff0c\u4f46\u4e0d\u4f1a\u7acb\u5373\u5408\u5e76\u5230 master \u5206\u652f\u3002 \u5b8c\u6210 PR \u524d\u8bf7\u786e\u8ba4\uff1a</p> <ol> <li>\u4ece master \u5206\u652f\u5206\u53c9\u51fa\u4f60\u81ea\u5df1\u7684\u5206\u652f\u3002</li> <li>\u4fee\u6539\u4ee3\u7801\u540e\u8bf7\u4fee\u6539\u76f8\u5e94\u7684\u6587\u6863\u548c\u6ce8\u91ca\u3002</li> <li>\u8bf7\u5728\u65b0\u521b\u5efa\u7684\u6587\u4ef6\u4e2d\u6dfb\u52a0\u8bb8\u53ef\u8bc1\u548c\u7248\u6743\u58f0\u660e\u3002</li> <li>\u4fdd\u8bc1\u4ee3\u7801\u98ce\u683c\u4e00\u81f4\u3002</li> <li>\u8fdb\u884c\u5145\u5206\u7684\u6d4b\u8bd5\u3002</li> <li>\u7136\u540e\uff0c\u60a8\u53ef\u4ee5\u5c06\u4ee3\u7801\u63d0\u4ea4\u5230dev\u5206\u652f\u3002</li> </ol>"},{"location":"guide/01-quickstart/","title":"\u5feb\u901f\u5165\u95e8","text":""},{"location":"guide/01-quickstart/#opentenbase","title":"\u4ec0\u4e48\u662fOpenTenBase","text":"<p>OpenTenBase \u662f\u4e00\u4e2a\u63d0\u4f9b\u5199\u53ef\u9760\u6027\uff0c\u591a\u4e3b\u8282\u70b9\u6570\u636e\u540c\u6b65\u7684\u5173\u7cfb\u6570\u636e\u5e93\u96c6\u7fa4\u5e73\u53f0\u3002\u4f60\u53ef\u4ee5\u5c06 OpenTenBase \u914d\u7f6e\u4e00\u53f0\u6216\u8005\u591a\u53f0\u4e3b\u673a\u4e0a\uff0c OpenTenBase \u6570\u636e\u5b58\u50a8\u5728\u591a\u53f0\u7269\u7406\u4e3b\u673a\u4e0a\u9762\u3002\u6570\u636e\u8868\u7684\u5b58\u50a8\u6709\u4e24\u79cd\u65b9\u5f0f\uff0c \u5206\u522b\u662f distributed \u6216\u8005 replicated \uff0c\u5f53\u5411OpenTenBase\u53d1\u9001\u67e5\u8be2 SQL\u65f6\uff0c OpenTenBase \u4f1a\u81ea\u52a8\u5411\u6570\u636e\u8282\u70b9\u53d1\u51fa\u67e5\u8be2\u8bed\u53e5\u5e76\u83b7\u53d6\u6700\u7ec8\u7ed3\u679c\u3002</p> <p>OpenTenBase \u91c7\u7528\u5206\u5e03\u5f0f\u96c6\u7fa4\u67b6\u6784\uff08\u5982\u4e0b\u56fe\uff09\uff0c \u8be5\u67b6\u6784\u5206\u5e03\u5f0f\u4e3a\u65e0\u5171\u4eab(share nothing)\u6a21\u5f0f\uff0c\u8282\u70b9\u4e4b\u95f4\u76f8\u5e94\u72ec\u7acb\uff0c\u5404\u81ea\u5904\u7406\u81ea\u5df1\u7684\u6570\u636e\uff0c\u5904\u7406\u540e\u7684\u7ed3\u679c\u53ef\u80fd\u5411\u4e0a\u5c42\u6c47\u603b\u6216\u5728\u8282\u70b9\u95f4\u6d41\u8f6c\uff0c\u5404\u5904\u7406\u5355\u5143\u4e4b\u95f4\u901a\u8fc7\u7f51\u7edc\u534f\u8bae\u8fdb\u884c\u901a\u4fe1\uff0c\u5e76\u884c\u5904\u7406\u548c\u6269\u5c55\u80fd\u529b\u66f4\u597d\uff0c\u8fd9\u4e5f\u610f\u5473\u7740\u53ea\u9700\u8981\u7b80\u5355\u7684x86\u670d\u52a1\u5668\u5c31\u53ef\u4ee5\u90e8\u7f72 OpenTenBase \u6570\u636e\u5e93\u96c6\u7fa4</p> <p></p> <p>\u4e0b\u9762\u7b80\u5355\u89e3\u8bfb\u4e00\u4e0bOpenTenBase\u7684\u4e09\u5927\u6a21\u5757</p> <ul> <li> <p>Coordinator\uff1a\u534f\u8c03\u8282\u70b9\uff08\u7b80\u79f0CN\uff09</p> <p>\u4e1a\u52a1\u8bbf\u95ee\u5165\u53e3\uff0c\u8d1f\u8d23\u6570\u636e\u7684\u5206\u53d1\u548c\u67e5\u8be2\u89c4\u5212\uff0c\u591a\u4e2a\u8282\u70b9\u4f4d\u7f6e\u5bf9\u7b49\uff0c\u6bcf\u4e2a\u8282\u70b9\u90fd\u63d0\u4f9b\u76f8\u540c\u7684\u6570\u636e\u5e93\u89c6\u56fe\uff1b\u5728\u529f\u80fd\u4e0aCN\u4e0a\u53ea\u5b58\u50a8\u7cfb\u7edf\u7684\u5168\u5c40\u5143\u6570\u636e\uff0c\u5e76\u4e0d\u5b58\u50a8\u5b9e\u9645\u7684\u4e1a\u52a1\u6570\u636e\u3002</p> </li> <li> <p>Datanode\uff1a\u6570\u636e\u8282\u70b9\uff08\u7b80\u79f0DN\uff09</p> <p>\u6bcf\u4e2a\u8282\u70b9\u8fd8\u5b58\u50a8\u4e1a\u52a1\u6570\u636e\u7684\u5206\u7247\u5728\u529f\u80fd\u4e0a\uff0cDN\u8282\u70b9\u8d1f\u8d23\u5b8c\u6210\u6267\u884c\u534f\u8c03\u8282\u70b9\u5206\u53d1\u7684\u6267\u884c\u8bf7\u6c42\u3002 </p> </li> <li> <p>GTM:\u5168\u5c40\u4e8b\u52a1\u7ba1\u7406\u5668(Global Transaction Manager)</p> <p>\u8d1f\u8d23\u7ba1\u7406\u96c6\u7fa4\u4e8b\u52a1\u4fe1\u606f\uff0c\u540c\u65f6\u7ba1\u7406\u96c6\u7fa4\u7684\u5168\u5c40\u5bf9\u8c61\uff0c\u6bd4\u5982\u5e8f\u5217\u7b49\u3002</p> </li> </ul> <p>\u63a5\u4e0b\u6765\uff0c\u8ba9\u6211\u4eec\u6765\u770b\u770b\u5982\u4f55\u4ece\u6e90\u7801\u5f00\u59cb\uff0c\u5b8c\u6210\u5230OpenTenBase\u96c6\u7fa4\u73af\u5883\u7684\u642d\u5efa\u3002</p>"},{"location":"guide/01-quickstart/#opentenbase_1","title":"OpenTenBase\u6e90\u7801\u7f16\u8bd1\u5b89\u88c5","text":""},{"location":"guide/01-quickstart/#_2","title":"\u7cfb\u7edf\u8981\u6c42:","text":"<p>Memory: 4G RAM minimum</p> <p>OS: TencentOS 2, TencentOS 3, OpenCloudOS, CentOS 7, CentOS 8, Ubuntu</p>"},{"location":"guide/01-quickstart/#_3","title":"\u5b89\u88c5\u4f9d\u8d56","text":"<p><code>yum -y install gcc make readline-devel zlib-devel openssl-devel uuid-devel bison flex git</code></p> <p>\u6216</p> <p><code>apt install -y gcc make libreadline-dev zlib1g-dev libssl-dev libossp-uuid-dev bison flex git</code></p> <ul> <li> <p>\u521b\u5efaopentenbase\u7528\u6237</p> <p>\u6ce8\u610f\uff1a\u6240\u6709\u9700\u8981\u5b89\u88c5OpenTenBase\u96c6\u7fa4\u7684\u673a\u5668\u4e0a\u90fd\u9700\u8981\u521b\u5efa</p> </li> </ul> <pre><code>mkdir /data\nuseradd -d /data/opentenbase -s /bin/bash -m opentenbase\npasswd opentenbase # set password\n</code></pre> <ul> <li>\u6e90\u7801\u83b7\u53d6</li> </ul> <pre><code>git clone https://github.com/OpenTenBase/OpenTenBase\n</code></pre> <ul> <li>\u6e90\u7801\u7f16\u8bd1</li> </ul> <pre><code>cd ${SOURCECODE_PATH}\nrm -rf ${INSTALL_PATH}/opentenbase_bin_v2.0\nchmod +x configure*\n./configure --prefix=${INSTALL_PATH}/opentenbase_bin_v2.0  --enable-user-switch --with-openssl  --with-ossp-uuid CFLAGS=-g\nmake clean\nmake -sj\nmake install\nchmod +x contrib/pgxc_ctl/make_signature\ncd contrib\nmake -sj\nmake install\n</code></pre> <p>\u672c\u6587\u7684\u4f7f\u7528\u73af\u5883\u4e2d\uff0c\u4e0a\u8ff0\u4e24\u4e2a\u53c2\u6570\u5982\u4e0b</p> <pre><code>${SOURCECODE_PATH}=/data/opentenbase/OpenTenBase    \n${INSTALL_PATH}=/data/opentenbase/install\n</code></pre> <ul> <li> <p>\u96c6\u7fa4\u5b89\u88c5</p> <ul> <li>\u96c6\u7fa4\u89c4\u5212</li> </ul> <p>\u4e0b\u9762\u4ee5\u4e24\u53f0\u670d\u52a1\u5668\u4e0a\u642d\u5efa1GTM\u4e3b\uff0c1GTM\u5907\uff0c2CN\u4e3b\uff08CN\u4e3b\u4e4b\u95f4\u5bf9\u7b49\uff0c\u56e0\u6b64\u65e0\u9700\u5907CN\uff09\uff0c2DN\u4e3b\uff0c2DN\u5907\u7684\u96c6\u7fa4\uff0c\u8be5\u96c6\u7fa4\u4e3a\u5177\u5907\u5bb9\u707e\u80fd\u529b\u7684\u6700\u5c0f\u914d\u7f6e</p> </li> </ul> <pre><code>\u673a\u56681\uff1a10.215.147.158\n\u673a\u56682\uff1a10.240.138.159\n</code></pre> <p>\u96c6\u7fa4\u89c4\u5212\u5982\u4e0b\uff1a</p> \u8282\u70b9\u540d\u79f0 IP \u6570\u636e\u76ee\u5f55 GTM master 10.215.147.158 /data/opentenbase/data/gtm GTM slave 10.240.138.159 /data/opentenbase/data/gtm CN1 10.215.147.158 /data/opentenbase/data/coord CN2 10.240.138.159 /data/opentenbase/data/coord DN1 master 10.215.147.158 /data/opentenbase/data/dn001 DN1 slave 10.240.138.159 /data/opentenbase/data/dn001 DN2 master 10.240.138.159 /data/opentenbase/data/dn002 DN2 slave 10.215.147.158 /data/opentenbase/data/dn002 <p>\u793a\u610f\u56fe</p> <p></p> <ul> <li>\u7981\u7528 SELinux \u548c \u9632\u706b\u5899 (\u53ef\u9009)</li> </ul> <pre><code>vi /etc/selinux/config # disable SELinux, change SELINUX=enforcing to SELINUX=disabled\n# disable firewall, for Ubuntu, change firewalld to ufw\nsystemctl disable firewalld\nsystemctl stop firewalld\n</code></pre> <ul> <li>\u673a\u5668\u95f4\u7684ssh\u4e92\u4fe1\u914d\u7f6e</li> </ul> <pre><code>su opentenbase\nssh-keygen -t rsa\nssh-copy-id -i ~/.ssh/id_rsa.pub destination-user@destination-server\n</code></pre> <pre><code>  \u53c2\u8003[Linux ssh\u4e92\u4fe1\u914d\u7f6e](https://blog.csdn.net/chenghuikai/article/details/52807074)\n</code></pre> <ul> <li>\u73af\u5883\u53d8\u91cf\u914d\u7f6e</li> </ul> <p>\u96c6\u7fa4\u6240\u6709\u673a\u5668\u90fd\u9700\u8981\u914d\u7f6e</p> <pre><code>[opentenbase@localhost ~]$ vim ~/.bashrc\nexport OPENTENBASE_HOME=/data/opentenbase/install/opentenbase_bin_v2.0\nexport PATH=$OPENTENBASE_HOME/bin:$PATH\nexport LD_LIBRARY_PATH=$OPENTENBASE_HOME/lib:${LD_LIBRARY_PATH}\nexport LC_ALL=C\n</code></pre> <p>\u4ee5\u4e0a\uff0c\u5df2\u7ecf\u914d\u7f6e\u597d\u4e86\u6240\u9700\u8981\u57fa\u7840\u73af\u5883\uff0c\u53ef\u4ee5\u8fdb\u5165\u5230\u96c6\u7fa4\u521d\u59cb\u5316\u9636\u6bb5\uff0c\u4e3a\u4e86\u65b9\u4fbf\u7528\u6237\uff0cOpenTenBase\u63d0\u4f9b\u4e86\u4e13\u7528\u7684\u914d\u7f6e\u548c\u64cd\u4f5c\u5de5\u5177\uff1apgxc_ctl\u6765\u534f\u52a9\u7528\u6237\u5feb\u901f\u642d\u5efa\u5e76\u7ba1\u7406\u96c6\u7fa4\uff0c\u9996\u5148\u9700\u8981\u5c06\u524d\u6587\u6240\u8ff0\u7684\u8282\u70b9\u7684ip\uff0c\u7aef\u53e3\uff0c\u76ee\u5f55\u5199\u5165\u5230\u914d\u7f6e\u6587\u4ef6 pgxc_ctl.conf \u4e2d\u3002</p> <ul> <li>\u521d\u59cb\u5316pgxc_ctl.conf\u6587\u4ef6</li> </ul> <pre><code>[opentenbase@localhost ~]$ mkdir /data/opentenbase/pgxc_ctl\n[opentenbase@localhost ~]$ cd /data/opentenbase/pgxc_ctl\n[opentenbase@localhost ~/pgxc_ctl]$ vim pgxc_ctl.conf\n</code></pre> <p>\u5982\u4e0b\uff0c\u662f\u7ed3\u5408\u4e0a\u6587\u63cf\u8ff0\u7684IP\uff0c\u7aef\u53e3\uff0c\u6570\u636e\u5e93\u76ee\u5f55\uff0c\u4e8c\u8fdb\u5236\u76ee\u5f55\u7b49\u89c4\u5212\u6765\u5199\u7684pgxc_ctl.conf\u6587\u4ef6\u3002\u5177\u4f53\u5b9e\u8df5\u4e2d\u53ea\u9700\u6309\u7167\u81ea\u5df1\u7684\u5b9e\u9645\u60c5\u51b5\u914d\u7f6e\u597d\u5373\u53ef\u3002</p> <p>\u4ea6\u53ef\u4ece\u6b64\u5904\u4e0b\u8f7d\uff0c\u4fee\u6539\u6587\u4ef6\u540d\u4e3a <code>pgxc_ctl.conf</code> \uff0c\u6309\u7167\u5b9e\u9645\u60c5\u51b5\u4fee\u6539\u5185\u5bb9\uff1a</p> <p>\u70b9\u51fb\u6b64\u5904\u4e0b\u8f7d\u53cc\u8282\u70b9\u914d\u7f6e</p> <p>\u70b9\u51fb\u6b64\u5904\u4e0b\u8f7d\u5355\u8282\u70b9\u914d\u7f6e</p> <pre><code>#!/bin/bash\n# Double Node Config\n\nIP_1=10.215.147.158\nIP_2=10.240.138.159\n\npgxcInstallDir=/data/opentenbase/install/opentenbase_bin_v2.0\npgxcOwner=opentenbase\ndefaultDatabase=postgres\npgxcUser=$pgxcOwner\ntmpDir=/tmp\nlocalTmpDir=$tmpDir\nconfigBackup=n\nconfigBackupHost=pgxc-linker\nconfigBackupDir=$HOME/pgxc\nconfigBackupFile=pgxc_ctl.bak\n\n\n#---- GTM ----------\ngtmName=gtm\ngtmMasterServer=$IP_1\ngtmMasterPort=50001\ngtmMasterDir=/data/opentenbase/data/gtm\ngtmExtraConfig=none\ngtmMasterSpecificExtraConfig=none\ngtmSlave=y\ngtmSlaveServer=$IP_2\ngtmSlavePort=50001\ngtmSlaveDir=/data/opentenbase/data/gtm\ngtmSlaveSpecificExtraConfig=none\n\n#---- Coordinators -------\ncoordMasterDir=/data/opentenbase/data/coord\ncoordArchLogDir=/data/opentenbase/data/coord_archlog\n\ncoordNames=(cn001 cn002 )\ncoordPorts=(30004 30004 )\npoolerPorts=(31110 31110 )\ncoordPgHbaEntries=(0.0.0.0/0)\ncoordMasterServers=($IP_1 $IP_2)\ncoordMasterDirs=($coordMasterDir $coordMasterDir)\ncoordMaxWALsernder=2\ncoordMaxWALSenders=($coordMaxWALsernder $coordMaxWALsernder )\ncoordSlave=n\ncoordSlaveSync=n\ncoordArchLogDirs=($coordArchLogDir $coordArchLogDir)\n\ncoordExtraConfig=coordExtraConfig\ncat &gt; $coordExtraConfig &lt;&lt;EOF\n#================================================\n# Added to all the coordinator postgresql.conf\n# Original: $coordExtraConfig\n\ninclude_if_exists = '/data/opentenbase/global/global_opentenbase.conf'\n\nwal_level = replica\nwal_keep_segments = 256 \nmax_wal_senders = 4\narchive_mode = on \narchive_timeout = 1800 \narchive_command = 'echo 0' \nlog_truncate_on_rotation = on \nlog_filename = 'postgresql-%M.log' \nlog_rotation_age = 4h \nlog_rotation_size = 100MB\nhot_standby = on \nwal_sender_timeout = 30min \nwal_receiver_timeout = 30min \nshared_buffers = 1024MB \nmax_pool_size = 2000\nlog_statement = 'ddl'\nlog_destination = 'csvlog'\nlogging_collector = on\nlog_directory = 'pg_log'\nlisten_addresses = '*'\nmax_connections = 2000\n\nEOF\n\ncoordSpecificExtraConfig=(none none)\ncoordExtraPgHba=coordExtraPgHba\ncat &gt; $coordExtraPgHba &lt;&lt;EOF\n\nlocal   all             all                                     trust\nhost    all             all             0.0.0.0/0               trust\nhost    replication     all             0.0.0.0/0               trust\nhost    all             all             ::1/128                 trust\nhost    replication     all             ::1/128                 trust\n\n\nEOF\n\n\ncoordSpecificExtraPgHba=(none none)\ncoordAdditionalSlaves=n \ncad1_Sync=n\n\n#---- Datanodes ---------------------\ndn1MstrDir=/data/opentenbase/data/dn001\ndn2MstrDir=/data/opentenbase/data/dn002\ndn1SlvDir=/data/opentenbase/data/dn001\ndn2SlvDir=/data/opentenbase/data/dn002\ndn1ALDir=/data/opentenbase/data/datanode_archlog\ndn2ALDir=/data/opentenbase/data/datanode_archlog\n\nprimaryDatanode=dn001\ndatanodeNames=(dn001 dn002)\ndatanodePorts=(40004 40004)\ndatanodePoolerPorts=(41110 41110)\ndatanodePgHbaEntries=(0.0.0.0/0)\ndatanodeMasterServers=($IP_1 $IP_2)\ndatanodeMasterDirs=($dn1MstrDir $dn2MstrDir)\ndnWALSndr=4\ndatanodeMaxWALSenders=($dnWALSndr $dnWALSndr)\n\ndatanodeSlave=y\ndatanodeSlaveServers=($IP_2 $IP_1)\ndatanodeSlavePorts=(50004 54004)\ndatanodeSlavePoolerPorts=(51110 51110)\ndatanodeSlaveSync=n\ndatanodeSlaveDirs=($dn1SlvDir $dn2SlvDir)\ndatanodeArchLogDirs=($dn1ALDir/dn001 $dn2ALDir/dn002)\n\ndatanodeExtraConfig=datanodeExtraConfig\ncat &gt; $datanodeExtraConfig &lt;&lt;EOF\n#================================================\n# Added to all the coordinator postgresql.conf\n# Original: $datanodeExtraConfig\n\ninclude_if_exists = '/data/opentenbase/global/global_opentenbase.conf'\nlisten_addresses = '*' \nwal_level = replica \nwal_keep_segments = 256 \nmax_wal_senders = 4\narchive_mode = on \narchive_timeout = 1800 \narchive_command = 'echo 0' \nlog_directory = 'pg_log' \nlogging_collector = on \nlog_truncate_on_rotation = on \nlog_filename = 'postgresql-%M.log' \nlog_rotation_age = 4h \nlog_rotation_size = 100MB\nhot_standby = on \nwal_sender_timeout = 30min \nwal_receiver_timeout = 30min \nshared_buffers = 1024MB \nmax_connections = 4000 \nmax_pool_size = 4000\nlog_statement = 'ddl'\nlog_destination = 'csvlog'\nwal_buffers = 1GB\n\nEOF\n\ndatanodeSpecificExtraConfig=(none none)\ndatanodeExtraPgHba=datanodeExtraPgHba\ncat &gt; $datanodeExtraPgHba &lt;&lt;EOF\n\nlocal   all             all                                     trust\nhost    all             all             0.0.0.0/0               trust\nhost    replication     all             0.0.0.0/0               trust\nhost    all             all             ::1/128                 trust\nhost    replication     all             ::1/128                 trust\n\n\nEOF\n\n\ndatanodeSpecificExtraPgHba=(none none)\n\ndatanodeAdditionalSlaves=n\nwalArchive=n\n\n</code></pre> <ul> <li>\u5206\u53d1\u4e8c\u8fdb\u5236\u5305</li> </ul> <p>\u5728\u4e00\u4e2a\u8282\u70b9\u914d\u7f6e\u597d\u914d\u7f6e\u6587\u4ef6\u540e\uff0c\u9700\u8981\u9884\u5148\u5c06\u4e8c\u8fdb\u5236\u5305\u90e8\u7f72\u5230\u6240\u6709\u8282\u70b9\u6240\u5728\u7684\u673a\u5668\u4e0a\uff0c\u8fd9\u4e2a\u53ef\u4ee5\u4f7f\u7528pgxc_ctl\u5de5\u5177\uff0c\u6267\u884cdeploy all\u547d\u4ee4\u6765\u5b8c\u6210\u3002</p> <pre><code>[opentenbase@localhost ~/pgxc_ctl]$ pgxc_ctl \n/usr/bin/bash\nInstalling pgxc_ctl_bash script as /data/opentenbase/pgxc_ctl/pgxc_ctl_bash.\nInstalling pgxc_ctl_bash script as /data/opentenbase/pgxc_ctl/pgxc_ctl_bash.\nReading configuration using /data/opentenbase/pgxc_ctl/pgxc_ctl_bash --home /data/opentenbase/pgxc_ctl --configuration /data/opentenbase/pgxc_ctl/pgxc_ctl.conf\nFinished reading configuration.\n   ******** PGXC_CTL START ***************\n\nCurrent directory: /data/opentenbase/pgxc_ctl\nPGXC deploy all\nDeploying Postgres-XL components to all the target servers.\nPrepare tarball to deploy ... \nDeploying to the server 10.215.147.158.\nDeploying to the server 10.240.138.159.\nDeployment done.\n\n\u767b\u5f55\u5230\u6240\u6709\u8282\u70b9\uff0ccheck\u4e8c\u8fdb\u5236\u5305\u662f\u5426\u5206\u53d1OK\n[opentenbase@localhost ~/install]$ ls /data/opentenbase/install/opentenbase_bin_v2.0\nbin  include  lib  share    \n</code></pre> <ul> <li>\u6267\u884cinit all\u547d\u4ee4\uff0c\u5b8c\u6210\u96c6\u7fa4\u521d\u59cb\u5316\u547d\u4ee4</li> </ul> <pre><code>[opentenbase@localhost ~]$ pgxc_ctl\n/usr/bin/bash\nInstalling pgxc_ctl_bash script as /data/opentenbase/pgxc_ctl/pgxc_ctl_bash.\nInstalling pgxc_ctl_bash script as /data/opentenbase/pgxc_ctl/pgxc_ctl_bash.\nReading configuration using /data/opentenbase/pgxc_ctl/pgxc_ctl_bash --home /data/opentenbase/pgxc_ctl --configuration /data/opentenbase/pgxc_ctl/pgxc_ctl.conf\nFinished reading configuration.\n   ******** PGXC_CTL START ***************\n\nCurrent directory: /data/opentenbase/pgxc_ctl\nPGXC init all\nInitialize GTM master\n....\n....\nInitialize datanode slave dn001\nInitialize datanode slave dn002\nmkdir: cannot create directory '/data1/opentenbase': Permission denied\nchmod: cannot access '/data1/opentenbase/data/dn001': No such file or directory\npg_ctl: directory \"/data1/opentenbase/data/dn001\" does not exist\npg_basebackup: could not create directory \"/data1/opentenbase\": Permission denied\n</code></pre> <ul> <li>\u5b89\u88c5\u9519\u8bef\u5904\u7406</li> </ul> <p>\u4e00\u822cinit\u96c6\u7fa4\u51fa\u9519\uff0c\u7ec8\u7aef\u4f1a\u6253\u5370\u51fa\u9519\u8bef\u65e5\u5fd7\uff0c\u901a\u8fc7\u67e5\u770b\u9519\u8bef\u539f\u56e0\uff0c\u66f4\u6539\u914d\u7f6e\u5373\u53ef\uff0c\u6216\u8005\u53ef\u4ee5\u901a\u8fc7/data/opentenbase/pgxc_ctl/pgxc_log\u8def\u5f84\u4e0b\u7684\u9519\u8bef\u65e5\u5fd7\u67e5\u770b\u9519\u8bef\uff0c\u6392\u67e5\u914d\u7f6e\u6587\u4ef6\u7684\u9519\u8bef</p> <pre><code>[opentenbase@localhost ~]$ ll ~/pgxc_ctl/pgxc_log/\ntotal 184\n-rw-rw-r-- 1 opentenbase opentenbase 81123 Nov 13 17:22 14105_pgxc_ctl.log\n-rw-rw-r-- 1 opentenbase opentenbase  2861 Nov 13 17:58 15762_pgxc_ctl.log\n-rw-rw-r-- 1 opentenbase opentenbase 14823 Nov 14 07:59 16671_pgxc_ctl.log\n-rw-rw-r-- 1 opentenbase opentenbase  2721 Nov 13 16:52 18891_pgxc_ctl.log\n-rw-rw-r-- 1 opentenbase opentenbase  1409 Nov 13 16:20 22603_pgxc_ctl.log\n-rw-rw-r-- 1 opentenbase opentenbase 60043 Nov 13 16:33 28932_pgxc_ctl.log\n-rw-rw-r-- 1 opentenbase opentenbase 15671 Nov 14 07:57 6849_pgxc_ctl.log\n</code></pre> <p>\u901a\u8fc7\u8fd0\u884c pgxc_ctl \u5de5\u5177\uff0c\u6267\u884cclean all\u547d\u4ee4\u5220\u9664\u5df2\u7ecf\u521d\u59cb\u5316\u7684\u6587\u4ef6\uff0c\u4fee\u6539pgxc_ctl.conf\u6587\u4ef6\uff0c\u91cd\u65b0\u6267\u884cinit all\u547d\u4ee4\u91cd\u65b0\u53d1\u8d77\u521d\u59cb\u5316\u3002</p> <pre><code>[opentenbase@localhost ~]$ pgxc_ctl\n/usr/bin/bash\nInstalling pgxc_ctl_bash script as /data/opentenbase/pgxc_ctl/pgxc_ctl_bash.\nInstalling pgxc_ctl_bash script as /data/opentenbase/pgxc_ctl/pgxc_ctl_bash.\nReading configuration using /data/opentenbase/pgxc_ctl/pgxc_ctl_bash --home /data/opentenbase/pgxc_ctl --configuration /data/opentenbase/pgxc_ctl/pgxc_ctl.conf\nFinished reading configuration.\n   ******** PGXC_CTL START ***************\n\nCurrent directory: /data/opentenbase/pgxc_ctl\nPGXC clean all\n\n\n[opentenbase@localhost ~]$ pgxc_ctl\n/usr/bin/bash\nInstalling pgxc_ctl_bash script as /data/opentenbase/pgxc_ctl/pgxc_ctl_bash.\nInstalling pgxc_ctl_bash script as /data/opentenbase/pgxc_ctl/pgxc_ctl_bash.\nReading configuration using /data/opentenbase/pgxc_ctl/pgxc_ctl_bash --home /data/opentenbase/pgxc_ctl --configuration /data/opentenbase/pgxc_ctl/pgxc_ctl.conf\nFinished reading configuration.\n   ******** PGXC_CTL START ***************\n\nCurrent directory: /data/opentenbase/pgxc_ctl\nPGXC init all\nInitialize GTM master\nEXECUTE DIRECT ON (dn002) 'ALTER NODE dn002 WITH (TYPE=''datanode'',    HOST=''10.240.138.159'', PORT=40004, PREFERRED)';\nEXECUTE DIRECT\nEXECUTE DIRECT ON (dn002) 'SELECT pgxc_pool_reload()';\n pgxc_pool_reload \n------------------\n t\n(1 row)\n\nDone.\n</code></pre> <ul> <li> <p>\u67e5\u770b\u96c6\u7fa4\u72b6\u6001 </p> <p>\u5f53\u53d1\u73b0\u4e0a\u9762\u7684\u8f93\u51fa\u65f6\uff0c\u96c6\u7fa4\u5df2\u7ecfOK\uff0c\u53e6\u5916\u4e5f\u53ef\u4ee5\u901a\u8fc7pgxc_ctl\u5de5\u5177\u7684monitor all\u547d\u4ee4\u6765\u67e5\u770b\u96c6\u7fa4\u72b6\u6001</p> </li> </ul> <pre><code>[opentenbase@localhost ~/pgxc_ctl]$ pgxc_ctl\n/usr/bin/bash\nInstalling pgxc_ctl_bash script as /data/opentenbase/pgxc_ctl/pgxc_ctl_bash.\nInstalling pgxc_ctl_bash script as /data/opentenbase/pgxc_ctl/pgxc_ctl_bash.\nReading configuration using /data/opentenbase/pgxc_ctl/pgxc_ctl_bash --home /data/opentenbase/pgxc_ctl --configuration /data/opentenbase/pgxc_ctl/pgxc_ctl.conf\nFinished reading configuration.\n   ******** PGXC_CTL START ***************\n\nCurrent directory: /data/opentenbase/pgxc_ctl\nPGXC monitor all\nRunning: gtm master\nNot running: gtm slave\nRunning: coordinator master cn001\nRunning: coordinator master cn002\nRunning: datanode master dn001\nRunning: datanode slave dn001\nRunning: datanode master dn002\nNot running: datanode slave dn002\n</code></pre> <p>\u4e00\u822c\u7684\u5982\u679c\u914d\u7f6e\u7684\u4e0d\u662f\u5f3a\u540c\u6b65\u6a21\u5f0f\uff0cgtm salve\uff0cdn slave\u7684\u6545\u969c\u4e0d\u4f1a\u5f71\u54cd\u8bbf\u95ee\u3002</p> <ul> <li>\u96c6\u7fa4\u8bbf\u95ee     \u8bbf\u95eeOpenTenBase\u96c6\u7fa4\u548c\u8bbf\u95ee\u5355\u673a\u7684PostgreSQL\u57fa\u672c\u4e0a\u65e0\u5dee\u522b\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7\u4efb\u610f\u4e00\u4e2aCN\u8bbf\u95ee\u6570\u636e\u5e93\u96c6\u7fa4\uff1a\u4f8b\u5982\u901a\u8fc7\u8fde\u63a5CN\u8282\u70b9select pgxc_node\u8868\u5373\u53ef\u67e5\u770b\u96c6\u7fa4\u7684\u62d3\u6251\u7ed3\u6784\uff08\u5f53\u524d\u7684\u914d\u7f6e\u4e0b\u5907\u673a\u4e0d\u4f1a\u5c55\u793a\u5728pgxc_node\u4e2d\uff09\uff0c\u5728Linux\u547d\u4ee4\u884c\u4e0b\u901a\u8fc7psql\u8bbf\u95ee\u7684\u5177\u4f53\u793a\u4f8b\u5982\u4e0b</li> </ul> <pre><code>[opentenbase@localhost ~/pgxc_ctl]$ psql -h 10.215.147.158 -p 30004 -d postgres -U opentenbase\npsql (PostgreSQL 10.0 opentenbase V2)\nType \"help\" for help.\n\npostgres=# \\d\nDid not find any relations.\npostgres=# select * from pgxc_node;\n node_name | node_type | node_port |   node_host    | nodeis_primary | nodeis_preferred |  node_id   | node_cluster_name \n-----------+-----------+-----------+----------------+----------------+------------------+------------+-------------------\n gtm       | G         |     50001 | 10.215.147.158 | t              | f                |  428125959 | opentenbase_cluster\n cn001     | C         |     30004 | 10.215.147.158 | f              | f                | -264077367 | opentenbase_cluster\n cn002     | C         |     30004 | 10.240.138.159 | f              | f                | -674870440 | opentenbase_cluster\n dn001     | D         |     40004 | 10.215.147.158 | t              | t                | 2142761564 | opentenbase_cluster\n dn002     | D         |     40004 | 10.240.138.159 | f              | f                |  -17499968 | opentenbase_cluster\n(5 rows)\n</code></pre> <ul> <li>\u4f7f\u7528\u6570\u636e\u5e93\u524d\u9700\u8981\u521b\u5efadefault group\u4ee5\u53casharding\u8868</li> </ul> <p>OpenTenBase\u4f7f\u7528datanode group\u6765\u589e\u52a0\u8282\u70b9\u7684\u7ba1\u7406\u7075\u6d3b\u5ea6\uff0c\u8981\u6c42\u6709\u4e00\u4e2adefault group\u624d\u80fd\u4f7f\u7528\uff0c\u56e0\u6b64\u9700\u8981\u9884\u5148\u521b\u5efa\uff1b\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u4f1a\u5c06\u8282\u70b9\u7684\u6240\u6709datanode\u8282\u70b9\u52a0\u5165\u5230default group\u91cc \u53e6\u5916\u4e00\u65b9\u9762\uff0cOpenTenBase\u7684\u6570\u636e\u5206\u5e03\u4e3a\u4e86\u589e\u52a0\u7075\u6d3b\u5ea6\uff0c\u52a0\u4e86\u4e2d\u95f4\u903b\u8f91\u5c42\u6765\u7ef4\u62a4\u6570\u636e\u8bb0\u5f55\u5230\u7269\u7406\u8282\u70b9\u7684\u6620\u5c04\uff0c\u6211\u4eec\u53ebsharding\uff0c\u6240\u4ee5\u9700\u8981\u9884\u5148\u521b\u5efasharding\uff0c\u547d\u4ee4\u5982\u4e0b\uff1a</p> <pre><code>postgres=# create default node group default_group  with (dn001,dn002);\nCREATE NODE GROUP\npostgres=# create sharding group to group default_group;\nCREATE SHARDING GROUP\n</code></pre> <ul> <li>\u521b\u5efa\u6570\u636e\u5e93\uff0c\u7528\u6237\uff0c\u521b\u5efa\u8868\uff0c\u589e\u5220\u67e5\u6539\u7b49\u64cd\u4f5c</li> </ul> <p>\u81f3\u6b64\uff0c\u5c31\u53ef\u4ee5\u8ddf\u4f7f\u7528\u5355\u673a\u6570\u636e\u5e93\u4e00\u6837\u6765\u8bbf\u95ee\u6570\u636e\u5e93\u96c6\u7fa4\u4e86</p> <pre><code>postgres=# create database test;\nCREATE DATABASE\npostgres=# create user test with password 'test';\nCREATE ROLE\npostgres=# alter database test owner to test;\nALTER DATABASE\npostgres=# \\c test test\nYou are now connected to database \"test\" as user \"test\".\ntest=&gt; create table foo(id bigint, str text) distribute by shard(id);\nCREATE TABLE\ntest=&gt; insert into foo values(1, 'tencent'), (2, 'shenzhen');\nCOPY 2\ntest=&gt; select * from foo;\n id |   str    \n----+----------\n  1 | tencent\n  2 | shenzhen\n(2 rows)\n</code></pre> <ul> <li>\u505c\u6b62\u96c6\u7fa4</li> </ul> <p>\u901a\u8fc7pgxc_ctl\u5de5\u5177\u7684 stop all \u547d\u4ee4\u6765\u505c\u6b62\u96c6\u7fa4\uff0cstop all \u540e\u9762\u53ef\u4ee5\u52a0\u4e0a\u53c2\u6570 -m fast \u6216\u8005\u662f -m immediate \u6765\u51b3\u5b9a\u5982\u4f55\u505c\u6b62\u5404\u4e2a\u8282\u70b9\u3002</p> <pre><code>PGXC stop all -m fast\nStopping all the coordinator masters.\nStopping coordinator master cn001.\nStopping coordinator master cn002.\nDone.\nStopping all the datanode slaves.\nStopping datanode slave dn001.\nStopping datanode slave dn002.\npg_ctl: PID file \"/data/opentenbase/data/dn002/postmaster.pid\" does not exist\nIs server running?\nStopping all the datanode masters.\nStopping datanode master dn001.\nStopping datanode master dn002.\nDone.\nStop GTM slave\nwaiting for server to shut down..... done\nserver stopped\nStop GTM master\nwaiting for server to shut down.... done\nserver stopped\nPGXC monitor all\nNot running: gtm master\nNot running: gtm slave\nNot running: coordinator master cn001\nNot running: coordinator master cn002\nNot running: datanode master dn001\nNot running: datanode slave dn001\nNot running: datanode master dn002\nNot running: datanode slave dn002\n</code></pre> <ul> <li> <p>\u542f\u52a8\u96c6\u7fa4 </p> <p>\u901a\u8fc7pgxc_ctl\u5de5\u5177\u7684start all\u547d\u4ee4\u6765\u542f\u52a8\u96c6\u7fa4</p> </li> </ul> <pre><code>[opentenbase@localhost ~]$ pgxc_ctl\n/usr/bin/bash\nInstalling pgxc_ctl_bash script as /data/opentenbase/pgxc_ctl/pgxc_ctl_bash.\nInstalling pgxc_ctl_bash script as /data/opentenbase/pgxc_ctl/pgxc_ctl_bash.\nReading configuration using /data/opentenbase/pgxc_ctl/pgxc_ctl_bash --home /data/opentenbase/pgxc_ctl --configuration /data/opentenbase/pgxc_ctl/pgxc_ctl.conf\nFinished reading configuration.\n   ******** PGXC_CTL START ***************\n\nCurrent directory: /data/opentenbase/pgxc_ctl\nPGXC start all\n</code></pre> <ul> <li>\u7ed3\u8bed      \u672c\u6587\u6863\u53ea\u662f\u7ed9\u7528\u6237\u4e00\u4e2a\u7b80\u5355\u7684\u6307\u5f15\uff0c\u6f14\u793a\u5982\u4f55\u4ece\u6e90\u7801\u5f00\u59cb\uff0c\u4e00\u6b65\u4e00\u6b65\u642d\u5efa\u4e00\u4e2a\u5b8c\u6574\u7684OpenTenBase\u96c6\u7fa4\uff0c\u540e\u7eed\u4f1a\u6709\u66f4\u591a\u7684\u6587\u7ae0\u6765\u4ecb\u7ecdOpenTenBase\u7684\u7279\u6027\u4f7f\u7528\uff0c\u4f18\u5316\uff0c\u95ee\u9898\u5b9a\u4f4d\u7b49\u5185\u5bb9\u3002</li> </ul>"},{"location":"guide/02-access/","title":"\u5e94\u7528\u63a5\u5165\u6307\u5357","text":"<p>\u5728\u5feb\u901f\u5165\u95e8\u6587\u7ae0\u4e2d\u6211\u4eec\u4ecb\u7ecd\u4e86 OpenTenBase \u7684\u67b6\u6784\u3001\u6e90\u7801\u7f16\u8bd1\u5b89\u88c5\u3001\u96c6\u7fa4\u8fd0\u884c\u72b6\u6001\u3001\u542f\u52a8\u505c\u6b62\u7b49\u5185\u5bb9\u3002</p> <p>\u672c\u7bc7\u5c06\u4ecb\u7ecd\u5e94\u7528\u7a0b\u5e8f\u5982\u4f55\u8fde\u63a5OpenTenBase\u6570\u636e\u5e93\u8fdb\u884c\u5efa\u5e93\u3001\u5efa\u8868\u3001\u6570\u636e\u5bfc\u5165\u3001\u67e5\u8be2\u7b49\u64cd\u4f5c\u3002</p> <p>OpenTenBase\u517c\u5bb9\u6240\u6709\u652f\u6301Postgres\u534f\u8bae\u7684\u5ba2\u6237\u7aef\u8fde\u63a5\uff0c\u8fd9\u91cc\u5c06\u8be6\u7ec6\u4ecb\u7ecdJAVA\u3001C\u8bed\u8a00\u3001shell\u8bed\u8a00\u3001Python\u3001PHP\u3001Golang \u8fd96\u79cd\u6700\u5e38\u7528\u7684\u5f00\u53d1\u8bed\u8a00\u8fde\u63a5OpenTenBase\u7684\u64cd\u4f5c\u65b9\u6cd5\u3002</p>"},{"location":"guide/02-access/#1java","title":"1\u3001JAVA\u5f00\u53d1","text":""},{"location":"guide/02-access/#11","title":"1.1\u3001\u521b\u5efa\u6570\u636e\u8868","text":"<pre><code>import java.sql.Connection;\nimport java.sql.DriverManager;\nimport java.sql.Statement;\n\n\npublic class createtable {\n   public static void main( String args[] )\n     {\n       Connection c = null;\n       Statement stmt = null;\n       try {\n         Class.forName(\"org.postgresql.Driver\");\n         c = DriverManager.getConnection(\"jdbc:postgresql://127.0.0.1:15432/postgres?currentSchema=public&amp;binaryTransfer=false\",\"opentenbase\", \"opentenbase\");\n         System.out.println(\"Opened database successfully\");\n         stmt = c.createStatement();\n         String sql = \"create table opentenbase(id int,nickname text) distribute by shard(id) to group  default_group\" ;\n         stmt.executeUpdate(sql);\n         stmt.close();\n         c.close();\n       } catch ( Exception e ) {\n         System.err.println( e.getClass().getName()+\": \"+ e.getMessage() );\n         System.exit(0);\n       }\n       System.out.println(\"Table created successfully\");\n     }\n}\n</code></pre> <p>\u8bf4\u660e\uff1a</p> <ul> <li>\u8fd9\u91cc\u8fde\u63a5\u7684\u8282\u70b9\u4e3a\u4efb\u610fCN\u4e3b\u8282\u70b9\uff0c\u540e\u9762\u6240\u6709\u64cd\u4f5c\uff0c\u6ca1\u7279\u522b\u8bf4\u660e\uff0c\u90fd\u662f\u8fde\u63a5\u5230CN\u4e3b\u8282\u70b9\u8fdb\u884c\u64cd\u4f5c\u3002</li> </ul>"},{"location":"guide/02-access/#12","title":"1.2\u3001\u4f7f\u7528\u666e\u901a\u534f\u8bae\u63d2\u5165\u6570\u636e","text":"<pre><code>import java.sql.Connection;\nimport java.sql.DriverManager;\nimport java.sql.Statement;\n\npublic class insert {\n   public static void main(String args[]) {\n      Connection c = null;\n      Statement stmt = null;\n      try {\n         Class.forName(\"org.postgresql.Driver\");\n         c = DriverManager.getConnection(\"jdbc:postgresql://127.0.0.1:15432/postgres?currentSchema=public&amp;binaryTransfer=false\",\"opentenbase\", \"opentenbase\");\n         c.setAutoCommit(false);\n         System.out.println(\"Opened database successfully\");\n\n         stmt = c.createStatement();\n         String sql = \"INSERT INTO opentenbase (id,nickname) \"\n               + \"VALUES (1,'opentenbase');\";\n         stmt.executeUpdate(sql);\n\n         sql = \"INSERT INTO opentenbase (id,nickname) \"\n               + \"VALUES (2, 'pgxz' ),(3,'pgxc');\";\n         stmt.executeUpdate(sql);\n         stmt.close();\n         c.commit();\n         c.close();\n      } catch (Exception e) {\n         System.err.println( e.getClass().getName()+\": \"+ e.getMessage() );\n         System.exit(0);\n      }\n      System.out.println(\"Records created successfully\");\n   }\n}\n</code></pre>"},{"location":"guide/02-access/#13","title":"1.3\u3001\u4f7f\u7528\u6269\u5c55\u534f\u8bae\u63d2\u5165\u6570\u636e","text":"<pre><code>import java.sql.Connection;\nimport java.sql.DriverManager;\nimport java.sql.*;\nimport java.util.Random;\n\npublic class insert_prepared {\n   public static void main(String args[]) {\n      Connection c = null;\n      PreparedStatement stmt;\n      try {\n         Class.forName(\"org.postgresql.Driver\");\n         c = DriverManager.getConnection(\"jdbc:postgresql://127.0.0.1:15432/postgres?currentSchema=public&amp;binaryTransfer=false\",\"opentenbase\", \"opentenbase\");\n         c.setAutoCommit(false);\n         System.out.println(\"Opened database successfully\");\n         //\u63d2\u5165\u6570\u636e\n         String sql = \"INSERT INTO opentenbase (id,nickname) VALUES (?,?)\";         \n         stmt = c.prepareStatement(sql);\n         stmt.setInt(1, 9999);\n         stmt.setString(2, \"opentenbase_prepared\");\n         stmt.executeUpdate();\n\n         //\u63d2\u5165\u66f4\u65b0\n         sql = \"INSERT INTO opentenbase (id,nickname) VALUES (?,?) ON CONFLICT(id) DO UPDATE SET nickname=?\";\n         stmt = c.prepareStatement(sql);\n         stmt.setInt(1, 9999);\n         stmt.setString(2, \"opentenbase_prepared\");\n         stmt.setString(3, \"opentenbase_prepared_update\");\n         stmt.executeUpdate();\n\n         stmt.close();\n         c.commit();\n         c.close();\n      } catch (Exception e) {\n         System.err.println( e.getClass().getName()+\": \"+ e.getMessage() );\n         System.exit(0);\n      }\n      System.out.println(\"Records created successfully\");\n   }\n}\n</code></pre>"},{"location":"guide/02-access/#14copy-from","title":"1.4\u3001copy from \u52a0\u8f7d\u6587\u4ef6\u5230\u8868","text":"<pre><code>import java.sql.Connection;\nimport java.sql.DriverManager;\nimport java.sql.Statement;\nimport org.postgresql.copy.CopyManager;  \nimport org.postgresql.core.BaseConnection;  \nimport java.io.*;\n\npublic class copyfrom {\n   public static void main( String args[] )\n     {\n       Connection c = null;\n       Statement stmt = null;\n       FileInputStream fs = null;\n       try {\n         Class.forName(\"org.postgresql.Driver\");\n         c = DriverManager.getConnection(\"jdbc:postgresql://127.0.0.1:15432/postgres?currentSchema=public&amp;binaryTransfer=false\",\"opentenbase\", \"opentenbase\");\n         System.out.println(\"Opened database successfully\");\n         CopyManager cm = new CopyManager((BaseConnection) c);\n         fs = new FileInputStream(\"/data/opentenbase/opentenbase.csv\");\n         String sql = \"COPY opentenbase FROM STDIN DELIMITER AS ','\";\n         cm.copyIn(sql, fs);\n         c.close();\n         fs.close();\n       } catch ( Exception e ) {\n         System.err.println( e.getClass().getName()+\": \"+ e.getMessage() );\n         System.exit(0);\n       }\n       System.out.println(\"Copy data successfully\");\n     }\n}\n</code></pre>"},{"location":"guide/02-access/#15copy-to","title":"1.5\u3001copy to \u5bfc\u51fa\u6570\u636e\u5230\u6587\u4ef6","text":"<pre><code>import java.sql.Connection;\nimport java.sql.DriverManager;\nimport java.sql.Statement;\nimport org.postgresql.copy.CopyManager;  \nimport org.postgresql.core.BaseConnection;  \nimport java.io.*;\n\npublic class copyto {\n   public static void main( String args[] )\n     {\n       Connection c = null;\n       Statement stmt = null;\n       FileOutputStream fs = null;\n       try {\n         Class.forName(\"org.postgresql.Driver\");\n         c = DriverManager.getConnection(\"jdbc:postgresql://127.0.0.1:15432/postgres?currentSchema=public&amp;binaryTransfer=false\",\"opentenbase\", \"opentenbase\");\n         System.out.println(\"Opened database successfully\");\n         CopyManager cm = new CopyManager((BaseConnection) c);\n         fs = new FileOutputStream(\"/data/opentenbase/opentenbase.csv\");\n         String sql = \"COPY opentenbase TO STDOUT DELIMITER AS ','\";\n         cm.copyOut(sql, fs);\n         c.close();\n         fs.close();\n       } catch ( Exception e ) {\n         System.err.println( e.getClass().getName()+\": \"+ e.getMessage() );\n         System.exit(0);\n       }\n       System.out.println(\"Copy data successfully\");\n     }\n}\n</code></pre>"},{"location":"guide/02-access/#16jdbc","title":"1.6\u3001jdbc\u5305\u4e0b\u8f7d\u5730\u5740","text":"<pre><code>https://jdbc.postgresql.org/download.html\n</code></pre>"},{"location":"guide/02-access/#2c","title":"2\u3001C\u7a0b\u5e8f\u5f00\u53d1","text":""},{"location":"guide/02-access/#21","title":"2.1\u3001\u8fde\u63a5\u6570\u636e\u5e93","text":"<pre><code>#include &lt;stdio.h&gt;  \n#include &lt;stdlib.h&gt;  \n#include \"libpq-fe.h\"     \nint\nmain(int argc, char **argv){\n    const char *conninfo;\n    PGconn     *conn;      \n    if (argc &gt; 1){\n        conninfo = argv[1];\n    }else{\n        conninfo = \"dbname = postgres\";  \n    }            \n    conn = PQconnectdb(conninfo);\n    if (PQstatus(conn) != CONNECTION_OK){\n        fprintf(stderr, \"\u8fde\u63a5\u6570\u636e\u5e93\u5931\u8d25: %s\",PQerrorMessage(conn));              \n    }else{\n        printf(\"\u8fde\u63a5\u6570\u636e\u5e93\u6210\u529f\uff01\\n\");\n    }\n    PQfinish(conn);\n    return 0;\n}\n</code></pre> <p>\u7f16\u8bd1    </p> <pre><code>gcc -c -I /usr/local/install/opentenbase_pgxz/include/ conn.c  \ngcc -o conn conn.o -L /usr/local/install/opentenbase_pgxz/lib/ -lpq  \n</code></pre> <p>\u8fd0\u884c  </p> <pre><code>./conn \"host=172.16.0.3 dbname=postgres port=11000\"  \n\u8fde\u63a5\u6570\u636e\u5e93\u6210\u529f\uff01\n</code></pre> <pre><code>./conn \"host=172.16.0.3 dbname=postgres port=15432 user=opentenbase\"   \n\u8fde\u63a5\u6570\u636e\u5e93\u6210\u529f\uff01 \n</code></pre>"},{"location":"guide/02-access/#22","title":"2.2\u3001\u5efa\u7acb\u6570\u636e\u8868","text":"<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include \"libpq-fe.h\"   \nint\nmain(int argc, char **argv){\n    const char *conninfo;\n    PGconn     *conn;      \n    PGresult   *res;\n    const char *sql = \"create table opentenbase(id int,nickname text) distribute by shard(id) to group  default_group\";\n    if (argc &gt; 1){\n        conninfo = argv[1];\n    }else{\n        conninfo = \"dbname = postgres\";           \n    }        \n    conn = PQconnectdb(conninfo);\n    if (PQstatus(conn) != CONNECTION_OK){\n        fprintf(stderr, \"\u8fde\u63a5\u6570\u636e\u5e93\u5931\u8d25: %s\",PQerrorMessage(conn));              \n    }else{\n        printf(\"\u8fde\u63a5\u6570\u636e\u5e93\u6210\u529f\uff01\\n\");\n    }\n    res = PQexec(conn,sql);\n    if(PQresultStatus(res) != PGRES_COMMAND_OK){\n        fprintf(stderr, \"\u5efa\u7acb\u6570\u636e\u8868\u5931\u8d25: %s\",PQresultErrorMessage(res)); \n    }else{\n        printf(\"\u5efa\u7acb\u6570\u636e\u8868\u6210\u529f\uff01\\n\");\n    }\n    PQclear(res);\n    PQfinish(conn);\n    return 0;\n}\n</code></pre> <p>\u7f16\u8bd1  </p> <pre><code>gcc -c -I /usr/local/install/opentenbase_pgxz/include/ createtable.c  \ngcc -o createtable createtable.o -L /usr/local/install/opentenbase_pgxz/lib/ -lpq  \n</code></pre> <p>\u8fd0\u884c  </p> <pre><code>./createtable \"port=11000 dbname=postgres\"\n\u8fde\u63a5\u6570\u636e\u5e93\u6210\u529f\uff01  \n\u5efa\u7acb\u6570\u636e\u8868\u6210\u529f\uff01 \n</code></pre>"},{"location":"guide/02-access/#23","title":"2.3\u3001\u63d2\u5165\u6570\u636e","text":"<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include \"libpq-fe.h\"   \nint\nmain(int argc, char **argv){\n    const char *conninfo;\n    PGconn     *conn;      \n    PGresult   *res;\n    const char *sql = \"INSERT INTO opentenbase (id,nickname) values(1,'opentenbase'),(2,'pgxz')\";\n    if (argc &gt; 1){\n        conninfo = argv[1];\n    }else{\n        conninfo = \"dbname = postgres\";           \n    }        \n    conn = PQconnectdb(conninfo);\n    if (PQstatus(conn) != CONNECTION_OK){\n        fprintf(stderr, \"\u8fde\u63a5\u6570\u636e\u5e93\u5931\u8d25: %s\",PQerrorMessage(conn));              \n    }else{\n        printf(\"\u8fde\u63a5\u6570\u636e\u5e93\u6210\u529f\uff01\\n\");\n    }\n    res = PQexec(conn,sql);\n    if(PQresultStatus(res) != PGRES_COMMAND_OK){\n        fprintf(stderr, \"\u63d2\u5165\u6570\u636e\u5931\u8d25: %s\",PQresultErrorMessage(res)); \n    }else{\n        printf(\"\u63d2\u5165\u6570\u636e\u6210\u529f\uff01\\n\");\n    }\n    PQclear(res);\n    PQfinish(conn);\n    return 0;\n}\n</code></pre> <p>\u7f16\u8bd1  </p> <pre><code>gcc -c -I /usr/local/install/opentenbase_pgxz/include/ insert.c\ngcc -o insert insert.o -L /usr/local/install/opentenbase_pgxz/lib/ -lpq\n</code></pre> <p>\u8fd0\u884c  </p> <pre><code>./insert \"dbname=postgres port=15432\"\n</code></pre>"},{"location":"guide/02-access/#24","title":"2.4\u3001\u67e5\u8be2\u6570\u636e","text":"<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include \"libpq-fe.h\"   \nint\nmain(int argc, char **argv){\n    const char *conninfo;\n    PGconn     *conn;      \n    PGresult   *res;\n    const char *sql = \"select * from opentenbase\";\n    if (argc &gt; 1){\n        conninfo = argv[1];\n    }else{\n        conninfo = \"dbname = postgres\";           \n    }\n    conn = PQconnectdb(conninfo);    \n    if (PQstatus(conn) != CONNECTION_OK){\n        fprintf(stderr, \"\u8fde\u63a5\u6570\u636e\u5e93\u5931\u8d25: %s\",PQerrorMessage(conn));              \n    }else{    \n        printf(\"\u8fde\u63a5\u6570\u636e\u5e93\u6210\u529f\uff01\\n\");\n    }                                \n    res = PQexec(conn,sql);\n    if(PQresultStatus(res) != PGRES_TUPLES_OK){\n        fprintf(stderr, \"\u63d2\u5165\u6570\u636e\u5931\u8d25: %s\",PQresultErrorMessage(res)); \n    }else{\n        printf(\"\u67e5\u8be2\u6570\u636e\u6210\u529f\uff01\\n\");    \n        int rownum = PQntuples(res) ;\n        int colnum = PQnfields(res);\n        for(int j = 0;j&lt; colnum; ++j){\n            printf(\"%s\\t\",PQfname(res,j));\n        }\n        printf(\"\\n\");\n        for(int i = 0;i&lt; rownum; ++i){\n            for(int j = 0;j&lt; colnum; ++j){\n                printf(\"%s\\t\",PQgetvalue(res,i,j));\n            }\n            printf(\"\\n\");\n        }\n    }\n    PQclear(res);\n    PQfinish(conn);\n    return 0;\n}\n</code></pre> <p>\u7f16\u8bd1  </p> <pre><code>gcc -std=c99 -c -I /usr/local/install/opentenbase_pgxz/include/ select.c  \ngcc -o select select.o -L /usr/local/install/opentenbase_pgxz/lib/ -lpq\n</code></pre> <p>\u8fd0\u884c </p> <pre><code>./select \"dbname=postgres port=15432\"\n\u8fde\u63a5\u6570\u636e\u5e93\u6210\u529f\uff01  \n\u67e5\u8be2\u6570\u636e\u6210\u529f\uff01    \nid      nickname  \n1       opentenbase  \n2       pgxz  \n\n</code></pre>"},{"location":"guide/02-access/#25copy","title":"2.5\u3001\u6d41\u6570\u636eCOPY\u5165\u8868","text":"<pre><code>#include &lt;string.h&gt;\n#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include \"libpq-fe.h\"   \nint \nmain(int argc, char **argv){\n    const char *conninfo;\n    PGconn     *conn;      \n    PGresult   *res;\n    const char *buffer = \"1,opentenbase\\n2,pgxz\\n3,opentenbase\u725b\";\n    if (argc &gt; 1){\n        conninfo = argv[1];\n    }else{\n        conninfo = \"dbname = postgres\";           \n    }\n    conn = PQconnectdb(conninfo);\n    if (PQstatus(conn) != CONNECTION_OK){\n        fprintf(stderr, \"\u8fde\u63a5\u6570\u636e\u5e93\u5931\u8d25: %s\",PQerrorMessage(conn));              \n    }else{\n        printf(\"\u8fde\u63a5\u6570\u636e\u5e93\u6210\u529f\uff01\\n\");\n    }\n    res=PQexec(conn,\"COPY opentenbase FROM STDIN DELIMITER ',';\");\n    if(PQresultStatus(res) != PGRES_COPY_IN){\n        fprintf(stderr, \"copy\u6570\u636e\u51fa\u95191: %s\",PQresultErrorMessage(res));\n    }else{\n        int len = strlen(buffer);\n        if(PQputCopyData(conn,buffer,len) == 1){\n             if(PQputCopyEnd(conn,NULL) == 1){\n                res = PQgetResult(conn);\n                if(PQresultStatus(res) == PGRES_COMMAND_OK){\n                    printf(\"copy\u6570\u636e\u6210\u529f\uff01\\n\");         \n                }else{\n                    fprintf(stderr, \"copy\u6570\u636e\u51fa\u95192: %s\",PQerrorMessage(conn));    \n                }\n             }else{\n                fprintf(stderr, \"copy\u6570\u636e\u51fa\u95193: %s\",PQerrorMessage(conn));   \n             }\n        }else{\n            fprintf(stderr, \"copy\u6570\u636e\u51fa\u95194: %s\",PQerrorMessage(conn));              \n        }\n    }\n    PQclear(res);\n    PQfinish(conn);\n    return 0;\n}\n</code></pre> <p>\u7f16\u8bd1  </p> <pre><code>gcc -c -I /usr/local/install/opentenbase_pgxz/include/ copy.c\ngcc -o copy copy.o -L /usr/local/install/opentenbase_pgxz/lib/ -lpq\n</code></pre> <p>\u6267\u884c  </p> <pre><code>./copy \"dbname=postgres port=15432\"\n\u8fde\u63a5\u6570\u636e\u5e93\u6210\u529f\uff01  \ncopy\u6570\u636e\u6210\u529f\uff01\n</code></pre>"},{"location":"guide/02-access/#3shell","title":"3\u3001shell\u811a\u672c\u5f00\u53d1","text":"<pre><code>#!/bin/sh\n\nif [ $# -ne 0 ]\nthen\n    echo \"usage: $0 exec_sql\"\n    exit 1\nfi\n\nexec_sql=$1\n\nmasters=`psql -h 172.16.0.29 -d postgres -p 15432 -t -c \"select string_agg(node_host, ' ') from (select * from pgxc_node where node_type = 'D' order by node_name) t\"`\nport_list=`psql -h 172.16.0.29 -d postgres -p 15432 -t -c \"select string_agg(node_port::text, ' ') from (select * from pgxc_node where node_type = 'D' order by node_name) t\"`\nnode_cnt=`psql -h 172.16.0.29 -d postgres -p 15432 -t -c \"select count(*) from pgxc_node where node_type = 'D'\"`\nmasters=($masters)\nports=($port_list)\n\necho $node_cnt\n\nflag=0\n\nfor((i=0;i&lt;$node_cnt;i++));\ndo\n    seq=$(($i+1))\n    master=${masters[$i]}\n    port=${ports[$i]}\n    echo $master\n    echo $port\n\n    psql -h $master -p $port  postgres -c \"$exec_sql\"\ndone\n</code></pre>"},{"location":"guide/02-access/#4python","title":"4\u3001python\u7a0b\u5e8f\u5f00\u53d1","text":""},{"location":"guide/02-access/#41psycopg2","title":"4.1\u3001\u5b89\u88c5psycopg2\u6a21\u5757","text":"<pre><code>[root@VM_0_29_centos ~]# yum install python-psycopg2\n</code></pre>"},{"location":"guide/02-access/#42","title":"4.2\u3001\u8fde\u63a5\u6570\u636e\u5e93","text":"<pre><code>#coding=utf-8\n#!/usr/bin/python\nimport psycopg2\ntry:\n    conn = psycopg2.connect(database=\"postgres\", user=\"opentenbase\", password=\"\", host=\"172.16.0.29\", port=\"15432\")\n    print \"\u8fde\u63a5\u6570\u636e\u5e93\u6210\u529f\"\n    conn.close()\nexcept psycopg2.Error,msg:\n    print \"\u8fde\u63a5\u6570\u636e\u5e93\u51fa\u9519\uff0c\u9519\u8bef\u8be6\u7ec6\u4fe1\u606f\uff1a %s\" %(msg.args[0])\n</code></pre> <p>\u8fd0\u884c  </p> <pre><code>[opentenbase@VM_0_29_centos python]$ python conn.py \n\u8fde\u63a5\u6570\u636e\u5e93\u6210\u529f   \n</code></pre>"},{"location":"guide/02-access/#43","title":"4.3\u3001\u521b\u5efa\u6570\u636e\u8868","text":"<pre><code>#coding=utf-8\n#!/usr/bin/python\nimport psycopg2\ntry:\n    conn = psycopg2.connect(database=\"postgres\", user=\"opentenbase\", password=\"\", host=\"172.16.0.29\", port=\"15432\")\n    print \"\u8fde\u63a5\u6570\u636e\u5e93\u6210\u529f\"    \n    cur = conn.cursor()\n    sql = \"\"\"\n          create table opentenbase \n          (\n              id int,\n              nickname varchar(100)\n          )distribute by shard(id) to group default_group\n          \"\"\"\n    cur.execute(sql)\n    conn.commit()\n    print \"\u5efa\u7acb\u6570\u636e\u8868\u6210\u529f\"    \n    conn.close()\nexcept psycopg2.Error,msg:\n    print \"OpenTenBase Error %s\" %(msg.args[0])\n</code></pre> <p>\u8fd0\u884c  </p> <pre><code>[opentenbase@VM_0_29_centos python]$ python createtable.py   \n\u8fde\u63a5\u6570\u636e\u5e93\u6210\u529f\n\u5efa\u7acb\u6570\u636e\u8868\u6210\u529f\n</code></pre>"},{"location":"guide/02-access/#44","title":"4.4\u3001\u63d2\u5165\u6570\u636e","text":"<pre><code>#coding=utf-8\n#!/usr/bin/python\nimport psycopg2\ntry:\n    conn = psycopg2.connect(database=\"postgres\", user=\"opentenbase\", password=\"\", host=\"172.16.0.29\", port=\"15432\")\n    print \"\u8fde\u63a5\u6570\u636e\u5e93\u6210\u529f\"    \n    cur = conn.cursor()\n    sql = \"insert into opentenbase values(1,'opentenbase'),(2,'opentenbase');\"\n    cur.execute(sql)\n    sql = \"insert into opentenbase values(%s,%s)\"   \n    cur.execute(sql,(3,'pg'))\n    conn.commit()\n    print \"\u63d2\u5165\u6570\u636e\u6210\u529f\"    \n    conn.close()\nexcept psycopg2.Error,msg:\n    print \"\u64cd\u4f5c\u6570\u636e\u5e93\u51fa\u5e93 %s\" %(msg.args[0])\n</code></pre> <p>\u8fd0\u884c  </p> <pre><code>[opentenbase@VM_0_29_centos python]$ python insert.py   \n\u8fde\u63a5\u6570\u636e\u5e93\u6210\u529f  \n\u63d2\u5165\u6570\u636e\u6210\u529f  \n</code></pre>"},{"location":"guide/02-access/#45","title":"4.5\u3001\u67e5\u8be2\u6570\u636e","text":"<pre><code>#coding=utf-8\n#!/usr/bin/python\nimport psycopg2\ntry:\n    conn = psycopg2.connect(database=\"postgres\", user=\"opentenbase\", password=\"\", host=\"172.16.0.29\", port=\"15432\")\n    print \"\u8fde\u63a5\u6570\u636e\u5e93\u6210\u529f\"    \n    cur = conn.cursor()\n    sql = \"select * from opentenbase\"\n    cur.execute(sql)\n    rows = cur.fetchall()\n    for row in rows:\n        print \"ID = \", row[0]\n        print \"NICKNAME = \", row[1],\"\\n\"\n    conn.close()\nexcept psycopg2.Error,msg:\n    print \"\u64cd\u4f5c\u6570\u636e\u5e93\u51fa\u5e93 %s\" %(msg.args[0])\n</code></pre> <p>\u8fd0\u884c  </p> <pre><code>[opentenbase@VM_0_29_centos python]$ python select.py   \n\u8fde\u63a5\u6570\u636e\u5e93\u6210\u529f\nID =  1\nNICKNAME =  opentenbase \n\nID =  2\nNICKNAME =  pgxz \n\nID =  3\nNICKNAME =  pg\n</code></pre>"},{"location":"guide/02-access/#46copy-from","title":"4.6\u3001copy from \u52a0\u8f7d\u6587\u4ef6\u5230\u8868","text":"<pre><code>#coding=utf-8\n#!/usr/bin/python\nimport psycopg2\ntry:\n    conn = psycopg2.connect(database=\"postgres\", user=\"opentenbase\", password=\"\", host=\"172.16.0.29\", port=\"15432\")\n    print \"\u8fde\u63a5\u6570\u636e\u5e93\u6210\u529f\"    \n    cur = conn.cursor()\n    filename = \"/data/opentenbase/opentenbase.txt\"\n    cols = ('id','nickname')\n    tablename=\"public.opentenbase\"\n    cur.copy_from(file=open(filename),table=tablename,columns=cols,sep=',')\n    conn.commit()\n    print \"\u5bfc\u5165\u6570\u636e\u6210\u529f\"\n    conn.close()\nexcept psycopg2.Error,msg:\n    print \"\u64cd\u4f5c\u6570\u636e\u5e93\u51fa\u5e93 %s\" %(msg.args[0])\n</code></pre> <p>\u6267\u884c</p> <pre><code>[opentenbase@VM_0_29_centos python]$ python copy_from.py \n\u8fde\u63a5\u6570\u636e\u5e93\u6210\u529f\n\u5bfc\u5165\u6570\u636e\u6210\u529f\n</code></pre>"},{"location":"guide/02-access/#5php","title":"5\u3001PHP\u7a0b\u5e8f\u5f00\u53d1","text":""},{"location":"guide/02-access/#51","title":"5.1\u3001\u8fde\u63a5\u6570\u636e\u5e93","text":"<pre><code>&lt;?php     \n$host=\"172.16.0.29\";\n$port=\"15432\";\n$dbname=\"postgres\";\n$user=\"opentenbase\" ;\n$password=\"\";  \n\n//\u8fde\u63a5\u6570\u636e\u5e93\n$conn=@pg_connect(\"host=$host port=$port dbname=$dbname user=$user password=$password\");      \nif (!$conn){\n    $error_msg=@pg_errormessage($conn); \n    echo \"\u8fde\u63a5\u6570\u636e\u5e93\u51fa\u9519\uff0c\u8be6\u60c5\uff1a\".$error_msg.\"\\n&lt;BR&gt;\"; ;\n    exit;\n}else{\n    echo \"\u8fde\u63a5\u6570\u636e\u5e93\u6210\u529f\".\"\\n&lt;BR&gt;\";      \n} \n//\u5173\u95ed\u8fde\u63a5\npg_close($conn);\n?&gt;\n</code></pre> <p>\u6267\u884c  </p> <pre><code>[root@VM_0_47_centos test]# curl http://127.0.0.1:8080/dbsta/test/conn.php\n\u8fde\u63a5\u6570\u636e\u5e93\u6210\u529f\n</code></pre>"},{"location":"guide/02-access/#52","title":"5.2\u3001\u521b\u5efa\u6570\u636e\u8868","text":"<pre><code>&lt;?php     \n$host=\"172.16.0.29\";\n$port=\"15432\";\n$dbname=\"postgres\";\n$user=\"opentenbase\" ;\n$password=\"\";  \n\n//\u8fde\u63a5\u6570\u636e\u5e93\n$conn=@pg_connect(\"host=$host port=$port dbname=$dbname user=$user password=$password\");      \nif (!$conn){\n    $error_msg=@pg_errormessage($conn); \n    echo \"\u8fde\u63a5\u6570\u636e\u5e93\u51fa\u9519\uff0c\u8be6\u60c5\uff1a\".$error_msg.\"\\n\"; ;\n    exit;\n}else{\n    echo \"\u8fde\u63a5\u6570\u636e\u5e93\u6210\u529f\".\"\\n\";      \n} \n\n//\u5efa\u7acb\u6570\u636e\u8868\n$sql=\"create table public.opentenbase(id integer,nickname varchar(100)) distribute by shard(id) to group default_group;\";\n$result = @pg_exec($conn,$sql) ;\nif (!$result){\n    $error_msg=@pg_errormessage($conn); \n    echo \"\u521b\u5efa\u6570\u636e\u8868\u51fa\u9519\uff0c\u8be6\u60c5\uff1a\".$error_msg.\"\\n\"; ;\n    exit;\n}else{\n    echo \"\u521b\u5efa\u6570\u636e\u8868\u6210\u529f\".\"\\n\";       \n}\n//\u5173\u95ed\u8fde\u63a5\npg_close($conn);\n?&gt;\n</code></pre> <p>\u6267\u884c</p> <pre><code>[root@VM_0_47_centos test]# curl http://127.0.0.1:8080/dbsta/test/createtable.php\n\u8fde\u63a5\u6570\u636e\u5e93\u6210\u529f\n\u521b\u5efa\u6570\u636e\u8868\u6210\u529f\n</code></pre>"},{"location":"guide/02-access/#53","title":"5.3\u3001\u63d2\u5165\u6570\u636e","text":"<pre><code>&lt;?php     \n$host=\"172.16.0.29\";\n$port=\"15432\";\n$dbname=\"postgres\";\n$user=\"opentenbase\" ;\n$password=\"\";  \n\n//\u8fde\u63a5\u6570\u636e\u5e93\n$conn=@pg_connect(\"host=$host port=$port dbname=$dbname user=$user password=$password\");      \nif (!$conn){\n    $error_msg=@pg_errormessage($conn); \n    echo \"\u8fde\u63a5\u6570\u636e\u5e93\u51fa\u9519\uff0c\u8be6\u60c5\uff1a\".$error_msg.\"\\n\"; ;\n    exit;\n}else{\n    echo \"\u8fde\u63a5\u6570\u636e\u5e93\u6210\u529f\".\"\\n\";      \n} \n\n//\u63d2\u5165\u6570\u636e\n$sql=\"insert into public.opentenbase values(1,'opentenbase'),(2,'pgxz');\";    \n$result = @pg_exec($conn,$sql) ;\nif (!$result){\n    $error_msg=@pg_errormessage($conn); \n    echo \"\u63d2\u5165\u6570\u636e\u51fa\u9519\uff0c\u8be6\u60c5\uff1a\".$error_msg.\"\\n\";\n    exit;\n}else{\n    echo \"\u63d2\u5165\u6570\u636e\u6210\u529f\".\"\\n\";       \n}\n\n//\u5173\u95ed\u8fde\u63a5\npg_close($conn);\n\n?&gt;\n</code></pre> <p>\u6267\u884c</p> <pre><code>[opentenbase@VM_0_47_centos test]$ curl http://127.0.0.1:8080/dbsta/test/insert.php\n\u8fde\u63a5\u6570\u636e\u5e93\u6210\u529f\n\u63d2\u5165\u6570\u636e\u6210\u529f\n</code></pre>"},{"location":"guide/02-access/#54","title":"5.4\u3001\u67e5\u8be2\u6570\u636e","text":"<pre><code>&lt;?php     \n$host=\"172.16.0.29\";\n$port=\"15432\";\n$dbname=\"postgres\";\n$user=\"opentenbase\" ;\n$password=\"\";  \n\n//\u8fde\u63a5\u6570\u636e\u5e93\n$conn=@pg_connect(\"host=$host port=$port dbname=$dbname user=$user password=$password\");      \nif (!$conn){\n    $error_msg=@pg_errormessage($conn); \n    echo \"\u8fde\u63a5\u6570\u636e\u5e93\u51fa\u9519\uff0c\u8be6\u60c5\uff1a\".$error_msg.\"\\n\"; ;\n    exit;\n}else{\n    echo \"\u8fde\u63a5\u6570\u636e\u5e93\u6210\u529f\".\"\\n\";      \n} \n\n//\u67e5\u8be2\u6570\u636e \n$sql=\"select id,nickname from public.opentenbase\";    \n$result = @pg_exec($conn,$sql) ;\nif (!$result){\n    $error_msg=@pg_errormessage($conn); \n    echo \"\u67e5\u8be2\u6570\u636e\u51fa\u9519\uff0c\u8be6\u60c5\uff1a\".$error_msg.\"\\n\";\n    exit;\n}else{\n    echo \"\u67e5\u8be2\u6570\u636e\u6210\u529f\".\"\\n\";      \n}\n$record_num = pg_numrows($result);  \necho \"\u8fd4\u56de\u8bb0\u5f55\u6570\".$record_num.\"\\n\"; \n$rec=pg_fetch_all($result); \nfor($i=0;$i&lt;$record_num;$i++){\n    echo \"\u8bb0\u5f55\u6570#\".strval($i+1).\"\\n\";\n    echo \"id\uff1a\".$rec[$i][\"id\"].\"\\n\";\n    echo \"nickname\uff1a\".$rec[$i][\"nickname\"].\"\\n\\n\";\n}\n//\u5173\u95ed\u8fde\u63a5\npg_close($conn);\n?&gt;\n</code></pre> <p>\u8c03\u7528\u65b9\u6cd5  </p> <pre><code>[root@VM_0_47_centos ~]# curl http://127.0.0.1:8080/dbsta/test/select.php\n\u8fde\u63a5\u6570\u636e\u5e93\u6210\u529f\n\u67e5\u8be2\u6570\u636e\u6210\u529f\n\u8fd4\u56de\u8bb0\u5f55\u65702\n\u8bb0\u5f55\u6570#1\nid\uff1a1\nnickname\uff1aopentenbase\n\n\u8bb0\u5f55\u6570#2\nid\uff1a2\nnickname\uff1apgxz\n</code></pre>"},{"location":"guide/02-access/#55copy","title":"5.5\u3001\u6d41\u6570\u636ecopy \u5165\u8868","text":"<pre><code>&lt;?php \n\n$host=\"172.16.0.29\";\n$port=\"15432\";\n$dbname=\"postgres\";\n$user=\"opentenbase\" ;\n$password=\"\";  \n\n//\u8fde\u63a5\u6570\u636e\u5e93\n$conn=@pg_connect(\"host=$host port=$port dbname=$dbname user=$user password=$password\");      \nif (!$conn){\n    $error_msg=@pg_errormessage($conn); \n    echo \"\u8fde\u63a5\u6570\u636e\u5e93\u51fa\u9519\uff0c\u8be6\u60c5\uff1a\".$error_msg.\"\\n\"; ;\n    exit;\n}else{\n    echo \"\u8fde\u63a5\u6570\u636e\u5e93\u6210\u529f\".\"\\n\";      \n}                                     \n$row=ARRAY(\"1,opentenbase\",\"2,pgxz\");   \n$flag=pg_copy_from($conn,\"public.opentenbase\",$row,\",\");\n\nif (!$flag){\n    $error_msg=@pg_errormessage($conn); \n    echo \"copy\u51fa\u9519\uff0c\u8be6\u60c5\uff1a\".$error_msg.\"\\n\";\n}else{\n    echo \"copy\u6210\u529f\".\"\\n\";          \n}\n\n//\u5173\u95ed\u8fde\u63a5\npg_close($conn);\n\n?&gt;\n</code></pre> <p>\u8c03\u7528\u65b9\u6cd5</p> <pre><code>curl http://127.0.0.1/dbsta/cron/php_copy_from.php\n\u8fde\u63a5\u6570\u636e\u5e93\u6210\u529f\ncopy\u6210\u529f\n</code></pre>"},{"location":"guide/02-access/#56copy-to","title":"5.6\u3001copy to\u5bfc\u51fa\u6570\u636e\u5230\u4e00\u4e2a\u6570\u7ec4\u4e2d","text":"<pre><code>&lt;?php \n\n$host=\"172.16.0.29\";\n$port=\"15432\";\n$dbname=\"postgres\";\n$user=\"opentenbase\" ;\n$password=\"\";  \n\n//\u8fde\u63a5\u6570\u636e\u5e93\n$conn=@pg_connect(\"host=$host port=$port dbname=$dbname user=$user password=$password\");      \nif (!$conn){\n    $error_msg=@pg_errormessage($conn); \n    echo \"\u8fde\u63a5\u6570\u636e\u5e93\u51fa\u9519\uff0c\u8be6\u60c5\uff1a\".$error_msg.\"\\n\"; ;\n    exit;\n}else{\n    echo \"\u8fde\u63a5\u6570\u636e\u5e93\u6210\u529f\".\"\\n\";      \n}                                     \n\n$row=pg_copy_to($conn,\"public.opentenbase\",\",\");  \nif (!$row){\n    $error_msg=@pg_errormessage($conn); \n    echo \"copy\u51fa\u9519\uff0c\u8be6\u60c5\uff1a\".$error_msg.\"\\n\";\n}else{\n    print_r($row);\n}  \n//\u5173\u95ed\u8fde\u63a5 \npg_close($conn);              \n?&gt;\n</code></pre> <p>\u8c03\u7528\u65b9\u6cd5  </p> <pre><code>curl http://127.0.0.1/dbsta/cron/php_copy_to.php  \n\u8fde\u63a5\u6570\u636e\u5e93\u6210\u529f\nArray\n(\n    [0] =&gt; 1,opentenbase\n\n    [1] =&gt; 2,pgxz\n\n)\n</code></pre>"},{"location":"guide/02-access/#6golang","title":"6\u3001golang\u7a0b\u5e8f\u5f00\u53d1","text":""},{"location":"guide/02-access/#61","title":"6.1\u3001\u8fde\u63a5\u6570\u636e\u5e93","text":"<pre><code>package main\n\nimport (\n    \"fmt\"\n    \"time\"\n\n    \"github.com/jackc/pgx\"\n)\n\nfunc main() {\n    var error_msg string\n\n    //\u8fde\u63a5\u6570\u636e\u5e93\n    conn, err := db_connect()\n    if err != nil {\n        error_msg = \"\u8fde\u63a5\u6570\u636e\u5e93\u5931\u8d25\uff0c\u8be6\u60c5\uff1a\" + err.Error()\n        write_log(\"Error\", error_msg)\n        return\n    }\n    //\u7a0b\u5e8f\u8fd0\u884c\u7ed3\u675f\u65f6\u5173\u95ed\u8fde\u63a5\n    defer conn.Close()\n    write_log(\"Log\", \"\u8fde\u63a5\u6570\u636e\u5e93\u6210\u529f\")\n\n}\n\n/*\n\u529f\u80fd\u63cf\u8ff0\uff1a\u5199\u5165\u65e5\u5fd7\u5904\u7406\n\n\u53c2\u6570\u8bf4\u660e\uff1a\nlog_level -- \u65e5\u5fd7\u7ea7\u522b\uff0c\u53ea\u80fd\u662f`Error`\u6216`Log`\nerror_msg -- \u65e5\u5fd7\u5185\u5bb9\n\n\u8fd4\u56de\u503c\u8bf4\u660e\uff1a\u65e0\n*/\n\nfunc write_log(log_level string, error_msg string) {\n    //\u6253\u5370\u9519\u8bef\u4fe1\u606f\n    fmt.Println(\"\u8bbf\u95ee\u65f6\u95f4\uff1a\", time.Now().Format(\"2006-01-02 15:04:05\"))\n    fmt.Println(\"\u65e5\u5fd7\u7ea7\u522b\uff1a\", log_level)\n    fmt.Println(\"\u8be6\u7ec6\u4fe1\u606f\uff1a\", error_msg)\n}\n\n/*\n\u529f\u80fd\u63cf\u8ff0\uff1a\u8fde\u63a5\u6570\u636e\u5e93\n\n\u53c2\u6570\u8bf4\u660e\uff1a\u65e0\n\n\u8fd4\u56de\u503c\u8bf4\u660e\uff1a\nconn *pgx.Conn -- \u8fde\u63a5\u4fe1\u606f\nerr error -- \u9519\u8bef\u4fe1\u606f\n\n*/\n\nfunc db_connect() (conn *pgx.Conn, err error) {\n    var config pgx.ConnConfig\n    config.Host = \"127.0.0.1\"    //\u6570\u636e\u5e93\u4e3b\u673ahost\u6216ip\n    config.User = \"opentenbase\"         //\u8fde\u63a5\u7528\u6237\n    config.Password = \"pgsql\"    //\u7528\u6237\u5bc6\u7801\n    config.Database = \"postgres\" //\u8fde\u63a5\u6570\u636e\u5e93\u540d\n    config.Port = 15432          //\u7aef\u53e3\u53f7\n    conn, err = pgx.Connect(config)\n    return conn, err\n}\n</code></pre> <pre><code>[root@VM_0_29_centos opentenbase]# go run conn.go \n\u8bbf\u95ee\u65f6\u95f4\uff1a 2018-04-03 20:40:28\n\u65e5\u5fd7\u7ea7\u522b\uff1a Log\n\u8be6\u7ec6\u4fe1\u606f\uff1a \u8fde\u63a5\u6570\u636e\u5e93\u6210\u529f\n</code></pre> <p>\u7f16\u8bd1\u540e\u8fd0\u884c  </p> <pre><code>[root@VM_0_29_centos opentenbase]# go build conn.go \n[root@VM_0_29_centos opentenbase]# ./conn \n\u8bbf\u95ee\u65f6\u95f4\uff1a 2018-04-03 20:40:48\n\u65e5\u5fd7\u7ea7\u522b\uff1a Log\n\u8be6\u7ec6\u4fe1\u606f\uff1a \u8fde\u63a5\u6570\u636e\u5e93\u6210\u529f\n</code></pre>"},{"location":"guide/02-access/#62","title":"6.2\u3001\u521b\u5efa\u6570\u636e\u8868","text":"<pre><code>package main\n\nimport (\n    \"fmt\"\n    \"time\"\n\n    \"github.com/jackc/pgx\"\n)\n\nfunc main() {\n    var error_msg string\n    var sql string\n\n    //\u8fde\u63a5\u6570\u636e\u5e93\n    conn, err := db_connect()\n    if err != nil {\n        error_msg = \"\u8fde\u63a5\u6570\u636e\u5e93\u5931\u8d25\uff0c\u8be6\u60c5\uff1a\" + err.Error()\n        write_log(\"Error\", error_msg)\n        return\n    }\n    //\u7a0b\u5e8f\u8fd0\u884c\u7ed3\u675f\u65f6\u5173\u95ed\u8fde\u63a5\n    defer conn.Close()\n    write_log(\"Log\", \"\u8fde\u63a5\u6570\u636e\u5e93\u6210\u529f\")\n\n    //\u5efa\u7acb\u6570\u636e\u8868\n    sql = \"create table public.opentenbase(id varchar(20),nickname varchar(100)) distribute by shard(id) to group  default_group;\"\n    _, err = conn.Exec(sql)\n    if err != nil {\n        error_msg = \"\u521b\u5efa\u6570\u636e\u8868\u5931\u8d25,\u8be6\u60c5\uff1a\" + err.Error()\n        write_log(\"Error\", error_msg)\n        return\n    } else {\n        write_log(\"Log\", \"\u521b\u5efa\u6570\u636e\u8868\u6210\u529f\")\n    }\n}\n\n/*\n\u529f\u80fd\u63cf\u8ff0\uff1a\u5199\u5165\u65e5\u5fd7\u5904\u7406\n\n\u53c2\u6570\u8bf4\u660e\uff1a\nlog_level -- \u65e5\u5fd7\u7ea7\u522b\uff0c\u53ea\u80fd\u662f`Error`\u6216`Log`\nerror_msg -- \u65e5\u5fd7\u5185\u5bb9\n\n\u8fd4\u56de\u503c\u8bf4\u660e\uff1a\u65e0\n*/\n\nfunc write_log(log_level string, error_msg string) {\n    //\u6253\u5370\u9519\u8bef\u4fe1\u606f\n    fmt.Println(\"\u8bbf\u95ee\u65f6\u95f4\uff1a\", time.Now().Format(\"2006-01-02 15:04:05\"))\n    fmt.Println(\"\u65e5\u5fd7\u7ea7\u522b\uff1a\", log_level)\n    fmt.Println(\"\u8be6\u7ec6\u4fe1\u606f\uff1a\", error_msg)\n}\n\n/*\n\u529f\u80fd\u63cf\u8ff0\uff1a\u8fde\u63a5\u6570\u636e\u5e93\n\n\u53c2\u6570\u8bf4\u660e\uff1a\u65e0\n\n\u8fd4\u56de\u503c\u8bf4\u660e\uff1a\nconn *pgx.Conn -- \u8fde\u63a5\u4fe1\u606f\nerr error --\u9519\u8bef\u4fe1\u606f\n\n*/\n\nfunc db_connect() (conn *pgx.Conn, err error) {\n    var config pgx.ConnConfig\n    config.Host = \"127.0.0.1\"    //\u6570\u636e\u5e93\u4e3b\u673ahost\u6216ip\n    config.User = \"opentenbase\"         //\u8fde\u63a5\u7528\u6237\n    config.Password = \"pgsql\"    //\u7528\u6237\u5bc6\u7801\n    config.Database = \"postgres\" //\u8fde\u63a5\u6570\u636e\u5e93\u540d\n    config.Port = 15432          //\u7aef\u53e3\u53f7\n    conn, err = pgx.Connect(config)\n    return conn, err\n}\n</code></pre> <pre><code>[root@VM_0_29_centos opentenbase]# go run createtable.go \n\u8bbf\u95ee\u65f6\u95f4\uff1a 2018-04-03 20:50:24\n\u65e5\u5fd7\u7ea7\u522b\uff1a Log\n\u8be6\u7ec6\u4fe1\u606f\uff1a \u8fde\u63a5\u6570\u636e\u5e93\u6210\u529f\n\u8bbf\u95ee\u65f6\u95f4\uff1a 2018-04-03 20:50:24\n\u65e5\u5fd7\u7ea7\u522b\uff1a Log\n\u8be6\u7ec6\u4fe1\u606f\uff1a \u521b\u5efa\u6570\u636e\u8868\u6210\u529f\n</code></pre>"},{"location":"guide/02-access/#63","title":"6.3\u3001\u63d2\u5165\u6570\u636e","text":"<pre><code>package main\n\nimport (\n    \"fmt\"\n    \"strings\"\n    \"time\"\n\n    \"github.com/jackc/pgx\"\n)\n\nfunc main() {\n    var error_msg string\n    var sql string\n    var nickname string\n\n    //\u8fde\u63a5\u6570\u636e\u5e93\n    conn, err := db_connect()\n    if err != nil {\n        error_msg = \"\u8fde\u63a5\u6570\u636e\u5e93\u5931\u8d25\uff0c\u8be6\u60c5\uff1a\" + err.Error()\n        write_log(\"Error\", error_msg)\n        return\n    }\n    //\u7a0b\u5e8f\u8fd0\u884c\u7ed3\u675f\u65f6\u5173\u95ed\u8fde\u63a5\n    defer conn.Close()\n    write_log(\"Log\", \"\u8fde\u63a5\u6570\u636e\u5e93\u6210\u529f\")\n\n    //\u63d2\u5165\u6570\u636e\n    sql = \"insert into public.opentenbase values('1','opentenbase'),('2','pgxz');\"\n    _, err = conn.Exec(sql)\n    if err != nil {\n        error_msg = \"\u63d2\u5165\u6570\u636e\u5931\u8d25,\u8be6\u60c5\uff1a\" + err.Error()\n        write_log(\"Error\", error_msg)\n        return\n    } else {\n        write_log(\"Log\", \"\u63d2\u5165\u6570\u636e\u6210\u529f\")\n    }\n\n    //\u7ed1\u5b9a\u53d8\u91cf\u63d2\u5165\u6570\u636e,\u4e0d\u9700\u8981\u505a\u9632\u6ce8\u5165\u5904\u7406\n    sql = \"insert into public.opentenbase values($1,$2),($1,$3);\"\n    _, err = conn.Exec(sql, \"3\", \"postgresql\", \"postgres\")\n    if err != nil {\n        error_msg = \"\u63d2\u5165\u6570\u636e\u5931\u8d25,\u8be6\u60c5\uff1a\" + err.Error()\n        write_log(\"Error\", error_msg)\n        return\n    } else {\n        write_log(\"Log\", \"\u63d2\u5165\u6570\u636e\u6210\u529f\")\n    }\n\n    //\u62fc\u63a5sql\u8bed\u53e5\u63d2\u5165\u6570\u636e,\u9700\u8981\u505a\u9632\u6ce8\u5165\u5904\u7406\n    nickname = \"OpenTenBase is ' good!\"\n    sql = \"insert into public.opentenbase values('1','\" + sql_data_encode(nickname) + \"')\"\n    _, err = conn.Exec(sql)\n    if err != nil {\n        error_msg = \"\u63d2\u5165\u6570\u636e\u5931\u8d25,\u8be6\u60c5\uff1a\" + err.Error()\n        write_log(\"Error\", error_msg)\n        return\n    } else {\n        write_log(\"Log\", \"\u63d2\u5165\u6570\u636e\u6210\u529f\")\n    }\n}\n\n/*\n\u529f\u80fd\u63cf\u8ff0\uff1asql\u67e5\u8be2\u62fc\u63a5\u5b57\u7b26\u4e32\u7f16\u7801\n\n\u53c2\u6570\u8bf4\u660e\uff1a\nstr -- \u8981\u7f16\u7801\u7684\u5b57\u7b26\u4e32\n\n\u8fd4\u56de\u503c\u8bf4\u660e\uff1a\n\u8fd4\u56de\u7f16\u7801\u8fc7\u7684\u5b57\u7b26\u4e32\n\n*/\n\nfunc sql_data_encode(str string) string {\n    return strings.Replace(str, \"'\", \"''\", -1)\n}\n\n/*\n\u529f\u80fd\u63cf\u8ff0\uff1a\u5199\u5165\u65e5\u5fd7\u5904\u7406\n\n\u53c2\u6570\u8bf4\u660e\uff1a\nlog_level -- \u65e5\u5fd7\u7ea7\u522b\uff0c\u53ea\u80fd\u662f\u662fError\u6216Log\nerror_msg -- \u65e5\u5fd7\u5185\u5bb9\n\n\u8fd4\u56de\u503c\u8bf4\u660e\uff1a\u65e0\n*/\n\nfunc write_log(log_level string, error_msg string) {\n    //\u6253\u5370\u9519\u8bef\u4fe1\u606f\n    fmt.Println(\"\u8bbf\u95ee\u65f6\u95f4\uff1a\", time.Now().Format(\"2006-01-02 15:04:05\"))\n    fmt.Println(\"\u65e5\u5fd7\u7ea7\u522b\uff1a\", log_level)\n    fmt.Println(\"\u8be6\u7ec6\u4fe1\u606f\uff1a\", error_msg)\n}\n\n/*\n\u529f\u80fd\u63cf\u8ff0\uff1a\u8fde\u63a5\u6570\u636e\u5e93\n\n\u53c2\u6570\u8bf4\u660e\uff1a\u65e0\n\n\u8fd4\u56de\u503c\u8bf4\u660e\uff1a\nconn *pgx.Conn -- \u8fde\u63a5\u4fe1\u606f\nerr error --\u9519\u8bef\u4fe1\u606f\n\n*/\n\nfunc db_connect() (conn *pgx.Conn, err error) {\n    var config pgx.ConnConfig\n    config.Host = \"127.0.0.1\"    //\u6570\u636e\u5e93\u4e3b\u673ahost\u6216ip\n    config.User = \"opentenbase\"         //\u8fde\u63a5\u7528\u6237\n    config.Password = \"pgsql\"    //\u7528\u6237\u5bc6\u7801\n    config.Database = \"postgres\" //\u8fde\u63a5\u6570\u636e\u5e93\u540d\n    config.Port = 15432          //\u7aef\u53e3\u53f7\n    conn, err = pgx.Connect(config)\n    return conn, err\n}\n</code></pre> <pre><code>[root@VM_0_29_centos opentenbase]# go run insert.go \n\u8bbf\u95ee\u65f6\u95f4\uff1a 2018-04-03 21:05:51\n\u65e5\u5fd7\u7ea7\u522b\uff1a Log\n\u8be6\u7ec6\u4fe1\u606f\uff1a \u8fde\u63a5\u6570\u636e\u5e93\u6210\u529f\n\u8bbf\u95ee\u65f6\u95f4\uff1a 2018-04-03 21:05:51\n\u65e5\u5fd7\u7ea7\u522b\uff1a Log\n\u8be6\u7ec6\u4fe1\u606f\uff1a \u63d2\u5165\u6570\u636e\u6210\u529f\n\u8bbf\u95ee\u65f6\u95f4\uff1a 2018-04-03 21:05:51\n\u65e5\u5fd7\u7ea7\u522b\uff1a Log\n\u8be6\u7ec6\u4fe1\u606f\uff1a \u63d2\u5165\u6570\u636e\u6210\u529f\n\u8bbf\u95ee\u65f6\u95f4\uff1a 2018-04-03 21:05:51\n\u65e5\u5fd7\u7ea7\u522b\uff1a Log\n\u8be6\u7ec6\u4fe1\u606f\uff1a \u63d2\u5165\u6570\u636e\u6210\u529f\n</code></pre>"},{"location":"guide/02-access/#64","title":"6.4\u3001\u67e5\u8be2\u6570\u636e","text":"<pre><code>package main\n\nimport (\n    \"fmt\"\n    \"strings\"\n    \"time\"\n\n    \"github.com/jackc/pgx\"\n)\n\nfunc main() {\n    var error_msg string\n    var sql string\n\n    //\u8fde\u63a5\u6570\u636e\u5e93\n    conn, err := db_connect()\n    if err != nil {\n        error_msg = \"\u8fde\u63a5\u6570\u636e\u5e93\u5931\u8d25\uff0c\u8be6\u60c5\uff1a\" + err.Error()\n        write_log(\"Error\", error_msg)\n        return\n    }\n    //\u7a0b\u5e8f\u8fd0\u884c\u7ed3\u675f\u65f6\u5173\u95ed\u8fde\u63a5\n    defer conn.Close()\n    write_log(\"Log\", \"\u8fde\u63a5\u6570\u636e\u5e93\u6210\u529f\")\n\n    sql = \"SELECT id,nickname FROM public.opentenbase LIMIT 2\"\n    rows, err := conn.Query(sql)\n    if err != nil {\n        error_msg = \"\u67e5\u8be2\u6570\u636e\u5931\u8d25,\u8be6\u60c5\uff1a\" + err.Error()\n        write_log(\"Error\", error_msg)\n        return\n    } else {\n        write_log(\"Log\", \"\u67e5\u8be2\u6570\u636e\u6210\u529f\")\n    }\n\n    var nickname string\n    var id string\n\n    for rows.Next() {\n        err = rows.Scan(&amp;id, &amp;nickname)\n        if err != nil {\n            error_msg = \"\u6267\u884c\u67e5\u8be2\u5931\u8d25\uff0c\u8be6\u60c5\uff1a\" + err.Error()\n            write_log(\"Error\", error_msg)\n            return\n        }\n        error_msg = fmt.Sprintf(\"id\uff1a%s nickname\uff1a%s\", id, nickname)\n        write_log(\"Log\", error_msg)\n    }\n    rows.Close()\n\n    nickname = \"opentenbase\"\n\n    sql = \"SELECT id,nickname FROM public.opentenbase WHERE nickname ='\" + sql_data_encode(nickname) + \"' \"\n    rows, err = conn.Query(sql)\n    if err != nil {\n        error_msg = \"\u67e5\u8be2\u6570\u636e\u5931\u8d25,\u8be6\u60c5\uff1a\" + err.Error()\n        write_log(\"Error\", error_msg)\n        return\n    } else {\n        write_log(\"Log\", \"\u67e5\u8be2\u6570\u636e\u6210\u529f\")\n    }\n    defer rows.Close()\n\n    for rows.Next() {\n        err = rows.Scan(&amp;id, &amp;nickname)\n        if err != nil {\n            error_msg = \"\u6267\u884c\u67e5\u8be2\u5931\u8d25\uff0c\u8be6\u60c5\uff1a\" + err.Error()\n            write_log(\"Error\", error_msg)\n            return\n        }\n        error_msg = fmt.Sprintf(\"id\uff1a%s nickname\uff1a%s\", id, nickname)\n        write_log(\"Log\", error_msg)\n    }\n}\n\n/*\n\u529f\u80fd\u63cf\u8ff0\uff1asql\u67e5\u8be2\u62fc\u63a5\u5b57\u7b26\u4e32\u7f16\u7801\n\n\u53c2\u6570\u8bf4\u660e\uff1a\nstr -- \u8981\u7f16\u7801\u7684\u5b57\u7b26\u4e32\n\n\u8fd4\u56de\u503c\u8bf4\u660e\uff1a\n\u8fd4\u56de\u7f16\u7801\u8fc7\u7684\u5b57\u7b26\u4e32\n\n*/\n\nfunc sql_data_encode(str string) string {\n    return strings.Replace(str, \"'\", \"''\", -1)\n}\n\n/*\n\u529f\u80fd\u63cf\u8ff0\uff1a\u5199\u5165\u65e5\u5fd7\u5904\u7406\n\n\u53c2\u6570\u8bf4\u660e\uff1a\nlog_level -- \u65e5\u5fd7\u7ea7\u522b\uff0c\u53ea\u80fd\u662f\u662fError\u6216Log\nerror_msg -- \u65e5\u5fd7\u5185\u5bb9\n\n\u8fd4\u56de\u503c\u8bf4\u660e\uff1a\u65e0\n*/\n\nfunc write_log(log_level string, error_msg string) {\n    //\u6253\u5370\u9519\u8bef\u4fe1\u606f\n    fmt.Println(\"\u8bbf\u95ee\u65f6\u95f4\uff1a\", time.Now().Format(\"2006-01-02 15:04:05\"))\n    fmt.Println(\"\u65e5\u5fd7\u7ea7\u522b\uff1a\", log_level)\n    fmt.Println(\"\u8be6\u7ec6\u4fe1\u606f\uff1a\", error_msg)\n}\n\n/*\n\u529f\u80fd\u63cf\u8ff0\uff1a\u8fde\u63a5\u6570\u636e\u5e93\n\n\u53c2\u6570\u8bf4\u660e\uff1a\u65e0\n\n\u8fd4\u56de\u503c\u8bf4\u660e\uff1a\nconn *pgx.Conn -- \u8fde\u63a5\u4fe1\u606f\nerr error --\u9519\u8bef\u4fe1\u606f\n\n*/\n\nfunc db_connect() (conn *pgx.Conn, err error) {\n    var config pgx.ConnConfig\n    config.Host = \"127.0.0.1\"    //\u6570\u636e\u5e93\u4e3b\u673ahost\u6216ip\n    config.User = \"opentenbase\"         //\u8fde\u63a5\u7528\u6237\n    config.Password = \"pgsql\"    //\u7528\u6237\u5bc6\u7801\n    config.Database = \"postgres\" //\u8fde\u63a5\u6570\u636e\u5e93\u540d\n    config.Port = 15432          //\u7aef\u53e3\u53f7\n    conn, err = pgx.Connect(config)\n    return conn, err\n}\n</code></pre> <pre><code>[root@VM_0_29_centos opentenbase]# go run select.go\n\u8bbf\u95ee\u65f6\u95f4\uff1a 2018-04-09 10:35:50\n\u65e5\u5fd7\u7ea7\u522b\uff1a Log\n\u8be6\u7ec6\u4fe1\u606f\uff1a \u8fde\u63a5\u6570\u636e\u5e93\u6210\u529f\n\u8bbf\u95ee\u65f6\u95f4\uff1a 2018-04-09 10:35:50\n\u65e5\u5fd7\u7ea7\u522b\uff1a Log\n\u8be6\u7ec6\u4fe1\u606f\uff1a \u67e5\u8be2\u6570\u636e\u6210\u529f\n\u8bbf\u95ee\u65f6\u95f4\uff1a 2018-04-09 10:35:50\n\u65e5\u5fd7\u7ea7\u522b\uff1a Log\n\u8be6\u7ec6\u4fe1\u606f\uff1a id\uff1a2 nickname\uff1aopentenbase\n\u8bbf\u95ee\u65f6\u95f4\uff1a 2018-04-09 10:35:50\n\u65e5\u5fd7\u7ea7\u522b\uff1a Log\n\u8be6\u7ec6\u4fe1\u606f\uff1a id\uff1a3 nickname\uff1apostgresql\n\u8bbf\u95ee\u65f6\u95f4\uff1a 2018-04-09 10:35:50\n\u65e5\u5fd7\u7ea7\u522b\uff1a Log\n\u8be6\u7ec6\u4fe1\u606f\uff1a \u67e5\u8be2\u6570\u636e\u6210\u529f\n\u8bbf\u95ee\u65f6\u95f4\uff1a 2018-04-09 10:35:50\n\u65e5\u5fd7\u7ea7\u522b\uff1a Log\n\u8be6\u7ec6\u4fe1\u606f\uff1a id\uff1a1 nickname\uff1aopentenbase\n</code></pre>"},{"location":"guide/02-access/#65copy-from","title":"6.5\u3001\u6d41\u6570\u636ecopy from\u5165\u8868","text":"<pre><code>package main\n\nimport (\n    \"fmt\"\n    \"math/rand\"\n    \"time\"\n\n    \"github.com/jackc/pgx\"\n)\n\nfunc main() {\n    var error_msg string\n\n    //\u8fde\u63a5\u6570\u636e\u5e93\n    conn, err := db_connect()\n    if err != nil {\n        error_msg = \"\u8fde\u63a5\u6570\u636e\u5e93\u5931\u8d25\uff0c\u8be6\u60c5\uff1a\" + err.Error()\n        write_log(\"Error\", error_msg)\n        return\n    }\n    //\u7a0b\u5e8f\u8fd0\u884c\u7ed3\u675f\u65f6\u5173\u95ed\u8fde\u63a5\n    defer conn.Close()\n    write_log(\"Log\", \"\u8fde\u63a5\u6570\u636e\u5e93\u6210\u529f\")\n\n    //\u6784\u90205000\u884c\u6570\u636e\n    inputRows := [][]interface{}{}\n    var id string\n    var nickname string\n    for i := 0; i &lt; 5000; i++ {\n        id = fmt.Sprintf(\"%d\", rand.Intn(10000))\n        nickname = fmt.Sprintf(\"%d\", rand.Intn(10000))\n        inputRows = append(inputRows, []interface{}{id, nickname})\n    }\n    copyCount, err := conn.CopyFrom(pgx.Identifier{\"opentenbase\"}, []string{\"id\", \"nickname\"}, pgx.CopyFromRows(inputRows))\n    if err != nil {\n        error_msg = \"\u6267\u884ccopyFrom\u5931\u8d25,\u8be6\u60c5\uff1a\" + err.Error()\n        write_log(\"Error\", error_msg)\n        return\n    }\n    if copyCount != len(inputRows) {\n        error_msg = fmt.Sprintf(\"\u6267\u884ccopyFrom\u5931\u8d25\uff0ccopy\u884c\u6570\uff1a%d \u8fd4\u56de\u884c\u6570\u4e3a\uff1a%d\", len(inputRows), copyCount)\n        write_log(\"Error\", error_msg)\n        return\n    } else {\n        error_msg = \"Copy \u8bb0\u5f55\u6210\u529f\"\n        write_log(\"Log\", error_msg)\n    }\n\n}\n\n/*\n\u529f\u80fd\u63cf\u8ff0\uff1a\u5199\u5165\u65e5\u5fd7\u5904\u7406\n\n\u53c2\u6570\u8bf4\u660e\uff1a\nlog_level -- \u65e5\u5fd7\u7ea7\u522b\uff0c\u53ea\u80fd\u662f\u662fError\u6216Log\nerror_msg -- \u65e5\u5fd7\u5185\u5bb9\n\n\u8fd4\u56de\u503c\u8bf4\u660e\uff1a\u65e0\n*/\n\nfunc write_log(log_level string, error_msg string) {\n    //\u6253\u5370\u9519\u8bef\u4fe1\u606f\n    fmt.Println(\"\u8bbf\u95ee\u65f6\u95f4\uff1a\", time.Now().Format(\"2006-01-02 15:04:05\"))\n    fmt.Println(\"\u65e5\u5fd7\u7ea7\u522b\uff1a\", log_level)\n    fmt.Println(\"\u8be6\u7ec6\u4fe1\u606f\uff1a\", error_msg)\n}\n\n/*\n\u529f\u80fd\u63cf\u8ff0\uff1a\u8fde\u63a5\u6570\u636e\u5e93\n\n\u53c2\u6570\u8bf4\u660e\uff1a\u65e0\n\n\u8fd4\u56de\u503c\u8bf4\u660e\uff1a\nconn *pgx.Conn -- \u8fde\u63a5\u4fe1\u606f\nerr error --\u9519\u8bef\u4fe1\u606f\n\n*/\n\nfunc db_connect() (conn *pgx.Conn, err error) {\n    var config pgx.ConnConfig\n    config.Host = \"127.0.0.1\"    //\u6570\u636e\u5e93\u4e3b\u673ahost\u6216ip\n    config.User = \"opentenbase\"         //\u8fde\u63a5\u7528\u6237\n    config.Password = \"pgsql\"    //\u7528\u6237\u5bc6\u7801\n    config.Database = \"postgres\" //\u8fde\u63a5\u6570\u636e\u5e93\u540d\n    config.Port = 15432          //\u7aef\u53e3\u53f7\n    conn, err = pgx.Connect(config)\n    return conn, err\n}\n</code></pre> <pre><code>[root@VM_0_29_centos opentenbase]# go run copy_from.go \n\u8bbf\u95ee\u65f6\u95f4\uff1a 2018-04-09 10:36:40\n\u65e5\u5fd7\u7ea7\u522b\uff1a Log\n\u8be6\u7ec6\u4fe1\u606f\uff1a \u8fde\u63a5\u6570\u636e\u5e93\u6210\u529f\n\u8bbf\u95ee\u65f6\u95f4\uff1a 2018-04-09 10:36:40\n\u65e5\u5fd7\u7ea7\u522b\uff1a Log\n\u8be6\u7ec6\u4fe1\u606f\uff1a Copy \u8bb0\u5f55\u6210\u529f\n</code></pre>"},{"location":"guide/02-access/#66golang","title":"6.6\u3001golang\u76f8\u5173\u8d44\u6e90\u5305","text":"<p>\u9700\u8981git\u7684\u8d44\u6e90\u5305: https://github.com/jackc/pgx https://github.com/pkg/errors  </p>"},{"location":"guide/03-basic-use/","title":"\u57fa\u672c\u4f7f\u7528","text":"<p>\u5728\u5feb\u901f\u5165\u95e8\u6587\u7ae0\u4e2d\u6211\u4eec\u4ecb\u7ecd\u4e86 OpenTenBase \u7684\u67b6\u6784\u3001\u6e90\u7801\u7f16\u8bd1\u5b89\u88c5\u3001\u96c6\u7fa4\u8fd0\u884c\u72b6\u6001\u3001\u542f\u52a8\u505c\u6b62\u7b49\u5185\u5bb9\u3002</p> <p>\u5728\u5e94\u7528\u63a5\u5165\u4e2d\u6211\u4eec\u4ecb\u7ecd\u4e86\u5e94\u7528\u7a0b\u5e8f\u8fde\u63a5 OpenTenBase \u6570\u636e\u5e93\u8fdb\u884c\u5efa\u5e93\u3001\u5efa\u8868\u3001\u6570\u636e\u5bfc\u5165\u3001\u67e5\u8be2\u7b49\u64cd\u4f5c\u3002</p> <p>\u672c\u7bc7\u5c06\u4ecb\u7ecdOpenTenBase\u4e2d\u7279\u6709\u7684shard\u8868\u3001\u590d\u5236\u8868\u7684\u521b\u5efa\uff0c\u548c\u57fa\u672c\u7684DML\u64cd\u4f5c\u3002</p>"},{"location":"guide/03-basic-use/#1","title":"1\u3001\u521b\u5efa\u6570\u636e\u8868","text":""},{"location":"guide/03-basic-use/#11shard","title":"1.1\u3001\u521b\u5efashard\u666e\u901a\u8868\uff08\u5206\u7247\u8868\uff09","text":"<p>  \u8bf4\u660e\uff1a </p> <ul> <li>distribute by shard(x) \u7528\u4e8e\u6307\u5b9a\u5206\u5e03\u952e\uff0c\u6570\u636e\u5206\u5e03\u4e8e\u90a3\u4e2a\u8282\u70b9\u5c31\u662f\u6839\u636e\u8fd9\u4e2a\u5b57\u6bb5\u503c\u6765\u8ba1\u7b97\u5206\u7247\u3002  </li> <li>to group xxx \u7528\u4e8e\u6307\u5b9a\u5b58\u50a8\u7ec4\uff08\u6bcf\u4e2a\u5b58\u50a8\u7ec4\u53ef\u4ee5\u6709\u591a\u4e2a\u8282\u70b9\uff09\u3002  </li> <li>\u5206\u5e03\u952e\u5b57\u6bb5\u503c\u4e0d\u80fd\u4fee\u6539\uff0c\u5b57\u6bb5\u957f\u5ea6\u4e0d\u80fd\u4fee\u6539\uff0c\u5b57\u6bb5\u7c7b\u578b\u4e0d\u80fd\u4fee\u6539\u3002 </li> </ul> <p>\u5206\u5e03\u5f0f\u6570\u636e\u5e93\u4e2d\uff0c\u5206\u7247\u8868\u662f\u4f7f\u7528\u6700\u591a\u7684\u8868\u7c7b\u578b\uff0c\u5408\u7406\u7684\u5206\u7247\u952e\u8bbe\u7f6e\u5c06\u4f1a\u7cfb\u7edf\u7684\u6027\u80fd\u63d0\u5347\u5f88\u591a\u500d\uff0c\u4e0d\u5408\u7406\u7684\u5206\u7247\u952e\u4e5f\u4f1a\u5bfc\u81f4SQL\u6027\u80fd\u6076\u5316\u4e25\u91cd\uff0c\u56e0\u6b64\u5206\u7247\u952e\u7684\u4f18\u5316\u662f\u5206\u5e03\u5f0fSQL\u4f18\u5316\u7684\u91cd\u70b9\u4e2d\u7684\u91cd\u70b9\uff1a \u5206\u7247\u952e\u9009\u62e9\u51c6\u5219\uff1a * \u51c6\u52191\uff1a\u9ad8\u9891\u7c7bSQL\u7684\u4e1a\u52a1\u5b57\u6bb5\uff0c\u907f\u514dSQL\u4ea7\u751f\u5206\u5e03\u5f0f\u4e8b\u52a1\uff0c\u907f\u514d\u8de8DN\u8282\u70b9\u6570\u636e\u63d2\u5165\u3001\u66f4\u65b0\u3001\u5220\u9664\uff08SQL\u80fd\u5e26\u4e0a\u5206\u7247\u952e\uff09\u3002 * \u51c6\u52192\uff1a\u5206\u6790\u7c7bSQL\u7684\u5173\u8054\u5b57\u6bb5\uff0c\u5c3d\u91cf\u907f\u514dSQL\u4ea7\u751f\u6279\u91cf\u8de8DN\u8282\u70b9\u6570\u636e\u4ea4\u4e92\uff08\u5173\u8054\u5b57\u6bb5\u4e3a\u5206\u7247\u952e\uff09\u3002 * \u51c6\u52193\uff1a\u5c3d\u91cf\u907f\u514dDN\u8282\u70b9\u6570\u636e\u4e0d\u5747\u8861\u3002 \u51c6\u52191\u30012\u548c\u51c6\u52193\u53ef\u80fd\u6709\u51b2\u7a81\uff0c\u9009\u62e9\u65f6\u51c6\u52191\u9ad8\u4e8e\u51c6\u52192\u30013</p> <p>\u6570\u636e\u5e93\u5728\u8fc1\u79fb\u65f6\uff0c\u4f1a\u4f7f\u7528\u9ed8\u8ba4\u7684\u89c4\u5219\u6307\u5b9a\u5206\u7247\u952e\uff0c\u5927\u90e8\u5206\u60c5\u51b5\u4e0b\u662f\u6700\u4f18\u7684\uff0c\u4f46\u4ecd\u6709\u90e8\u5206\u60c5\u666f\u9700\u8981\u8c03\u6574\uff0c\u4e0b\u9762\u662f\u9ed8\u8ba4\u539f\u5219\uff1a 1\uff09\u6709\u4e3b\u952e\uff0c\u5219\u9009\u62e9\u4e3b\u952e\u505a\u5206\u7247\u952e\u3002\u5982\u679c\u4e3b\u952e\u662f\u590d\u5408\u5b57\u6bb5\u7ec4\u5408\uff0c\u5219\u9009\u62e9\u7b2c\u4e00\u4e2a\u5b57\u6bb5\u505a\u5206\u7247\u952e\u3002 2\uff09\u6709\u552f\u4e00\u7d22\u5f15\uff0c\u5219\u9009\u62e9\u552f\u4e00\u7d22\u5f15\u5217\u505a\u5206\u7247\u952e\u3002\u5982\u679c\u552f\u4e00\u7d22\u5f15\u662f\u590d\u5408\u5b57\u6bb5\u7ec4\u5408\uff0c\u5219\u9009\u62e9\u7b2c\u4e00\u4e2a\u5b57\u6bb5\u505a\u5206\u7247\u952e\u3002 3\uff09\u4f7f\u7528\u7b2c\u4e00\u4e2a\u5b57\u6bb5\u505a\u5206\u7247\u952e\u3002</p> <p>\u4e00\u822c\u4f1a\u6709\u4e24\u4e2a\u9636\u6bb5\u8c03\u6574\u8868\u7c7b\u578b\u548c\u5206\u7247\u952e\uff1a \u9636\u6bb5\u4e00\uff1a\u8fc1\u79fb\u4e4b\u524d\uff0c\u9488\u5bf9TOP 20\u7684\u5927\u8868\u6216\u8005\u5e38\u7528\u8868\u786e\u5b9a\u8868\u7684\u7c7b\u578b\u548c\u5206\u7247\u952e\uff0c\u5728\u8fc1\u79fb\u5b8c\u8868\u7ed3\u6784\u540e\uff0c\u8fdb\u884c\u8c03\u6574\uff0c\u4e4b\u540e\u518d\u5bfc\u5165\u6570\u636e\u3002 \u9636\u6bb5\u4e8c\uff1a\u5728\u9002\u914d\u6d4b\u8bd5\u3001\u6027\u80fd\u6d4b\u8bd5\u9636\u6bb5\uff0c\u9488\u5bf9\u6709\u6027\u80fd\u95ee\u9898\u7684\u4e1a\u52a1\u518d\u8fdb\u884c\u8c03\u4f18\u3002</p>"},{"location":"guide/03-basic-use/#12shard","title":"1.2\u3001\u521b\u5efashard\u666e\u901a\u5206\u533a\u8868\uff08\u5206\u7247\u8868+\u5206\u533a\uff09","text":"<pre><code>[opentenbase@VM_0_37_centos shell]$ psql -h 172.16.0.42 -p 11387 -d postgres -U opentenbase\npsql (PostgreSQL 10.0 opentenbase V2)\nType \"help\" for help.\n\npostgres=# create table public.t1_pt\n(\nf1 int not null,\nf2 timestamp not null,\nf3 varchar(20),\nprimary key(f1)\n) \npartition by range (f2) \nbegin (timestamp without time zone '2019-01-01 0:0:0') \nstep (interval '1 month') partitions (3) \ndistribute by shard(f1) \nto group default_group;\n\nCREATE TABLE\npostgres=#\n\npostgres=# \\d+ public.t1_pt\n                                             Table \"public.t1_pt\"\n Column |            Type             | Collation | Nullable | Default | Storage  | Stats target | Description \n--------+-----------------------------+-----------+----------+---------+----------+--------------+-------------\n f1     | integer                     |           | not null |         | plain    |              | \n f2     | timestamp without time zone |           | not null |         | plain    |              | \n f3     | character varying(20)       |           |          |         | extended |              | \nIndexes:\n    \"t1_pt_pkey\" PRIMARY KEY, btree (f1)\nDistribute By: SHARD(f1)\nLocation Nodes: ALL DATANODES\nPartition By: RANGE(f2)\n         # Of Partitions: 3\n         Start With: 2019-01-01\n         Interval Of Partition: 1 MONTH\n\npostgres=#  \n\n</code></pre> <p>\u8bf4\u660e\uff1a</p> <ul> <li>partition by range (x) \u7528\u4e8e\u6307\u5b9a\u5206\u533a\u952e\uff0c\u652f\u6301timesamp,int\u7c7b\u578b\uff0c\u6570\u636e\u5206\u5e03\u4e8e\u90a3\u4e2a\u5b50\u8868\u5c31\u662f\u6839\u636e\u8fd9\u4e2a\u5b57\u6bb5\u503c\u6765\u8ba1\u7b97\u5206\u533a\u3002</li> <li>begin( xxx )\u6307\u5b9a\u5f00\u59cb\u5206\u533a\u7684\u65f6\u95f4\u70b9\u3002</li> <li>step(xxx)\u6307\u5b9a\u5206\u533a\u6709\u5468\u671f</li> <li>partions(xx)\u521d\u59cb\u5316\u65f6\u5efa\u7acb\u5206\u533a\u5b50\u8868\u4e2a\u6570\u3002</li> <li>\u589e\u52a0\u5206\u533a\u5b50\u8868\u7684\u65b9\u6cd5ALTER TABLE public.t1_pt ADD PARTITIONS 2;  </li> </ul>"},{"location":"guide/03-basic-use/#13","title":"1.3\u3001\u521b\u5efa\u590d\u5236\u8868","text":"<pre><code>\n[opentenbase@VM_0_37_centos shell]$ psql -h 172.16.0.42 -p 11387 -d postgres -U opentenbase\npsql (PostgreSQL 10.0 opentenbase V2)\nType \"help\" for help.\n\npostgres=# create table public.t1_rep\n(\nf1 int not null,\nf2 varchar(20),\nprimary key(f1)\n) \ndistribute by replication ;\nto group default_group;\nCREATE TABLE\n\n</code></pre> <p>\u8bf4\u660e\uff1a</p> <ul> <li>\u7ecf\u5e38\u8981\u8de8\u5e93JOIN\u7684\u5c0f\u6570\u636e\u91cf\u8868\u53ef\u4ee5\u8003\u8651\u4f7f\u7528\u590d\u5236\u8868\u3002</li> <li>\u590d\u5236\u8868\u662f\u6240\u6709\u8282\u70b9\u90fd\u6709\u5168\u91cf\u6570\u636e\uff0c\u5bf9\u4e8e\u5927\u6570\u636e\u91cf\u7684\u6570\u636e\u8868\u4e0d\u9002\u5408\u3002</li> <li>\u590d\u5236\u8868\u66f4\u65b0\u6027\u80fd\u8f83\u4f4e\u3002  </li> </ul>"},{"location":"guide/03-basic-use/#14","title":"1.4\u3001\u521b\u5efa\u5355\u8868","text":"<p>\u5355\u8868\u5373\u8868\u53ea\u5b58\u5728\u4e8e\u67d0\u4e00\u4e2aDN\u8282\u70b9\uff0c\u76ee\u524d\u8fd8\u4e0d\u652f\u6301\u6307\u5b9a\u4efb\u610fDN\u8282\u70b9\u8fdb\u884c\u5355\u8868\u521b\u5efa\u3002\u53ef\u4ee5\u901a\u8fc7\u591agroup\u7684\u80fd\u529b\u8fc2\u56de\u5b9e\u73b0\uff1a\u5148\u6dfb\u52a0\u4e00\u4e2aDN\u8282\u70b9\uff0c\u7136\u540e\u5c06\u8be5\u8282\u70b9\u521b\u5efa\u4e3a\u4e00\u4e2a\u72ec\u7acb\u7684group\u4e2d\uff0c\u53ef\u4ee5\u547d\u540d\u4e3asingle_group\u3002\u7136\u540e\u521b\u5efa\u8868\u65f6\uff0c\u6307\u5b9a\u8868\u7684group\u4e3a\u521a\u521a\u521b\u5efa\u7684single_group\u3002\uff08\u6ce8\u610f\uff1a\u4e0d\u80fd\u4f7f\u7528default_group\u4e2d\u7684\u8282\u70b9\uff0c\u521b\u5efagroup\u7684\u65f6\u5019\u4e5f\u4f1a\u5931\u8d25\u7684\uff09</p> <pre><code>\n[opentenbase@VM_0_37_centos shell]$ psql -h 172.16.0.42 -p 11387 -d postgres -U opentenbase\npsql (PostgreSQL 10.0 opentenbase V2)\nType \"help\" for help.\n\npostgres=# create table public.t1_signal\n(\nf1 int not null,\nf2 varchar(20),\nprimary key(f1)\n) \ndistribute by replication ;\nto group single_group;\nCREATE TABLE\n\n</code></pre>"},{"location":"guide/03-basic-use/#15","title":"1.5\u3001\u51e0\u79cd\u8868\u7684\u9002\u7528\u573a\u666f\u7b80\u8ff0","text":"<p>\u4e0a\u8ff0\u51e0\u79cd\u8868\u7c7b\u578b\u6709\u5404\u81ea\u7684\u4f7f\u7528\u573a\u666f\uff0c\u5408\u7406\u7684\u4f7f\u7528\u8868\u7c7b\u578b\uff0c\u5bf9SQL\u7684\u6027\u80fd\u4f1a\u5e26\u6765\u5f88\u5927\u7684\u63d0\u5347\uff1a</p> \u5206\u5e03\u5f0f\u8868\u7c7b\u578b \u63cf\u8ff0 \u9002\u7528\u573a\u666f \u4f7f\u7528\u7ea6\u675f \u5206\u7247\u8868 \u8868\u8bb0\u5f55\u6309\u5206\u7247\u952e\u503c\u8fdb\u884chash\u6253\u6563\u5230\u6240\u6709\u5206\u7247\u4e2d\uff0c\u6bcf\u4e2a\u5206\u7247\u90fd\u53ea\u6709\u4e00\u90e8\u5206\u6570\u636e\u3002 \u6570\u636e\u91cf\u7279\u522b\u5927\uff0c\u5e76\u4e14\u67e5\u8be2\u3001\u5220\u9664\u3001\u4fee\u6539\u8be5\u8868\u7684\u6570\u636e\u65f6\u53ef\u4ee5\u6307\u5b9a\u5206\u7247\u952e\u4f5c\u4e3a\u64cd\u4f5c\u6761\u4ef6\uff0c\u5927\u591a\u6570\u8bed\u53e5\u4e0d\u6d89\u53ca\u8de8\u5e93\u5206\u5e03\u5f0f\u4e8b\u52a1\u8bbf\u95ee\u3002 \u67e5\u8be2\u3001\u66f4\u65b0\u3001\u5220\u9664\u6570\u636e\u65f6\u9700\u8981\u6307\u5b9a\u5206\u7247\u952e\uff1b\u5206\u7247\u952e\u5b57\u6bb5\u7c7b\u578b\u3001\u957f\u5ea6\u4e0d\u80fd\u4fee\u6539\uff0c\u5206\u7247\u952e\u503c\u4e0d\u80fd\u76f4\u63a5\u66f4\u65b0\uff1b\u76ee\u524d\u4e0d\u80fd\u57fa\u4e8e\u975e\u5206\u7247\u952e\u5b57\u6bb5\u521b\u5efa\u4e3b\u952e\u6216\u8005\u552f\u4e00\u7d22\u5f15\u3002 \u590d\u5236\u8868 \u6240\u6709\u5206\u7247\u4e2d\u90fd\u5b58\u50a8\u4e00\u4efd\u76f8\u540c\u7684\u5168\u91cf\u6570\u636e\u3002 \u7ecf\u5e38\u8981\u4f7f\u7528\u975e\u5206\u7247\u952e\u5b57\u6bb5JOIN\u5e76\u4e14\u66f4\u65b0\u9891\u7387\u8f83\u4f4e\u7684\u5c0f\u8868\u63a8\u8350\u4f7f\u7528\u590d\u5236\u8868\u3002 \u8be5\u8868\u5e76\u53d1\u66f4\u65b0\u4f4e\u3001\u6570\u636e\u91cf\u5c11\uff0c\u4e0d\u9700\u8981\u540c\u6b65\u8be5\u8868\u7684\u6570\u636e\u5230Kafka\u3002 \u5355\u8868 \u5b58\u50a8\u5728\u4e00\u4e2a\u4e13\u95e8\u5b9a\u4e49\u7684group\u4e2d\uff0c\u8fd9\u4e2agroup\u4e2d\u53ea\u6709\u4e00\u4e2a\u5206\u7247\u3002 \u67e5\u8be2\u3001\u5220\u9664\u3001\u4fee\u6539\u8be5\u8868\u7684\u6570\u636e\u65f6\u65e0\u6cd5\u5229\u7528\u5206\u7247\u952e\uff0c\u66f4\u65b0\u9891\u7e41\uff0c\u4f46\u6570\u636e\u91cf\u4e0d\u662f\u7279\u522b\u5927\u3002 \u66f4\u65b0\u9891\u7e41\uff0c\u6570\u636e\u91cf\u4e0d\u662f\u7279\u522b\u5927\uff0c\u4e0d\u9700\u8981\u4e0e\u5176\u5b83\u5206\u7247\u8868\u6216\u8005\u590d\u5236\u8868\u8fdb\u884cJOIN\u64cd\u4f5c\u3002"},{"location":"guide/03-basic-use/#2dml","title":"2\u3001DML\u76f8\u5173\u64cd\u4f5c","text":""},{"location":"guide/03-basic-use/#21insert","title":"2.1\u3001INSERT","text":"<ul> <li>\u63d2\u5165\u591a\u6761\u8bb0\u5f55</li> </ul> <pre><code>CREATE TABLE public.t1_insert_mul \n( \n    f1 int not null,\n    f2 varchar(20),\n    primary key(f1) \n)  distribute by shard(f1) to group default_group;  \n\npostgres=# INSERT INTO  t1_insert_mul VALUES(1,'opentenbase'),(2,'pg'); \nINSERT 0 2\n\n</code></pre> <ul> <li>\u63d2\u5165\u66f4\u65b0</li> </ul> <pre><code>create table public.t1_conflict \n( \n    f1 int not null,\n    f2 varchar(20),\n    primary key(f1) \n)  distribute by shard(f1) to group default_group;   \n\ninsert into t1_conflict values(1,'opentenbase') ON CONFLICT (f1)  DO UPDATE SET f2 = 'opentenbase';\n\ncreate table public.t1_conflict \n( \n    f1 int not null,\n    f2 varchar(20) not null,\n    f3 int ,\n    primary key(f1,f2) \n) distribute by shard(f1) to group default_group;      \n\ninsert into t1_conflict values(1,'opentenbase',2) ON CONFLICT (f1,f2)  DO UPDATE SET f3 = 2;\n\n</code></pre> <ul> <li>\u63d2\u5165\u8fd4\u56de</li> </ul> <pre><code>create table public.t1_insert_return \n( \n    f1 int not null,\n    f2 varchar(20) not null default 'opentenbase',\n    primary key(f1) \n) distribute by shard(f1) to group default_group;    \n\npostgres=# insert into t1_insert_return values(1) returning *;  \n\n f1 |  f2    \n----+-------  \n  1 | opentenbase \n (1 row) \n INSERT 0 1\n\n</code></pre> <ul> <li>INSERT\u66f4\u591a\u7684\u4f7f\u7528\u65b9\u6cd5\u8bf7\u53c2\u8003Postgresql\u7528\u6cd5</li> </ul> <pre><code>http://www.postgres.cn/docs/10/sql-insert.html\n</code></pre>"},{"location":"guide/03-basic-use/#22update","title":"2.2\u3001UPDATE","text":"<ul> <li>\u57fa\u4e8e\u5206\u5e03\u952e\u6761\u4ef6\u66f4\u65b0</li> </ul> <pre><code>create table public.t1_update_pkey \n( \n    f1 int not null,\n    f2 varchar(20) not null default 'opentenbase',\n    f3 varchar(32), \n    primary key(f1) \n) distribute by shard(f1) to group default_group;   \n\npostgres=# explain UPDATE t1_update_pkey SET f2='opentenbase' where f1=1;                                                \n\n                                    QUERY PLAN\n----------------------------------------------------------------------------------  \nRemote Fast Query Execution  (cost=0.00..0.00 rows=0 width=0)    \n        Node/s: dn001    \n        -&gt;  Update on t1_update_pkey  (cost=0.15..4.17 rows=1 width=154)          \n        -&gt;  Index Scan using t1_update_pkey_pkey on t1_update_pkey  (cost=0.15..4.17 rows=1 width=154)                \n            Index Cond: (f1 = 1) \n\n</code></pre> <p>\u6027\u80fd\u6700\u4f18\uff0c\u6269\u5c55\u6027\u597d</p> <ul> <li>\u975e\u5206\u5e03\u952e\u66f4\u65b0</li> </ul> <pre><code>postgres=# explain UPDATE t1_update_pkey SET f2='opentenbase' where f3='pg';                                                                            QUERY PLAN \n----------------------------------------------------------------------------------    \nRemote Fast Query Execution  (cost=0.00..0.00 rows=0 width=0)    \n    Node/s: dn001, dn002    \n    -&gt;  Update on t1_update_pkey  (cost=0.00..15.12 rows=2 width=154)          \n        -&gt;  Seq Scan on t1_update_pkey  (cost=0.00..15.12 rows=2 width=154)\n            Filter: ((f3)::text = 'pg'::text) \n(5 rows) \n\n</code></pre> <p>\u66f4\u65b0\u8bed\u53e5\u53d1\u5f80\u6240\u6709\u8282\u70b9</p> <ul> <li>\u5206\u533a\u8868\u5e26\u5206\u533a\u6761\u4ef6\u66f4\u65b0</li> </ul> <pre><code>create table public.t1_pt_update \n(  f1 int not null,f2 timestamp not null,f3 varchar(20),primary key(f1)  )  \npartition by range (f2) begin (timestamp without time zone '2019-01-01 0:0:0') step (interval '1 month') partitions (2) distribute by shard(f1) to group default_group; \n\npostgres=# explain update t1_pt_update set f3='opentenbase' where f1=1 and f2&gt;'2019-01-01' and f2&lt;'2019-02-01';                                                                                                                     QUERY PLAN\n-----------------------------------------------------------------------------------\nRemote Fast Query Execution  (cost=0.00..0.00 rows=0 width=0)    \n        Node/s: dn001    \n    -&gt;  Update on t1_pt_update_part_0  (cost=0.15..4.17 rows=1 width=80)          \n        -&gt;  Index Scan using t1_pt_update_pkey_part_0 on t1_pt_update_part_0  (cost=0.15..4.17 rows=1 width=80)                \n            Index Cond: (f1 = 1)                \n            Filter: ((f2 &gt; '2019-01-01 00:00:00'::timestamp without time zone) AND (f2 &lt; '2019-02-01 00:00:00'::timestamp without time zone)) \n</code></pre> <p>\u5e26\u5206\u533a\u6761\u4ef6\u66f4\u65b0\uff0c\u6027\u80fd\u6700\u4f18\uff0c\u6269\u5c55\u6027\u597d</p> <ul> <li>\u5206\u533a\u8868\u4e0d\u5e26\u5206\u533a\u6761\u4ef6\u66f4\u65b0</li> </ul> <pre><code>postgres=# explain update t1_pt_update set f3='opentenbase' where f1=1;                                                                                                                 QUERY PLAN\n------------------------------------------------------------------------------------\nRemote Fast Query Execution  (cost=0.00..0.00 rows=0 width=0)    \n    Node/s: dn001    \n    -&gt;  Update on t1_pt_update  (cost=0.15..4.17 rows=1 width=80)          \n        -&gt;  Index Scan using t1_pt_update_pkey_part_0 on t1_pt_update (partition sequence: 0, name: t1_pt_update_part_0)  (cost=0.15..2.08 rows=0 width=80)                \n            Index Cond: (f1 = 1)          \n        -&gt;  Index Scan using t1_pt_update_pkey_part_1 on t1_pt_update (partition sequence: 1, name: t1_pt_update_part_1)  (cost=0.15..2.08 rows=0 width=80)               \n            Index Cond: (f1 = 1) \n(7 rows) \n\n</code></pre> <p>\u9700\u8981\u626b\u63cf\u6240\u6709\u5206\u533a\u5b50\u8868</p> <ul> <li>\u5173\u8054\u8868\u66f4\u65b0</li> </ul> <pre><code>create table public.t1_update_join1 \n(\n    f1 int not null,f2 varchar(20) not null default 'opentenbase',primary key(f1) \n)\ndistribute by shard(f1) to group default_group;\n\ncreate table public.t1_update_join2 \n( \n    f1 int not null,f2 varchar(20) not null default 'opentenbase',primary key(f1) \n) \ndistribute by shard(f1) to group default_group; \n\nupdate t1_update_join1 set f2='pg' from t1_update_join2 where t1_update_join1.f1=t1_update_join2.f1;  \n\n</code></pre> <p>\u8868\u5173\u8054\u66f4\u65b0\u53ea\u80fd\u662f\u57fa\u4e8e\u5206\u5e03\u952e\u5173\u8054</p> <ul> <li>\u5206\u5e03\u952e\uff0c\u5206\u533a\u952e\u4e0d\u80fd\u66f4\u65b0</li> </ul> <pre><code>create table public.t1_update_pkey \n( \n    f1 int not null,f2 varchar(20) not null default 'opentenbase', primary key(f1) \n) distribute by shard(f1) to group default_group;   \n\npostgres=# update t1_update_pkey set f1=2 where f1=1;  \nERROR:  Distributed column or partition column \"f1\" can't be updated in current version \nTime: 0.910 ms. \n\n</code></pre> <p>\u76ee\u524d\u7684\u89e3\u51b3\u529e\u6cd5\u201c\u5220\u9664\u65e7\u8bb0\u5f55\uff0c\u518d\u65b0\u589e\u8bb0\u5f55\u201d </p> <ul> <li>\u66f4\u591a\u7684UPDATE\u4f7f\u7528\u65b9\u6cd5\u8bf7\u53c2\u8003Postgresql\u7528\u6cd5 </li> </ul> <pre><code>http://www.postgres.cn/docs/10/sql-update.html\n</code></pre>"},{"location":"guide/03-basic-use/#23delete","title":"2.3\u3001DELETE","text":"<ul> <li>\u5220\u9664\u8fd4\u56de\u8bb0\u5f55</li> </ul> <pre><code>create table public.t1_delete_return \n( \n    f1 int not null,f2 varchar(20) not null default 'opentenbase',primary key(f1) \n) \ndistribute by shard(f1) to group default_group;    \n\npostgres=# insert into t1_delete_return values(1,'opentenbase');   \nINSERT 0 1 \n\npostgres=# delete from t1_delete_return where f1=1 returning *;     \n\n f1 |  f2    \n----+-------   \n  1 | opentenbase \n(1 row)\n\n</code></pre> <ul> <li> <p>UPDATE\u6700\u4f18\u4f7f\u7528\u65b9\u6cd5\u540c\u6837\u9002\u5408\u4e8eDELETE</p> </li> <li> <p>DELETE\u66f4\u591a\u7684\u4f7f\u7528\u65b9\u6cd5\u89c1</p> </li> </ul> <pre><code>http://www.postgres.cn/docs/10/sql-delete.html\n</code></pre>"},{"location":"guide/03-basic-use/#24select","title":"2.4\u3001SELECT","text":"<ul> <li>\u57fa\u4e8e\u5206\u5e03\u952e\u67e5\u8be2</li> </ul> <pre><code>create table public.t1_select \n( \n    f1 int not null,f2 varchar(20) not null default 'opentenbase',f3 varchar(32), primary key(f1) \n) \ndistribute by shard(f1) to group default_group;   \n\npostgres=# explain select * from t1_select where f1=1;                                                                          QUERY PLAN\n----------------------------------------------------------------------------------  \nRemote Fast Query Execution  (cost=0.00..0.00 rows=0 width=0)    \n    Node/s: dn001    \n    -&gt;  Index Scan using t1_select_pkey on t1_select  (cost=0.15..4.17 rows=1 width=144)          \n            Index Cond: (f1 = 1)\n\n</code></pre> <p>\u6027\u80fd\u6700\u4f18\uff0c\u6269\u5c55\u6027\u597d</p> <ul> <li>\u975e\u5206\u5e03\u952e\u67e5\u8be2</li> </ul> <pre><code>postgres=# explain select * from t1_select where f1&lt;3;\n                                    QUERY PLAN\n-------------------------------------------------------------------------------------  \nRemote Fast Query Execution  (cost=0.00..0.00 rows=0 width=0)   \n    Node/s: dn001, dn002   \n    -&gt;  Bitmap Heap Scan on t1_select  (cost=3.21..14.92 rows=137 width=144)          \n        Recheck Cond: (f1 &lt; 3)          \n        -&gt;  Bitmap Index Scan on t1_select_pkey  (cost=0.00..3.17 rows=137 width=0)\n            Index Cond: (f1 &lt; 3)\n\n</code></pre> <p>\u67e5\u8be2\u8bed\u53e5\u53d1\u5f80\u6240\u6709\u8282\u70b9\uff0c\u7136\u540e\u5728CN\u6c47\u603b</p> <ul> <li>\u5206\u5e03\u952eJOIN\u67e5\u8be2</li> </ul> <pre><code>create table public.t1_select_join1 \n(   f1 int not null,f2 int,primary key(f1)  ) \ndistribute by shard(f1) to group default_group;  \n\ncreate index t1_select_join1_f2_idx on t1_select_join1(f2); \n\ncreate table public.t1_select_join2 \n(  f1 int not null,f2 int,primary key(f1)  ) \ndistribute by shard(f1) to group default_group;  \n\ncreate index t1_select_join2_f2_idx on t1_select_join2(f2);   \n\npostgres=# explain select t1_select_join1.* from t1_select_join1,t1_select_join2 where t1_select_join1.f1=t1_select_join2.f1 and t1_select_join1.f1=1;   \n                                    QUERY PLAN                                                   --------------------------------------------------------------------------------------\nRemote Fast Query Execution  (cost=0.00..0.00 rows=0 width=0)   \n    Node/s: dn001    \n    -&gt;  Nested Loop  (cost=0.30..8.35 rows=1 width=8)          \n        -&gt;  Index Scan using t1_select_join1_pkey on t1_select_join1  (cost=0.15..4.17 rows=1 width=8)                \n            Index Cond: (f1 = 1)          \n        -&gt;  Index Only Scan using t1_select_join2_pkey on t1_select_join2  (cost=0.15..4.17 rows=1 width=4)                \n            Index Cond: (f1 = 1) \n\n</code></pre> <p>\u6027\u80fd\u6700\u4f18\uff0c\u6269\u5c55\u6027\u597d</p> <ul> <li>\u975e\u5206\u5e03\u952eJOIN\u67e5\u8be2</li> </ul> <pre><code>postgres=# explain select * from t1_select_join1,t1_select_join2 where t1_select_join1.f1=t1_select_join2.f2 and t1_select_join1.f2=1 ;                                                       \n                                    QUERY PLAN                                                       ------------------------------------------------------------------------------------------  \nRemote Subquery Scan on all (dn001,dn002)  (cost=2.26..33.48 rows=7 width=16)    \n    -&gt;  Nested Loop  (cost=2.26..33.48 rows=7 width=16)          \n        -&gt;  Bitmap Heap Scan on t1_select_join1  (cost=2.13..9.57 rows=7 width=8)                               Recheck Cond: (f2 = 1)                \n            -&gt;  Bitmap Index Scan on t1_select_join1_f2_idx  (cost=0.00..2.13 rows=7 width=0)                      \n                    Index Cond: (f2 = 1)          \n        -&gt;  Materialize  (cost=100.12..103.45 rows=7 width=8)                \n            -&gt;  Remote Subquery Scan on all (dn001,dn002)  (cost=100.12..103.44 rows=7 width=8)                      \n                    Distribute results by S: f2                      \n            -&gt;  Index Scan using t1_select_join2_f2_idx on t1_select_join2  (cost=0.12..3.35 rows=7 width=8)                            \n                Index Cond: (f2 = t1_select_join1.f1) \n\n</code></pre> <p>\u9700\u8981\u5728DN\u505a\u6570\u636e\u91cd\u5206\u5e03</p>"},{"location":"guide/03-basic-use/#25truncate","title":"2.5\u3001TRUNCATE","text":"<ul> <li>\u666e\u901a\u8868truncate</li> </ul> <pre><code>create table public.t1_delete_truncate \n( f1 int not null,f2 varchar(20) not null default 'opentenbase',primary key(f1) ) \ndistribute by shard(f1) to group default_group; \n\ninsert into t1_delete_truncate select t,t::text from generate_series(1,1000000) as t; \n\ntruncate table t1_delete_truncate;  \n</code></pre> <ul> <li>\u5206\u533a\u8868truncate</li> </ul> <pre><code>postgres=# create table public.t1_pt\n(\nf1 int not null,\nf2 timestamp not null,\nf3 varchar(20),\nprimary key(f1)\n) \npartition by range (f2) \nbegin (timestamp without time zone '2019-01-01 0:0:0') \nstep (interval '1 month') partitions (3) \ndistribute by shard(f1) \nto group default_group;\n\ntruncate public.t1_pt partition for  ('2019-01-01' ::timestamp without time zone); \n</code></pre>"},{"location":"guide/04-advanced-use/","title":"\u9ad8\u7ea7\u4f7f\u7528","text":"<p>\u5728\u5feb\u901f\u5165\u95e8\u6587\u7ae0\u4e2d\u6211\u4eec\u4ecb\u7ecd\u4e86 OpenTenBase \u7684\u67b6\u6784\u3001\u6e90\u7801\u7f16\u8bd1\u5b89\u88c5\u3001\u96c6\u7fa4\u8fd0\u884c\u72b6\u6001\u3001\u542f\u52a8\u505c\u6b62\u7b49\u5185\u5bb9\u3002</p> <p>\u5728\u5e94\u7528\u63a5\u5165\u4e2d\u6211\u4eec\u4ecb\u7ecd\u4e86\u5e94\u7528\u7a0b\u5e8f\u8fde\u63a5 OpenTenBase \u6570\u636e\u5e93\u8fdb\u884c\u5efa\u5e93\u3001\u5efa\u8868\u3001\u6570\u636e\u5bfc\u5165\u3001\u67e5\u8be2\u7b49\u64cd\u4f5c\u3002</p> <p>\u5728\u57fa\u672c\u4f7f\u7528\u4e2d\u6211\u4eec\u4ecb\u7ecd OpenTenBase \u4e2d\u7279\u6709\u7684shard\u8868\u3001\u590d\u5236\u8868\u7684\u521b\u5efa\uff0c\u548c\u57fa\u672c\u7684DML\u64cd\u4f5c\u3002</p> <p>\u672c\u7bc7\u5c06\u7ee7\u7eed\u4ecb\u7ecdOpenTenBase\u7684\u9ad8\u7ea7\u4f7f\u7528\u64cd\u4f5c\u5185\u5bb9\uff0c\u5176\u4e2d\u5305\u542b\u4e86\u5404\u79cd\u7a97\u53e3\u51fd\u6570\u3001Json/Jsonb\u3001\u6e38\u6807\u3001\u4e8b\u52a1\u3001\u9501\u7b49\u7684\u4f7f\u7528\u3002</p>"},{"location":"guide/04-advanced-use/#1","title":"1\u3001\u7a97\u53e3\u51fd\u6570","text":""},{"location":"guide/04-advanced-use/#11","title":"1.1\u3001\u73af\u5883\u51c6\u5907","text":"<pre><code>drop table if  exists bills ;\ncreate table bills \n(\n  id serial not null,\n  goodsdesc text not null,\n  beginunit text not null,\n  begincity text not null,\n  pubtime timestamp not null,\n  amount float8 not null default 0,\n  primary key (id)\n) distribute by shard(id) to group default_group;\n\nCOMMENT ON TABLE bills is '\u8fd0\u5355\u8bb0\u5f55';\nCOMMENT ON COLUMN bills.id IS 'id\u53f7';\nCOMMENT ON COLUMN bills.goodsdesc IS '\u8d27\u7269\u540d\u79f0';\nCOMMENT ON COLUMN bills.beginunit IS '\u542f\u8fd0\u7701\u4efd';\nCOMMENT ON COLUMN bills.begincity IS '\u542f\u8fd0\u57ce\u5e02';\nCOMMENT ON COLUMN bills.pubtime IS '\u53d1\u5e03\u65f6\u95f4';\nCOMMENT ON COLUMN bills.amount IS '\u8fd0\u8d39';\n\nINSERT INTO bills(id,goodsdesc,beginunit,begincity,pubtime,amount) \nVALUES(default,'\u8863\u670d','\u6d77\u5357\u7701','\u4e09\u4e9a\u5e02','2015-10-05 09:32:01',ROUND((random()*10000)::NUMERIC,2));\n\nINSERT INTO bills(id,goodsdesc,beginunit,begincity,pubtime,amount) \nVALUES(default,'\u5efa\u7b51\u8bbe\u5907','\u798f\u5efa\u7701','\u4e09\u660e\u5e02','2015-10-05 07:21:22',ROUND((random()*10000)::NUMERIC,2)); \n\nINSERT INTO bills(id,goodsdesc,beginunit,begincity,pubtime,amount) \nVALUES(default,'\u8bbe\u5907','\u798f\u5efa\u7701','\u4e09\u660e\u5e02','2015-10-05 11:21:54',ROUND((random()*10000)::NUMERIC,2));\n\nINSERT INTO bills(id,goodsdesc,beginunit,begincity,pubtime,amount) \nVALUES(default,'\u666e\u8d27','\u798f\u5efa\u7701','\u4e09\u660e\u5e02','2015-10-05 15:19:17',ROUND((random()*10000)::NUMERIC,2));\n\nINSERT INTO bills(id,goodsdesc,beginunit,begincity,pubtime,amount) \nVALUES(default,'5 0\u94f2\u8f66\uff0c\u540e\u516b\u8f6e\u7ffb\u6597\u8f66','\u6cb3\u5357\u7701','\u4e09\u95e8\u5ce1\u5e02','2015-10-05 07:53:13',ROUND((random()*10000)::NUMERIC,2));\n\nINSERT INTO bills(id,goodsdesc,beginunit,begincity,pubtime,amount) \nVALUES(default,'\u9c9c\u9999\u83c72000\u65a4','\u6cb3\u5357\u7701','\u4e09\u95e8\u5ce1\u5e02','2015-10-05 10:38:29',ROUND((random()*10000)::NUMERIC,2));\n\nINSERT INTO bills(id,goodsdesc,beginunit,begincity,pubtime,amount) \nVALUES(default,'\u65cb\u6316\u9644\u4ef638\u5428','\u6cb3\u5357\u7701','\u4e09\u95e8\u5ce1\u5e02','2015-10-05 10:48:38',ROUND((random()*10000)::NUMERIC,2));\n\nINSERT INTO bills(id,goodsdesc,beginunit,begincity,pubtime,amount) \nVALUES(default,'\u65cb\u6316\u9644\u4ef635\u5428','\u6cb3\u5357\u7701','\u4e09\u95e8\u5ce1\u5e02','2015-10-05 10:48:38',ROUND((random()*10000)::NUMERIC,2));\n\nINSERT INTO bills(id,goodsdesc,beginunit,begincity,pubtime,amount) \nVALUES(default,'\u65cb\u6316\u9644\u4ef639\u5428','\u6cb3\u5357\u7701','\u4e09\u95e8\u5ce1\u5e02','2015-10-05 11:38:38',ROUND((random()*10000)::NUMERIC,2));\n\nINSERT INTO bills(id,goodsdesc,beginunit,begincity,pubtime,amount) \nVALUES(default,'\u8bbe\u5907','\u4e0a\u6d77\u5e02','\u4e0a\u6d77\u5e02','2015-10-05 07:59:35',ROUND((random()*10000)::NUMERIC,2));\n\nINSERT INTO bills(id,goodsdesc,beginunit,begincity,pubtime,amount) \nVALUES(default,'\u666e\u8d2740\u5428\u970013\u7c73\u534a\u6302\u4e00\u8f86','\u4e0a\u6d77\u5e02','\u4e0a\u6d77\u5e02','2015-10-05 08:13:59',ROUND((random()*10000)::NUMERIC,2));\n</code></pre>"},{"location":"guide/04-advanced-use/#12row_number-","title":"1.2\u3001row_number() --\u8fd4\u56de\u884c\u53f7\uff0c\u4e0d\u5206\u7ec4","text":"<pre><code>postgres=# select row_number() over(),* from bills limit 2;  \n row_number | id | goodsdesc | beginunit | begincity |       pubtime       | amount  \n------------+----+-----------+-----------+-----------+---------------------+---------\n          1 |  1 | \u8863\u670d      | \u6d77\u5357\u7701    | \u4e09\u4e9a\u5e02    | 2015-10-05 09:32:01 | 1915.86\n          2 |  2 | \u5efa\u7b51\u8bbe\u5907  | \u798f\u5efa\u7701    | \u4e09\u660e\u5e02    | 2015-10-05 07:21:22 | 2022.31\n(2 rows)\n\npostgres=# select row_number() over(),* from bills limit 2 offset 2; \n row_number | id |       goodsdesc       | beginunit | begincity |       pubtime       | amount  \n------------+----+-----------------------+-----------+-----------+---------------------+---------\n          3 |  6 | 5 0\u94f2\u8f66\uff0c\u540e\u516b\u8f6e\u7ffb\u6597\u8f66 | \u6cb3\u5357\u7701    | \u4e09\u95e8\u5ce1\u5e02  | 2015-10-05 07:53:13 |  1030.9\n          4 |  8 | \u65cb\u6316\u9644\u4ef638\u5428          | \u6cb3\u5357\u7701    | \u4e09\u95e8\u5ce1\u5e02  | 2015-10-05 10:48:38 | 5365.04\n(2 rows)\n</code></pre>"},{"location":"guide/04-advanced-use/#13row_number-amount","title":"1.3\u3001row_number() --\u8fd4\u56de\u884c\u53f7\uff0c\u6309amount\u6392\u5e8f","text":"<pre><code>postgres=# select row_number() over(order by amount),* from bills;\n row_number | id |       goodsdesc        | beginunit | begincity |       pubtime       | amount  \n------------+----+------------------------+-----------+-----------+---------------------+---------\n          1 | 11 | \u8bbe\u5907                   | \u4e0a\u6d77\u5e02    | \u4e0a\u6d77\u5e02    | 2015-10-05 07:59:35 |  971.54\n          2 |  6 | 5 0\u94f2\u8f66\uff0c\u540e\u516b\u8f6e\u7ffb\u6597\u8f66  | \u6cb3\u5357\u7701    | \u4e09\u95e8\u5ce1\u5e02  | 2015-10-05 07:53:13 |  1030.9\n          3 |  4 | \u666e\u8d27                   | \u798f\u5efa\u7701    | \u4e09\u660e\u5e02    | 2015-10-05 15:19:17 | 1316.27\n          4 |  1 | \u8863\u670d                   | \u6d77\u5357\u7701    | \u4e09\u4e9a\u5e02    | 2015-10-05 09:32:01 | 1915.86\n          5 |  2 | \u5efa\u7b51\u8bbe\u5907               | \u798f\u5efa\u7701    | \u4e09\u660e\u5e02    | 2015-10-05 07:21:22 | 2022.31\n          6 |  7 | \u9c9c\u9999\u83c72000\u65a4           | \u6cb3\u5357\u7701    | \u4e09\u95e8\u5ce1\u5e02  | 2015-10-05 10:38:29 | 4182.68\n          7 |  8 | \u65cb\u6316\u9644\u4ef638\u5428           | \u6cb3\u5357\u7701    | \u4e09\u95e8\u5ce1\u5e02  | 2015-10-05 10:48:38 | 5365.04\n          8 | 10 | \u65cb\u6316\u9644\u4ef639\u5428           | \u6cb3\u5357\u7701    | \u4e09\u95e8\u5ce1\u5e02  | 2015-10-05 11:38:38 |  8290.5\n          9 |  3 | \u8bbe\u5907                   | \u798f\u5efa\u7701    | \u4e09\u660e\u5e02    | 2015-10-05 11:21:54 | 8771.11\n         10 |  9 | \u65cb\u6316\u9644\u4ef635\u5428           | \u6cb3\u5357\u7701    | \u4e09\u95e8\u5ce1\u5e02  | 2015-10-05 10:48:38 | 9621.37\n         11 |  5 | \u666e\u8d2740\u5428\u970013\u7c73\u534a\u6302\u4e00\u8f86 | \u4e0a\u6d77\u5e02    | \u4e0a\u6d77\u5e02    | 2015-10-05 08:13:59 | 9886.15\n(11 rows)\n</code></pre>"},{"location":"guide/04-advanced-use/#14row_number-begincitypubtime","title":"1.4\u3001row_number() --\u8fd4\u56de\u884c\u53f7\uff0c\u6309begincity\u5206\u7ec4\uff0cpubtime\u6392\u5e8f\uff0c\u6ce8\u610f\u7eff\u8272\u8bb0\u5f55\u884c\u53f7\u4e0d\u95f4\u65ad","text":""},{"location":"guide/04-advanced-use/#15rank-12335","title":"1.5\u3001rank()--\u8fd4\u56de\u884c\u53f7,\u5bf9\u6bd4\u503c\u91cd\u590d\u65f6\u884c\u53f7\u91cd\u590d\u5e76\u95f4\u65ad\uff0c\u5373\u8fd4\u56de1,2,3,3,5...","text":""},{"location":"guide/04-advanced-use/#16dance_rank-12334","title":"1.6\u3001dance_rank()--\u8fd4\u56de\u884c\u53f7,\u5bf9\u6bd4\u503c\u91cd\u590d\u65f6\u884c\u53f7\u91cd\u590d\u4f46\u4e0d\u95f4\u65ad\uff0c\u5373\u8fd4\u56de1,2,3,3,4...","text":""},{"location":"guide/04-advanced-use/#17percent_rank-11-1","title":"1.7\u3001percent_rank()\u4ece\u5f53\u524d\u5f00\u59cb\uff0c\u8ba1\u7b97\u5728\u5206\u7ec4\u4e2d\u7684\u6bd4\u4f8b (\u884c\u53f7-1)*(1/(\u603b\u8bb0\u5f55\u6570-1))","text":"<pre><code>postgres=# select percent_rank() over(partition by begincity order by id),* from bills;  \n percent_rank | id |       goodsdesc        | beginunit | begincity |       pubtime       | amount  \n--------------+----+------------------------+-----------+-----------+---------------------+---------\n            0 |  1 | \u8863\u670d                   | \u6d77\u5357\u7701    | \u4e09\u4e9a\u5e02    | 2015-10-05 09:32:01 | 1915.86\n            0 |  2 | \u5efa\u7b51\u8bbe\u5907               | \u798f\u5efa\u7701    | \u4e09\u660e\u5e02    | 2015-10-05 07:21:22 | 2022.31\n          0.5 |  3 | \u8bbe\u5907                   | \u798f\u5efa\u7701    | \u4e09\u660e\u5e02    | 2015-10-05 11:21:54 | 8771.11\n            1 |  4 | \u666e\u8d27                   | \u798f\u5efa\u7701    | \u4e09\u660e\u5e02    | 2015-10-05 15:19:17 | 1316.27\n            0 |  6 | 5 0\u94f2\u8f66\uff0c\u540e\u516b\u8f6e\u7ffb\u6597\u8f66  | \u6cb3\u5357\u7701    | \u4e09\u95e8\u5ce1\u5e02  | 2015-10-05 07:53:13 |  1030.9\n         0.25 |  7 | \u9c9c\u9999\u83c72000\u65a4           | \u6cb3\u5357\u7701    | \u4e09\u95e8\u5ce1\u5e02  | 2015-10-05 10:38:29 | 4182.68\n          0.5 |  8 | \u65cb\u6316\u9644\u4ef638\u5428           | \u6cb3\u5357\u7701    | \u4e09\u95e8\u5ce1\u5e02  | 2015-10-05 10:48:38 | 5365.04\n         0.75 |  9 | \u65cb\u6316\u9644\u4ef635\u5428           | \u6cb3\u5357\u7701    | \u4e09\u95e8\u5ce1\u5e02  | 2015-10-05 10:48:38 | 9621.37\n            1 | 10 | \u65cb\u6316\u9644\u4ef639\u5428           | \u6cb3\u5357\u7701    | \u4e09\u95e8\u5ce1\u5e02  | 2015-10-05 11:38:38 |  8290.5\n            0 |  5 | \u666e\u8d2740\u5428\u970013\u7c73\u534a\u6302\u4e00\u8f86 | \u4e0a\u6d77\u5e02    | \u4e0a\u6d77\u5e02    | 2015-10-05 08:13:59 | 9886.15\n            1 | 11 | \u8bbe\u5907                   | \u4e0a\u6d77\u5e02    | \u4e0a\u6d77\u5e02    | 2015-10-05 07:59:35 |  971.54\n(11 rows)\n</code></pre>"},{"location":"guide/04-advanced-use/#18cume_dist-","title":"1.8\u3001cume_dist() --\u8fd4\u56de\u884c\u6570\u9664\u4ee5\u8bb0\u5f55\u6570\u503c","text":"<pre><code>postgres=# select ROUND((cume_dist() over(partition by begincity order by id))::NUMERIC,2) AS cume_dist,* from bills;   \n cume_dist | id |       goodsdesc        | beginunit | begincity |       pubtime       | amount  \n-----------+----+------------------------+-----------+-----------+---------------------+---------\n      1.00 |  1 | \u8863\u670d                   | \u6d77\u5357\u7701    | \u4e09\u4e9a\u5e02    | 2015-10-05 09:32:01 | 1915.86\n      0.33 |  2 | \u5efa\u7b51\u8bbe\u5907               | \u798f\u5efa\u7701    | \u4e09\u660e\u5e02    | 2015-10-05 07:21:22 | 2022.31\n      0.67 |  3 | \u8bbe\u5907                   | \u798f\u5efa\u7701    | \u4e09\u660e\u5e02    | 2015-10-05 11:21:54 | 8771.11\n      1.00 |  4 | \u666e\u8d27                   | \u798f\u5efa\u7701    | \u4e09\u660e\u5e02    | 2015-10-05 15:19:17 | 1316.27\n      0.20 |  6 | 5 0\u94f2\u8f66\uff0c\u540e\u516b\u8f6e\u7ffb\u6597\u8f66  | \u6cb3\u5357\u7701    | \u4e09\u95e8\u5ce1\u5e02  | 2015-10-05 07:53:13 |  1030.9\n      0.40 |  7 | \u9c9c\u9999\u83c72000\u65a4           | \u6cb3\u5357\u7701    | \u4e09\u95e8\u5ce1\u5e02  | 2015-10-05 10:38:29 | 4182.68\n      0.60 |  8 | \u65cb\u6316\u9644\u4ef638\u5428           | \u6cb3\u5357\u7701    | \u4e09\u95e8\u5ce1\u5e02  | 2015-10-05 10:48:38 | 5365.04\n      0.80 |  9 | \u65cb\u6316\u9644\u4ef635\u5428           | \u6cb3\u5357\u7701    | \u4e09\u95e8\u5ce1\u5e02  | 2015-10-05 10:48:38 | 9621.37\n      1.00 | 10 | \u65cb\u6316\u9644\u4ef639\u5428           | \u6cb3\u5357\u7701    | \u4e09\u95e8\u5ce1\u5e02  | 2015-10-05 11:38:38 |  8290.5\n      0.50 |  5 | \u666e\u8d2740\u5428\u970013\u7c73\u534a\u6302\u4e00\u8f86 | \u4e0a\u6d77\u5e02    | \u4e0a\u6d77\u5e02    | 2015-10-05 08:13:59 | 9886.15\n      1.00 | 11 | \u8bbe\u5907                   | \u4e0a\u6d77\u5e02    | \u4e0a\u6d77\u5e02    | 2015-10-05 07:59:35 |  971.54\n(11 rows)\n</code></pre>"},{"location":"guide/04-advanced-use/#19ntile-","title":"1.9\u3001ntile(\u5206\u7ec4\u6570\u91cf)--\u8ba9\u6240\u6709\u8bb0\u5f55\u5c3d\u53ef\u4ee5\u7684\u5747\u5300\u5206\u5e03","text":"<pre><code>postgres=# select ntile(2) over(partition by begincity order by id),* from bills;  \n ntile | id |       goodsdesc        | beginunit | begincity |       pubtime       | amount  \n-------+----+------------------------+-----------+-----------+---------------------+---------\n     1 |  1 | \u8863\u670d                   | \u6d77\u5357\u7701    | \u4e09\u4e9a\u5e02    | 2015-10-05 09:32:01 | 1915.86\n     1 |  2 | \u5efa\u7b51\u8bbe\u5907               | \u798f\u5efa\u7701    | \u4e09\u660e\u5e02    | 2015-10-05 07:21:22 | 2022.31\n     1 |  3 | \u8bbe\u5907                   | \u798f\u5efa\u7701    | \u4e09\u660e\u5e02    | 2015-10-05 11:21:54 | 8771.11\n     2 |  4 | \u666e\u8d27                   | \u798f\u5efa\u7701    | \u4e09\u660e\u5e02    | 2015-10-05 15:19:17 | 1316.27\n     1 |  6 | 5 0\u94f2\u8f66\uff0c\u540e\u516b\u8f6e\u7ffb\u6597\u8f66  | \u6cb3\u5357\u7701    | \u4e09\u95e8\u5ce1\u5e02  | 2015-10-05 07:53:13 |  1030.9\n     1 |  7 | \u9c9c\u9999\u83c72000\u65a4           | \u6cb3\u5357\u7701    | \u4e09\u95e8\u5ce1\u5e02  | 2015-10-05 10:38:29 | 4182.68\n     1 |  8 | \u65cb\u6316\u9644\u4ef638\u5428           | \u6cb3\u5357\u7701    | \u4e09\u95e8\u5ce1\u5e02  | 2015-10-05 10:48:38 | 5365.04\n     2 |  9 | \u65cb\u6316\u9644\u4ef635\u5428           | \u6cb3\u5357\u7701    | \u4e09\u95e8\u5ce1\u5e02  | 2015-10-05 10:48:38 | 9621.37\n     2 | 10 | \u65cb\u6316\u9644\u4ef639\u5428           | \u6cb3\u5357\u7701    | \u4e09\u95e8\u5ce1\u5e02  | 2015-10-05 11:38:38 |  8290.5\n     1 |  5 | \u666e\u8d2740\u5428\u970013\u7c73\u534a\u6302\u4e00\u8f86 | \u4e0a\u6d77\u5e02    | \u4e0a\u6d77\u5e02    | 2015-10-05 08:13:59 | 9886.15\n     2 | 11 | \u8bbe\u5907                   | \u4e0a\u6d77\u5e02    | \u4e0a\u6d77\u5e02    | 2015-10-05 07:59:35 |  971.54\n(11 rows)\n\npostgres=# select ntile(3) over(partition by begincity order by id),* from bills;  \n ntile | id |       goodsdesc        | beginunit | begincity |       pubtime       | amount  \n-------+----+------------------------+-----------+-----------+---------------------+---------\n     1 |  1 | \u8863\u670d                   | \u6d77\u5357\u7701    | \u4e09\u4e9a\u5e02    | 2015-10-05 09:32:01 | 1915.86\n     1 |  2 | \u5efa\u7b51\u8bbe\u5907               | \u798f\u5efa\u7701    | \u4e09\u660e\u5e02    | 2015-10-05 07:21:22 | 2022.31\n     2 |  3 | \u8bbe\u5907                   | \u798f\u5efa\u7701    | \u4e09\u660e\u5e02    | 2015-10-05 11:21:54 | 8771.11\n     3 |  4 | \u666e\u8d27                   | \u798f\u5efa\u7701    | \u4e09\u660e\u5e02    | 2015-10-05 15:19:17 | 1316.27\n     1 |  6 | 5 0\u94f2\u8f66\uff0c\u540e\u516b\u8f6e\u7ffb\u6597\u8f66  | \u6cb3\u5357\u7701    | \u4e09\u95e8\u5ce1\u5e02  | 2015-10-05 07:53:13 |  1030.9\n     1 |  7 | \u9c9c\u9999\u83c72000\u65a4           | \u6cb3\u5357\u7701    | \u4e09\u95e8\u5ce1\u5e02  | 2015-10-05 10:38:29 | 4182.68\n     2 |  8 | \u65cb\u6316\u9644\u4ef638\u5428           | \u6cb3\u5357\u7701    | \u4e09\u95e8\u5ce1\u5e02  | 2015-10-05 10:48:38 | 5365.04\n     2 |  9 | \u65cb\u6316\u9644\u4ef635\u5428           | \u6cb3\u5357\u7701    | \u4e09\u95e8\u5ce1\u5e02  | 2015-10-05 10:48:38 | 9621.37\n     3 | 10 | \u65cb\u6316\u9644\u4ef639\u5428           | \u6cb3\u5357\u7701    | \u4e09\u95e8\u5ce1\u5e02  | 2015-10-05 11:38:38 |  8290.5\n     1 |  5 | \u666e\u8d2740\u5428\u970013\u7c73\u534a\u6302\u4e00\u8f86 | \u4e0a\u6d77\u5e02    | \u4e0a\u6d77\u5e02    | 2015-10-05 08:13:59 | 9886.15\n     2 | 11 | \u8bbe\u5907                   | \u4e0a\u6d77\u5e02    | \u4e0a\u6d77\u5e02    | 2015-10-05 07:59:35 |  971.54\n(11 rows)\n</code></pre>"},{"location":"guide/04-advanced-use/#110lagvalue-any-offset-integer-default-any-","title":"1.10\u3001lag(value any [, offset integer [, default any]] )--\u8fd4\u56de\u504f\u79fb\u91cf\u503c","text":"<p>offset integer\u662f\u504f\u79fb\u503c\uff0c\u6b63\u6570\u65f6\u53d6\u524d\u503c\uff0c\u8d1f\u6570\u65f6\u53d6\u540e\u503c\uff0c\u6ca1\u6709\u53d6\u5230\u503c\u65f6\u7528default\u4ee3\u66ff</p> <pre><code>postgres=# select lag(amount,1,null) over(partition by begincity order by id),* from bills;   \n   lag   | id |       goodsdesc        | beginunit | begincity |       pubtime       | amount  \n---------+----+------------------------+-----------+-----------+---------------------+---------\n         |  1 | \u8863\u670d                   | \u6d77\u5357\u7701    | \u4e09\u4e9a\u5e02    | 2015-10-05 09:32:01 | 1915.86\n         |  2 | \u5efa\u7b51\u8bbe\u5907               | \u798f\u5efa\u7701    | \u4e09\u660e\u5e02    | 2015-10-05 07:21:22 | 2022.31\n 2022.31 |  3 | \u8bbe\u5907                   | \u798f\u5efa\u7701    | \u4e09\u660e\u5e02    | 2015-10-05 11:21:54 | 8771.11\n 8771.11 |  4 | \u666e\u8d27                   | \u798f\u5efa\u7701    | \u4e09\u660e\u5e02    | 2015-10-05 15:19:17 | 1316.27\n         |  6 | 5 0\u94f2\u8f66\uff0c\u540e\u516b\u8f6e\u7ffb\u6597\u8f66  | \u6cb3\u5357\u7701    | \u4e09\u95e8\u5ce1\u5e02  | 2015-10-05 07:53:13 |  1030.9\n  1030.9 |  7 | \u9c9c\u9999\u83c72000\u65a4           | \u6cb3\u5357\u7701    | \u4e09\u95e8\u5ce1\u5e02  | 2015-10-05 10:38:29 | 4182.68\n 4182.68 |  8 | \u65cb\u6316\u9644\u4ef638\u5428           | \u6cb3\u5357\u7701    | \u4e09\u95e8\u5ce1\u5e02  | 2015-10-05 10:48:38 | 5365.04\n 5365.04 |  9 | \u65cb\u6316\u9644\u4ef635\u5428           | \u6cb3\u5357\u7701    | \u4e09\u95e8\u5ce1\u5e02  | 2015-10-05 10:48:38 | 9621.37\n 9621.37 | 10 | \u65cb\u6316\u9644\u4ef639\u5428           | \u6cb3\u5357\u7701    | \u4e09\u95e8\u5ce1\u5e02  | 2015-10-05 11:38:38 |  8290.5\n         |  5 | \u666e\u8d2740\u5428\u970013\u7c73\u534a\u6302\u4e00\u8f86 | \u4e0a\u6d77\u5e02    | \u4e0a\u6d77\u5e02    | 2015-10-05 08:13:59 | 9886.15\n 9886.15 | 11 | \u8bbe\u5907                   | \u4e0a\u6d77\u5e02    | \u4e0a\u6d77\u5e02    | 2015-10-05 07:59:35 |  971.54\n(11 rows)\n\npostgres=# select lag(amount,2,0::float8) over(partition by begincity order by id),* from bills;  \n   lag   | id |       goodsdesc        | beginunit | begincity |       pubtime       | amount  \n---------+----+------------------------+-----------+-----------+---------------------+---------\n       0 |  1 | \u8863\u670d                   | \u6d77\u5357\u7701    | \u4e09\u4e9a\u5e02    | 2015-10-05 09:32:01 | 1915.86\n       0 |  2 | \u5efa\u7b51\u8bbe\u5907               | \u798f\u5efa\u7701    | \u4e09\u660e\u5e02    | 2015-10-05 07:21:22 | 2022.31\n       0 |  3 | \u8bbe\u5907                   | \u798f\u5efa\u7701    | \u4e09\u660e\u5e02    | 2015-10-05 11:21:54 | 8771.11\n 2022.31 |  4 | \u666e\u8d27                   | \u798f\u5efa\u7701    | \u4e09\u660e\u5e02    | 2015-10-05 15:19:17 | 1316.27\n       0 |  6 | 5 0\u94f2\u8f66\uff0c\u540e\u516b\u8f6e\u7ffb\u6597\u8f66  | \u6cb3\u5357\u7701    | \u4e09\u95e8\u5ce1\u5e02  | 2015-10-05 07:53:13 |  1030.9\n       0 |  7 | \u9c9c\u9999\u83c72000\u65a4           | \u6cb3\u5357\u7701    | \u4e09\u95e8\u5ce1\u5e02  | 2015-10-05 10:38:29 | 4182.68\n  1030.9 |  8 | \u65cb\u6316\u9644\u4ef638\u5428           | \u6cb3\u5357\u7701    | \u4e09\u95e8\u5ce1\u5e02  | 2015-10-05 10:48:38 | 5365.04\n 4182.68 |  9 | \u65cb\u6316\u9644\u4ef635\u5428           | \u6cb3\u5357\u7701    | \u4e09\u95e8\u5ce1\u5e02  | 2015-10-05 10:48:38 | 9621.37\n 5365.04 | 10 | \u65cb\u6316\u9644\u4ef639\u5428           | \u6cb3\u5357\u7701    | \u4e09\u95e8\u5ce1\u5e02  | 2015-10-05 11:38:38 |  8290.5\n       0 |  5 | \u666e\u8d2740\u5428\u970013\u7c73\u534a\u6302\u4e00\u8f86 | \u4e0a\u6d77\u5e02    | \u4e0a\u6d77\u5e02    | 2015-10-05 08:13:59 | 9886.15\n       0 | 11 | \u8bbe\u5907                   | \u4e0a\u6d77\u5e02    | \u4e0a\u6d77\u5e02    | 2015-10-05 07:59:35 |  971.54\n(11 rows)\n\npostgres=# select lag(amount,-2,0::float8) over(partition by begincity order by id),* from bills;\n   lag   | id |       goodsdesc        | beginunit | begincity |       pubtime       | amount  \n---------+----+------------------------+-----------+-----------+---------------------+---------\n       0 |  1 | \u8863\u670d                   | \u6d77\u5357\u7701    | \u4e09\u4e9a\u5e02    | 2015-10-05 09:32:01 | 1915.86\n 1316.27 |  2 | \u5efa\u7b51\u8bbe\u5907               | \u798f\u5efa\u7701    | \u4e09\u660e\u5e02    | 2015-10-05 07:21:22 | 2022.31\n       0 |  3 | \u8bbe\u5907                   | \u798f\u5efa\u7701    | \u4e09\u660e\u5e02    | 2015-10-05 11:21:54 | 8771.11\n       0 |  4 | \u666e\u8d27                   | \u798f\u5efa\u7701    | \u4e09\u660e\u5e02    | 2015-10-05 15:19:17 | 1316.27\n 5365.04 |  6 | 5 0\u94f2\u8f66\uff0c\u540e\u516b\u8f6e\u7ffb\u6597\u8f66  | \u6cb3\u5357\u7701    | \u4e09\u95e8\u5ce1\u5e02  | 2015-10-05 07:53:13 |  1030.9\n 9621.37 |  7 | \u9c9c\u9999\u83c72000\u65a4           | \u6cb3\u5357\u7701    | \u4e09\u95e8\u5ce1\u5e02  | 2015-10-05 10:38:29 | 4182.68\n  8290.5 |  8 | \u65cb\u6316\u9644\u4ef638\u5428           | \u6cb3\u5357\u7701    | \u4e09\u95e8\u5ce1\u5e02  | 2015-10-05 10:48:38 | 5365.04\n       0 |  9 | \u65cb\u6316\u9644\u4ef635\u5428           | \u6cb3\u5357\u7701    | \u4e09\u95e8\u5ce1\u5e02  | 2015-10-05 10:48:38 | 9621.37\n       0 | 10 | \u65cb\u6316\u9644\u4ef639\u5428           | \u6cb3\u5357\u7701    | \u4e09\u95e8\u5ce1\u5e02  | 2015-10-05 11:38:38 |  8290.5\n       0 |  5 | \u666e\u8d2740\u5428\u970013\u7c73\u534a\u6302\u4e00\u8f86 | \u4e0a\u6d77\u5e02    | \u4e0a\u6d77\u5e02    | 2015-10-05 08:13:59 | 9886.15\n       0 | 11 | \u8bbe\u5907                   | \u4e0a\u6d77\u5e02    | \u4e0a\u6d77\u5e02    | 2015-10-05 07:59:35 |  971.54\n(11 rows)\n</code></pre>"},{"location":"guide/04-advanced-use/#111leadvalue-any-offset-integer-default-any-","title":"1.11\u3001lead(value any [,offset integer [, default any]] )--\u8fd4\u56de\u504f\u79fb\u91cf\u503c","text":"<p>offset integer\u662f\u504f\u79fb\u503c\uff0c\u6b63\u6570\u65f6\u53d6\u540e\u503c\uff0c\u8d1f\u6570\u65f6\u53d6\u524d\u503c\uff0c\u6ca1\u6709\u53d6\u5230\u503c\u65f6\u7528default\u4ee3\u66ff  </p> <pre><code>postgres=# select lead(amount,2,null) over(partition by begincity order by id),* from bills;\n  lead   | id |       goodsdesc        | beginunit | begincity |       pubtime       | amount  \n---------+----+------------------------+-----------+-----------+---------------------+---------\n         |  1 | \u8863\u670d                   | \u6d77\u5357\u7701    | \u4e09\u4e9a\u5e02    | 2015-10-05 09:32:01 | 1915.86\n 1316.27 |  2 | \u5efa\u7b51\u8bbe\u5907               | \u798f\u5efa\u7701    | \u4e09\u660e\u5e02    | 2015-10-05 07:21:22 | 2022.31\n         |  3 | \u8bbe\u5907                   | \u798f\u5efa\u7701    | \u4e09\u660e\u5e02    | 2015-10-05 11:21:54 | 8771.11\n         |  4 | \u666e\u8d27                   | \u798f\u5efa\u7701    | \u4e09\u660e\u5e02    | 2015-10-05 15:19:17 | 1316.27\n 5365.04 |  6 | 5 0\u94f2\u8f66\uff0c\u540e\u516b\u8f6e\u7ffb\u6597\u8f66  | \u6cb3\u5357\u7701    | \u4e09\u95e8\u5ce1\u5e02  | 2015-10-05 07:53:13 |  1030.9\n 9621.37 |  7 | \u9c9c\u9999\u83c72000\u65a4           | \u6cb3\u5357\u7701    | \u4e09\u95e8\u5ce1\u5e02  | 2015-10-05 10:38:29 | 4182.68\n  8290.5 |  8 | \u65cb\u6316\u9644\u4ef638\u5428           | \u6cb3\u5357\u7701    | \u4e09\u95e8\u5ce1\u5e02  | 2015-10-05 10:48:38 | 5365.04\n         |  9 | \u65cb\u6316\u9644\u4ef635\u5428           | \u6cb3\u5357\u7701    | \u4e09\u95e8\u5ce1\u5e02  | 2015-10-05 10:48:38 | 9621.37\n         | 10 | \u65cb\u6316\u9644\u4ef639\u5428           | \u6cb3\u5357\u7701    | \u4e09\u95e8\u5ce1\u5e02  | 2015-10-05 11:38:38 |  8290.5\n         |  5 | \u666e\u8d2740\u5428\u970013\u7c73\u534a\u6302\u4e00\u8f86 | \u4e0a\u6d77\u5e02    | \u4e0a\u6d77\u5e02    | 2015-10-05 08:13:59 | 9886.15\n         | 11 | \u8bbe\u5907                   | \u4e0a\u6d77\u5e02    | \u4e0a\u6d77\u5e02    | 2015-10-05 07:59:35 |  971.54\n(11 rows)\n\npostgres=# select lead(amount,-2,null) over(partition by begincity order by id),* from bills;\n  lead   | id |       goodsdesc        | beginunit | begincity |       pubtime       | amount  \n---------+----+------------------------+-----------+-----------+---------------------+---------\n         |  1 | \u8863\u670d                   | \u6d77\u5357\u7701    | \u4e09\u4e9a\u5e02    | 2015-10-05 09:32:01 | 1915.86\n         |  2 | \u5efa\u7b51\u8bbe\u5907               | \u798f\u5efa\u7701    | \u4e09\u660e\u5e02    | 2015-10-05 07:21:22 | 2022.31\n         |  3 | \u8bbe\u5907                   | \u798f\u5efa\u7701    | \u4e09\u660e\u5e02    | 2015-10-05 11:21:54 | 8771.11\n 2022.31 |  4 | \u666e\u8d27                   | \u798f\u5efa\u7701    | \u4e09\u660e\u5e02    | 2015-10-05 15:19:17 | 1316.27\n         |  6 | 5 0\u94f2\u8f66\uff0c\u540e\u516b\u8f6e\u7ffb\u6597\u8f66  | \u6cb3\u5357\u7701    | \u4e09\u95e8\u5ce1\u5e02  | 2015-10-05 07:53:13 |  1030.9\n         |  7 | \u9c9c\u9999\u83c72000\u65a4           | \u6cb3\u5357\u7701    | \u4e09\u95e8\u5ce1\u5e02  | 2015-10-05 10:38:29 | 4182.68\n  1030.9 |  8 | \u65cb\u6316\u9644\u4ef638\u5428           | \u6cb3\u5357\u7701    | \u4e09\u95e8\u5ce1\u5e02  | 2015-10-05 10:48:38 | 5365.04\n 4182.68 |  9 | \u65cb\u6316\u9644\u4ef635\u5428           | \u6cb3\u5357\u7701    | \u4e09\u95e8\u5ce1\u5e02  | 2015-10-05 10:48:38 | 9621.37\n 5365.04 | 10 | \u65cb\u6316\u9644\u4ef639\u5428           | \u6cb3\u5357\u7701    | \u4e09\u95e8\u5ce1\u5e02  | 2015-10-05 11:38:38 |  8290.5\n         |  5 | \u666e\u8d2740\u5428\u970013\u7c73\u534a\u6302\u4e00\u8f86 | \u4e0a\u6d77\u5e02    | \u4e0a\u6d77\u5e02    | 2015-10-05 08:13:59 | 9886.15\n         | 11 | \u8bbe\u5907                   | \u4e0a\u6d77\u5e02    | \u4e0a\u6d77\u5e02    | 2015-10-05 07:59:35 |  971.54\n(11 rows)\n</code></pre>"},{"location":"guide/04-advanced-use/#112first_valuevalue-any","title":"1.12\u3001first_value(value any)\u8fd4\u56de\u7b2c\u4e00\u503c","text":"<pre><code>postgres=# select first_value(amount) over(partition by begincity order by  id),* from bills;\n first_value | id |       goodsdesc        | beginunit | begincity |       pubtime       | amount  \n-------------+----+------------------------+-----------+-----------+---------------------+---------\n     1915.86 |  1 | \u8863\u670d                   | \u6d77\u5357\u7701    | \u4e09\u4e9a\u5e02    | 2015-10-05 09:32:01 | 1915.86\n     2022.31 |  2 | \u5efa\u7b51\u8bbe\u5907               | \u798f\u5efa\u7701    | \u4e09\u660e\u5e02    | 2015-10-05 07:21:22 | 2022.31\n     2022.31 |  3 | \u8bbe\u5907                   | \u798f\u5efa\u7701    | \u4e09\u660e\u5e02    | 2015-10-05 11:21:54 | 8771.11\n     2022.31 |  4 | \u666e\u8d27                   | \u798f\u5efa\u7701    | \u4e09\u660e\u5e02    | 2015-10-05 15:19:17 | 1316.27\n      1030.9 |  6 | 5 0\u94f2\u8f66\uff0c\u540e\u516b\u8f6e\u7ffb\u6597\u8f66  | \u6cb3\u5357\u7701    | \u4e09\u95e8\u5ce1\u5e02  | 2015-10-05 07:53:13 |  1030.9\n      1030.9 |  7 | \u9c9c\u9999\u83c72000\u65a4           | \u6cb3\u5357\u7701    | \u4e09\u95e8\u5ce1\u5e02  | 2015-10-05 10:38:29 | 4182.68\n      1030.9 |  8 | \u65cb\u6316\u9644\u4ef638\u5428           | \u6cb3\u5357\u7701    | \u4e09\u95e8\u5ce1\u5e02  | 2015-10-05 10:48:38 | 5365.04\n      1030.9 |  9 | \u65cb\u6316\u9644\u4ef635\u5428           | \u6cb3\u5357\u7701    | \u4e09\u95e8\u5ce1\u5e02  | 2015-10-05 10:48:38 | 9621.37\n      1030.9 | 10 | \u65cb\u6316\u9644\u4ef639\u5428           | \u6cb3\u5357\u7701    | \u4e09\u95e8\u5ce1\u5e02  | 2015-10-05 11:38:38 |  8290.5\n     9886.15 |  5 | \u666e\u8d2740\u5428\u970013\u7c73\u534a\u6302\u4e00\u8f86 | \u4e0a\u6d77\u5e02    | \u4e0a\u6d77\u5e02    | 2015-10-05 08:13:59 | 9886.15\n     9886.15 | 11 | \u8bbe\u5907                   | \u4e0a\u6d77\u5e02    | \u4e0a\u6d77\u5e02    | 2015-10-05 07:59:35 |  971.54\n(11 rows)\n</code></pre>"},{"location":"guide/04-advanced-use/#113last_valuevalue-any","title":"1.13\u3001last_value(value any)\u8fd4\u56de\u6700\u540e\u503c","text":"<pre><code>postgres=# select last_value(amount) over(partition by begincity order by pubtime),* FROM bills;  \n last_value | id |       goodsdesc        | beginunit | begincity |       pubtime       | amount  \n------------+----+------------------------+-----------+-----------+---------------------+---------\n    1915.86 |  1 | \u8863\u670d                   | \u6d77\u5357\u7701    | \u4e09\u4e9a\u5e02    | 2015-10-05 09:32:01 | 1915.86\n    2022.31 |  2 | \u5efa\u7b51\u8bbe\u5907               | \u798f\u5efa\u7701    | \u4e09\u660e\u5e02    | 2015-10-05 07:21:22 | 2022.31\n    8771.11 |  3 | \u8bbe\u5907                   | \u798f\u5efa\u7701    | \u4e09\u660e\u5e02    | 2015-10-05 11:21:54 | 8771.11\n    1316.27 |  4 | \u666e\u8d27                   | \u798f\u5efa\u7701    | \u4e09\u660e\u5e02    | 2015-10-05 15:19:17 | 1316.27\n     1030.9 |  6 | 5 0\u94f2\u8f66\uff0c\u540e\u516b\u8f6e\u7ffb\u6597\u8f66  | \u6cb3\u5357\u7701    | \u4e09\u95e8\u5ce1\u5e02  | 2015-10-05 07:53:13 |  1030.9\n    4182.68 |  7 | \u9c9c\u9999\u83c72000\u65a4           | \u6cb3\u5357\u7701    | \u4e09\u95e8\u5ce1\u5e02  | 2015-10-05 10:38:29 | 4182.68\n    9621.37 |  8 | \u65cb\u6316\u9644\u4ef638\u5428           | \u6cb3\u5357\u7701    | \u4e09\u95e8\u5ce1\u5e02  | 2015-10-05 10:48:38 | 5365.04\n    9621.37 |  9 | \u65cb\u6316\u9644\u4ef635\u5428           | \u6cb3\u5357\u7701    | \u4e09\u95e8\u5ce1\u5e02  | 2015-10-05 10:48:38 | 9621.37\n     8290.5 | 10 | \u65cb\u6316\u9644\u4ef639\u5428           | \u6cb3\u5357\u7701    | \u4e09\u95e8\u5ce1\u5e02  | 2015-10-05 11:38:38 |  8290.5\n     971.54 | 11 | \u8bbe\u5907                   | \u4e0a\u6d77\u5e02    | \u4e0a\u6d77\u5e02    | 2015-10-05 07:59:35 |  971.54\n    9886.15 |  5 | \u666e\u8d2740\u5428\u970013\u7c73\u534a\u6302\u4e00\u8f86 | \u4e0a\u6d77\u5e02    | \u4e0a\u6d77\u5e02    | 2015-10-05 08:13:59 | 9886.15\n(11 rows)\n\npostgres=# select last_value(amount) over(partition by begincity),* FROM bills;\n last_value | id |       goodsdesc        | beginunit | begincity |       pubtime       | amount  \n------------+----+------------------------+-----------+-----------+---------------------+---------\n    1915.86 |  1 | \u8863\u670d                   | \u6d77\u5357\u7701    | \u4e09\u4e9a\u5e02    | 2015-10-05 09:32:01 | 1915.86\n    1316.27 |  2 | \u5efa\u7b51\u8bbe\u5907               | \u798f\u5efa\u7701    | \u4e09\u660e\u5e02    | 2015-10-05 07:21:22 | 2022.31\n    1316.27 |  3 | \u8bbe\u5907                   | \u798f\u5efa\u7701    | \u4e09\u660e\u5e02    | 2015-10-05 11:21:54 | 8771.11\n    1316.27 |  4 | \u666e\u8d27                   | \u798f\u5efa\u7701    | \u4e09\u660e\u5e02    | 2015-10-05 15:19:17 | 1316.27\n    9621.37 |  7 | \u9c9c\u9999\u83c72000\u65a4           | \u6cb3\u5357\u7701    | \u4e09\u95e8\u5ce1\u5e02  | 2015-10-05 10:38:29 | 4182.68\n    9621.37 | 10 | \u65cb\u6316\u9644\u4ef639\u5428           | \u6cb3\u5357\u7701    | \u4e09\u95e8\u5ce1\u5e02  | 2015-10-05 11:38:38 |  8290.5\n    9621.37 |  6 | 5 0\u94f2\u8f66\uff0c\u540e\u516b\u8f6e\u7ffb\u6597\u8f66  | \u6cb3\u5357\u7701    | \u4e09\u95e8\u5ce1\u5e02  | 2015-10-05 07:53:13 |  1030.9\n    9621.37 |  8 | \u65cb\u6316\u9644\u4ef638\u5428           | \u6cb3\u5357\u7701    | \u4e09\u95e8\u5ce1\u5e02  | 2015-10-05 10:48:38 | 5365.04\n    9621.37 |  9 | \u65cb\u6316\u9644\u4ef635\u5428           | \u6cb3\u5357\u7701    | \u4e09\u95e8\u5ce1\u5e02  | 2015-10-05 10:48:38 | 9621.37\n     971.54 |  5 | \u666e\u8d2740\u5428\u970013\u7c73\u534a\u6302\u4e00\u8f86 | \u4e0a\u6d77\u5e02    | \u4e0a\u6d77\u5e02    | 2015-10-05 08:13:59 | 9886.15\n     971.54 | 11 | \u8bbe\u5907                   | \u4e0a\u6d77\u5e02    | \u4e0a\u6d77\u5e02    | 2015-10-05 07:59:35 |  971.54\n(11 rows)\n</code></pre> <p>\u6ce8\u610f\u4e0d\u8981\u52a0\u4e0aorder by id\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5e26\u4e86order by \u53c2\u6570\u4f1a\u4ece\u5206\u7ec4\u7684\u8d77\u59cb\u503c\u5f00\u59cb\u4e00\u76f4\u53e0\u52a0\uff0c \u76f4\u5230\u5f53\u524d\u503c\uff08\u4e0d\u662f\u5f53\u524d\u8bb0\u5f55\uff09\u4e0d\u540c\u4e3a\u6b62\uff0c\u5f53\u5ffd\u7565order by \u53c2\u6570\u5219\u662f\u6574\u4e2a\u5206\u7ec4\u3002\u4e0b\u9762\u901a\u8fc7\u4fee\u6539\u5206\u7ec4\u7684\u7edf\u8ba1\u8303\u56f4\u5c31\u53ef\u4ee5\u5b9e\u73b0order by\u53c2\u6570\u53d6\u6700\u540e\u503c  </p> <pre><code>postgres=# select last_value(amount) over(partition by begincity order by id range between unbounded preceding and unbounded following),* FROM bills;\n last_value | id |       goodsdesc        | beginunit | begincity |       pubtime       | amount  \n------------+----+------------------------+-----------+-----------+---------------------+---------\n    1915.86 |  1 | \u8863\u670d                   | \u6d77\u5357\u7701    | \u4e09\u4e9a\u5e02    | 2015-10-05 09:32:01 | 1915.86\n    1316.27 |  2 | \u5efa\u7b51\u8bbe\u5907               | \u798f\u5efa\u7701    | \u4e09\u660e\u5e02    | 2015-10-05 07:21:22 | 2022.31\n    1316.27 |  3 | \u8bbe\u5907                   | \u798f\u5efa\u7701    | \u4e09\u660e\u5e02    | 2015-10-05 11:21:54 | 8771.11\n    1316.27 |  4 | \u666e\u8d27                   | \u798f\u5efa\u7701    | \u4e09\u660e\u5e02    | 2015-10-05 15:19:17 | 1316.27\n     8290.5 |  6 | 5 0\u94f2\u8f66\uff0c\u540e\u516b\u8f6e\u7ffb\u6597\u8f66  | \u6cb3\u5357\u7701    | \u4e09\u95e8\u5ce1\u5e02  | 2015-10-05 07:53:13 |  1030.9\n     8290.5 |  7 | \u9c9c\u9999\u83c72000\u65a4           | \u6cb3\u5357\u7701    | \u4e09\u95e8\u5ce1\u5e02  | 2015-10-05 10:38:29 | 4182.68\n     8290.5 |  8 | \u65cb\u6316\u9644\u4ef638\u5428           | \u6cb3\u5357\u7701    | \u4e09\u95e8\u5ce1\u5e02  | 2015-10-05 10:48:38 | 5365.04\n     8290.5 |  9 | \u65cb\u6316\u9644\u4ef635\u5428           | \u6cb3\u5357\u7701    | \u4e09\u95e8\u5ce1\u5e02  | 2015-10-05 10:48:38 | 9621.37\n     8290.5 | 10 | \u65cb\u6316\u9644\u4ef639\u5428           | \u6cb3\u5357\u7701    | \u4e09\u95e8\u5ce1\u5e02  | 2015-10-05 11:38:38 |  8290.5\n     971.54 |  5 | \u666e\u8d2740\u5428\u970013\u7c73\u534a\u6302\u4e00\u8f86 | \u4e0a\u6d77\u5e02    | \u4e0a\u6d77\u5e02    | 2015-10-05 08:13:59 | 9886.15\n     971.54 | 11 | \u8bbe\u5907                   | \u4e0a\u6d77\u5e02    | \u4e0a\u6d77\u5e02    | 2015-10-05 07:59:35 |  971.54\n(11 rows)\n</code></pre>"},{"location":"guide/04-advanced-use/#114nth_valuevalue-any-nth-integer","title":"1.14\u3001nth_value(value any, nth integer)\uff1a\u8fd4\u56de\u7a97\u53e3\u6846\u67b6\u4e2d\u7684\u6307\u5b9a\u503c","text":"<pre><code>postgres=# select nth_value(amount,2) over(partition by begincity order by id),* from bills;\n nth_value | id |       goodsdesc        | beginunit | begincity |       pubtime       | amount  \n-----------+----+------------------------+-----------+-----------+---------------------+---------\n           |  1 | \u8863\u670d                   | \u6d77\u5357\u7701    | \u4e09\u4e9a\u5e02    | 2015-10-05 09:32:01 | 1915.86\n           |  2 | \u5efa\u7b51\u8bbe\u5907               | \u798f\u5efa\u7701    | \u4e09\u660e\u5e02    | 2015-10-05 07:21:22 | 2022.31\n   8771.11 |  3 | \u8bbe\u5907                   | \u798f\u5efa\u7701    | \u4e09\u660e\u5e02    | 2015-10-05 11:21:54 | 8771.11\n   8771.11 |  4 | \u666e\u8d27                   | \u798f\u5efa\u7701    | \u4e09\u660e\u5e02    | 2015-10-05 15:19:17 | 1316.27\n           |  6 | 5 0\u94f2\u8f66\uff0c\u540e\u516b\u8f6e\u7ffb\u6597\u8f66  | \u6cb3\u5357\u7701    | \u4e09\u95e8\u5ce1\u5e02  | 2015-10-05 07:53:13 |  1030.9\n   4182.68 |  7 | \u9c9c\u9999\u83c72000\u65a4           | \u6cb3\u5357\u7701    | \u4e09\u95e8\u5ce1\u5e02  | 2015-10-05 10:38:29 | 4182.68\n   4182.68 |  8 | \u65cb\u6316\u9644\u4ef638\u5428           | \u6cb3\u5357\u7701    | \u4e09\u95e8\u5ce1\u5e02  | 2015-10-05 10:48:38 | 5365.04\n   4182.68 |  9 | \u65cb\u6316\u9644\u4ef635\u5428           | \u6cb3\u5357\u7701    | \u4e09\u95e8\u5ce1\u5e02  | 2015-10-05 10:48:38 | 9621.37\n   4182.68 | 10 | \u65cb\u6316\u9644\u4ef639\u5428           | \u6cb3\u5357\u7701    | \u4e09\u95e8\u5ce1\u5e02  | 2015-10-05 11:38:38 |  8290.5\n           |  5 | \u666e\u8d2740\u5428\u970013\u7c73\u534a\u6302\u4e00\u8f86 | \u4e0a\u6d77\u5e02    | \u4e0a\u6d77\u5e02    | 2015-10-05 08:13:59 | 9886.15\n    971.54 | 11 | \u8bbe\u5907                   | \u4e0a\u6d77\u5e02    | \u4e0a\u6d77\u5e02    | 2015-10-05 07:59:35 |  971.54\n(11 rows)\n</code></pre>"},{"location":"guide/04-advanced-use/#115","title":"1.15\u3001\u7edf\u8ba1\u5404\u4e2a\u57ce\u5e02\u7684\u603b\u8fd0\u8d39\u53ca\u5e73\u5747\u6bcf\u5355\u7684\u8fd0\u8d39","text":"<pre><code>postgres=# select sum(amount) over(partition by begincity),avg(amount) over(partition by begincity),begincity,amount from bills;\n   sum    |       avg        | begincity | amount  \n----------+------------------+-----------+---------\n  1915.86 |          1915.86 | \u4e09\u4e9a\u5e02    | 1915.86\n 12109.69 | 4036.56333333333 | \u4e09\u660e\u5e02    | 2022.31\n 12109.69 | 4036.56333333333 | \u4e09\u660e\u5e02    | 8771.11\n 12109.69 | 4036.56333333333 | \u4e09\u660e\u5e02    | 1316.27\n 28490.49 |         5698.098 | \u4e09\u95e8\u5ce1\u5e02  | 4182.68\n 28490.49 |         5698.098 | \u4e09\u95e8\u5ce1\u5e02  |  8290.5\n 28490.49 |         5698.098 | \u4e09\u95e8\u5ce1\u5e02  |  1030.9\n 28490.49 |         5698.098 | \u4e09\u95e8\u5ce1\u5e02  | 5365.04\n 28490.49 |         5698.098 | \u4e09\u95e8\u5ce1\u5e02  | 9621.37\n 10857.69 |         5428.845 | \u4e0a\u6d77\u5e02    | 9886.15\n 10857.69 |         5428.845 | \u4e0a\u6d77\u5e02    |  971.54\n(11 rows)\n</code></pre>"},{"location":"guide/04-advanced-use/#116","title":"1.16\u3001\u7a97\u53e3\u51fd\u6570\u522b\u540d\u4f7f\u7528","text":"<pre><code>postgres=# select sum(amount) over w,avg(amount) over w,begincity,amount from bills window w as (partition by begincity);\n   sum    |       avg        | begincity | amount  \n----------+------------------+-----------+---------\n  1915.86 |          1915.86 | \u4e09\u4e9a\u5e02    | 1915.86\n 12109.69 | 4036.56333333333 | \u4e09\u660e\u5e02    | 2022.31\n 12109.69 | 4036.56333333333 | \u4e09\u660e\u5e02    | 8771.11\n 12109.69 | 4036.56333333333 | \u4e09\u660e\u5e02    | 1316.27\n 28490.49 |         5698.098 | \u4e09\u95e8\u5ce1\u5e02  | 4182.68\n 28490.49 |         5698.098 | \u4e09\u95e8\u5ce1\u5e02  |  8290.5\n 28490.49 |         5698.098 | \u4e09\u95e8\u5ce1\u5e02  |  1030.9\n 28490.49 |         5698.098 | \u4e09\u95e8\u5ce1\u5e02  | 5365.04\n 28490.49 |         5698.098 | \u4e09\u95e8\u5ce1\u5e02  | 9621.37\n 10857.69 |         5428.845 | \u4e0a\u6d77\u5e02    | 9886.15\n 10857.69 |         5428.845 | \u4e0a\u6d77\u5e02    |  971.54\n(11 rows)\n</code></pre>"},{"location":"guide/04-advanced-use/#117","title":"1.17\u3001\u83b7\u53d6\u6bcf\u4e2a\u57ce\u5e02\u8fd0\u8d39\u524d\u4e24\u540d\u8ba2\u5355","text":"<pre><code>postgres=# select * from (select row_number() over(partition by begincity order by amount desc),* from bills) where row_number&lt;3;     \n row_number | id |       goodsdesc        | beginunit | begincity |       pubtime       | amount  \n------------+----+------------------------+-----------+-----------+---------------------+---------\n          1 |  1 | \u8863\u670d                   | \u6d77\u5357\u7701    | \u4e09\u4e9a\u5e02    | 2015-10-05 09:32:01 | 1915.86\n          1 |  3 | \u8bbe\u5907                   | \u798f\u5efa\u7701    | \u4e09\u660e\u5e02    | 2015-10-05 11:21:54 | 8771.11\n          2 |  2 | \u5efa\u7b51\u8bbe\u5907               | \u798f\u5efa\u7701    | \u4e09\u660e\u5e02    | 2015-10-05 07:21:22 | 2022.31\n          1 |  9 | \u65cb\u6316\u9644\u4ef635\u5428           | \u6cb3\u5357\u7701    | \u4e09\u95e8\u5ce1\u5e02  | 2015-10-05 10:48:38 | 9621.37\n          2 | 10 | \u65cb\u6316\u9644\u4ef639\u5428           | \u6cb3\u5357\u7701    | \u4e09\u95e8\u5ce1\u5e02  | 2015-10-05 11:38:38 |  8290.5\n          1 |  5 | \u666e\u8d2740\u5428\u970013\u7c73\u534a\u6302\u4e00\u8f86 | \u4e0a\u6d77\u5e02    | \u4e0a\u6d77\u5e02    | 2015-10-05 08:13:59 | 9886.15\n          2 | 11 | \u8bbe\u5907                   | \u4e0a\u6d77\u5e02    | \u4e0a\u6d77\u5e02    | 2015-10-05 07:59:35 |  971.54\n(7 rows)\n</code></pre>"},{"location":"guide/04-advanced-use/#2jsonjsonb","title":"2\u3001json/jsonb\u4f7f\u7528","text":"<p>OpenTenBase\u4e0d\u53ea\u662f\u4e00\u4e2a\u5206\u5e03\u5f0f\u5173\u7cfb\u578b\u6570\u636e\u5e93\u7cfb\u7edf\uff0c\u540c\u65f6\u5b83\u8fd8\u652f\u6301\u975e\u5173\u7cfb\u6570\u636e\u7c7b\u578bJSON\uff0cJSON \u6570\u636e\u7c7b\u578b\u662f\u7528\u6765\u5b58\u50a8 JSON\uff08JavaScript Object Notation\uff09 \u6570\u636e\u7684\u3002\u8fd9\u79cd\u6570\u636e\u4e5f\u53ef\u4ee5\u88ab\u5b58\u50a8\u4e3atext\uff0c\u4f46\u662f JSON \u6570\u636e\u7c7b\u578b\u7684 \u4f18\u52bf\u5728\u4e8e\u80fd\u5f3a\u5236\u8981\u6c42\u6bcf\u4e2a\u88ab\u5b58\u50a8\u7684\u503c\u7b26\u5408 JSON \u89c4\u5219\u3002 \u4e5f\u6709\u5f88\u591a JSON \u76f8\u5173\u7684\u51fd\u6570\u548c\u64cd\u4f5c\u7b26\u53ef\u4ee5\u7528\u4e8e\u5b58\u50a8\u5728\u8fd9\u4e9b\u6570\u636e\u7c7b\u578b\u4e2d\u7684\u6570\u636e\u3002JSON \u6570\u636e\u7c7b\u578b\u6709json \u548c jsonb\u3002\u5b83\u4eec\u63a5\u53d7\u5b8c\u5168\u76f8\u540c\u7684\u503c\u96c6\u5408\u4f5c\u4e3a\u8f93\u5165\u3002\u4e3b\u8981\u7684\u5b9e\u9645\u533a\u522b\u662f\u6548\u7387\u3002json\u6570\u636e\u7c7b\u578b\u5b58\u50a8\u8f93\u5165\u6587\u672c\u7684\u7cbe\u51c6\u62f7\u8d1d\uff0c\u5904\u7406\u51fd\u6570\u5fc5\u987b\u5728\u6bcf\u6b21\u6267\u884c\u65f6\u5fc5\u987b\u91cd\u65b0\u89e3\u6790\u8be5\u6570\u636e\u3002\u800cjsonb\u6570\u636e\u88ab\u5b58\u50a8\u5728\u4e00\u79cd\u5206\u89e3\u597d\u7684\u4e8c\u8fdb\u5236\u683c\u5f0f\u4e2d\uff0c\u5b83\u5728\u8f93\u5165\u65f6\u8981\u7a0d\u6162\u4e00\u4e9b\uff0c\u56e0\u4e3a\u9700\u8981\u505a\u9644\u52a0\u7684\u8f6c\u6362\u3002\u4f46\u662f jsonb\u5728\u5904\u7406\u65f6\u8981\u5feb\u5f88\u591a\uff0c\u56e0\u4e3a\u4e0d\u9700\u8981\u89e3\u6790\u3002jsonb\u4e5f\u652f\u6301\u7d22\u5f15\uff0c\u8fd9\u4e5f\u662f\u4e00\u4e2a\u4ee4\u4eba\u77a9\u76ee\u7684\u4f18\u52bf\u3002 </p>"},{"location":"guide/04-advanced-use/#21json","title":"2.1\u3001json\u5e94\u7528","text":""},{"location":"guide/04-advanced-use/#211json","title":"2.1.1\u3001\u521b\u5efajson\u7c7b\u578b\u5b57\u6bb5\u8868","text":"<pre><code>postgres=# create table t_json(id int,f_json json);\nNOTICE:  Replica identity is needed for shard table, please add to this table through \"alter table\" command.\nCREATE TABLE\n</code></pre>"},{"location":"guide/04-advanced-use/#212","title":"2.1.2\u3001\u63d2\u5165\u6570\u636e","text":"<pre><code>postgres=# insert into t_json values(1,'{\"col1\":1,\"col2\":\"opentenbase\"}');\nINSERT 0 1\npostgres=# insert into t_json values(2,'{\"col1\":1,\"col2\":\"opentenbase\",\"col3\":\"pgxz\"}');\nINSERT 0 1\npostgres=# select * from t_json;\n id |                 f_json                  \n----+-----------------------------------------\n  1 | {\"col1\":1,\"col2\":\"opentenbase\"}\n  2 | {\"col1\":1,\"col2\":\"opentenbase\",\"col3\":\"pgxz\"}\n(2 rows)\n</code></pre>"},{"location":"guide/04-advanced-use/#213-json","title":"2.1.3\u3001\u901a\u8fc7\u952e\u83b7\u5f97 JSON \u5bf9\u8c61\u57df","text":"<pre><code>postgres=# select f_json -&gt;'col2' as col2 ,f_json -&gt; 'col3' as col3 from t_json;  \n  col2   |  col3  \n---------+--------\n \"opentenbase\" | \n \"opentenbase\" | \"pgxz\"\n(2 rows)\n</code></pre>"},{"location":"guide/04-advanced-use/#214","title":"2.1.4\u3001\u4ee5\u6587\u672c\u5f62\u5f0f\u83b7\u53d6\u5bf9\u8c61\u503c","text":"<pre><code>postgres=# select f_json -&gt;&gt;'col2' as col2 ,f_json -&gt;&gt; 'col3' as col3 from t_json;\n col2  | col3 \n-------+------\n opentenbase | \n opentenbase | pgxz\n(2 rows)\n\npostgres=# select f_json -&gt;&gt;'col2' as col2 ,f_json -&gt;&gt; 'col3' as col3 from t_json where f_json -&gt;&gt; 'col3' is not null;\n col2  | col3 \n-------+------\n opentenbase | pgxz\n(1 row)\n</code></pre>"},{"location":"guide/04-advanced-use/#22jsonb","title":"2.2\u3001jsonb\u5e94\u7528","text":""},{"location":"guide/04-advanced-use/#221jsonb","title":"2.2.1\u3001\u521b\u5efajsonb\u7c7b\u578b\u5b57\u6bb5\u8868","text":"<pre><code>postgres=# create table t_jsonb(id int,f_jsonb jsonb);\nNOTICE:  Replica identity is needed for shard table, please add to this table through \"alter table\" command.\nCREATE TABLE\npostgres=# \n</code></pre>"},{"location":"guide/04-advanced-use/#222","title":"2.2.2\u3001\u63d2\u5165\u6570\u636e","text":"<pre><code>postgres=# insert into t_jsonb values(1,'{\"col1\":1,\"col2\":\"opentenbase\"}');\nINSERT 0 1\npostgres=# insert into t_jsonb values(2,'{\"col1\":1,\"col2\":\"opentenbase\",\"col3\":\"pgxz\"}');\nINSERT 0 1\n\npostgres=# select * from t_jsonb;\n id |                   f_jsonb                    \n----+----------------------------------------------\n  1 | {\"col1\": 1, \"col2\": \"opentenbase\"}\n  2 | {\"col1\": 1, \"col2\": \"opentenbase\", \"col3\": \"pgxz\"}\n(2 rows)\n\n</code></pre> <p>--jsonb\u63d2\u5165\u65f6\u4f1a\u79fb\u9664\u91cd\u590d\u7684\u952e\uff0c\u5982\u4e0b\u6240\u793a</p> <pre><code>postgres=# insert into t_jsonb values(3,'{\"col1\":1,\"col2\":\"opentenbase\",\"col2\":\"pgxz\"}');\nINSERT 0 1\npostgres=# select * from t_jsonb;\n id |                   f_jsonb                    \n----+----------------------------------------------\n  1 | {\"col1\": 1, \"col2\": \"opentenbase\"}\n  3 | {\"col1\": 1, \"col2\": \"pgxz\"}\n  2 | {\"col1\": 1, \"col2\": \"opentenbase\", \"col3\": \"pgxz\"}\n(3 rows)\n\n</code></pre>"},{"location":"guide/04-advanced-use/#223","title":"2.2.3\u3001\u66f4\u65b0\u6570\u636e","text":"<p>--\u589e\u52a0\u5143\u7d20</p> <pre><code>postgres=# update t_jsonb set f_jsonb = f_jsonb || '{\"col3\":\"pgxz\"}'::jsonb where id=1;  \nUPDATE 1\n</code></pre> <p>--\u66f4\u65b0\u539f\u6765\u7684\u5143\u7d20</p> <pre><code>postgres=# update t_jsonb set f_jsonb = f_jsonb || '{\"col2\":\"opentenbase\"}'::jsonb where id=3;     \nUPDATE 1\n\npostgres=# select * from t_jsonb;\n id |                   f_jsonb                    \n----+----------------------------------------------\n  2 | {\"col1\": 1, \"col2\": \"opentenbase\", \"col3\": \"pgxz\"}\n  1 | {\"col1\": 1, \"col2\": \"opentenbase\", \"col3\": \"pgxz\"}\n  3 | {\"col1\": 1, \"col2\": \"opentenbase\"}\n(3 rows)\n</code></pre> <p>--\u5220\u9664\u67d0\u4e2a\u952e</p> <pre><code>postgres=# update t_jsonb set f_jsonb = f_jsonb - 'col3';    \nUPDATE 3\n\npostgres=# select * from t_jsonb;\n id |           f_jsonb            \n----+------------------------------\n  2 | {\"col1\": 1, \"col2\": \"opentenbase\"}\n  1 | {\"col1\": 1, \"col2\": \"opentenbase\"}\n  3 | {\"col1\": 1, \"col2\": \"opentenbase\"}\n(3 rows)\n</code></pre>"},{"location":"guide/04-advanced-use/#224jsonb_set","title":"2.2.4\u3001jsonb_set()\u51fd\u6570\u66f4\u65b0\u6570\u636e","text":"<pre><code>jsonb_set(target jsonb, path text[], new_value jsonb, [create_missing boolean]) \n</code></pre> <p>\u8bf4\u660e\uff1atarget\u6307\u8981\u66f4\u65b0\u7684\u6570\u636e\u6e90\uff0cpath\u6307\u8def\u5f84\uff0cnew_value\u6307\u66f4\u65b0\u540e\u7684\u952e\u503c\uff0ccreate_missing\u503c\u4e3atrue\u8868\u793a\u5982\u679c\u952e\u4e0d\u5b58\u5728\u5219\u6dfb\u52a0\uff0ccreate_missing\u503c\u4e3afalse\u8868\u793a\u5982\u679c\u952e\u4e0d\u5b58\u5728\u5219\u4e0d\u6dfb\u52a0\u3002</p> <pre><code>postgres=# update t_jsonb set f_jsonb = jsonb_set( f_jsonb , '{col}' , '\"pgxz\"' , true ) where id=1;\nUPDATE 1\npostgres=# update t_jsonb set f_jsonb = jsonb_set( f_jsonb , '{col}' , '\"pgxz\"' , false ) where id=2;         \nUPDATE 1\npostgres=# update t_jsonb set f_jsonb = jsonb_set( f_jsonb , '{col2}' , '\"pgxz\"' , false ) where id=3;          \nUPDATE 1\npostgres=# select * from t_jsonb;\n id |                   f_jsonb                   \n----+---------------------------------------------\n  1 | {\"col\": \"pgxz\", \"col1\": 1, \"col2\": \"opentenbase\"}\n  2 | {\"col1\": 1, \"col2\": \"opentenbase\"}\n  3 | {\"col1\": 1, \"col2\": \"pgxz\"}\n(3 rows)\n</code></pre>"},{"location":"guide/04-advanced-use/#23jsonb","title":"2.3\u3001jsonb\u51fd\u6570\u5e94\u7528","text":""},{"location":"guide/04-advanced-use/#231jsonb_eachjson","title":"2.3.1\u3001jsonb_each()\u5c06json\u5bf9\u8c61\u8f6c\u53d8\u952e\u548c\u503c","text":"<pre><code>postgres=# select  f_jsonb  from t_jsonb where id=1;\n                   f_jsonb                   \n---------------------------------------------\n {\"col\": \"pgxz\", \"col1\": 1, \"col2\": \"opentenbase\"}\n(1 row)\n\npostgres=#  select * from  jsonb_each((select  f_jsonb  from t_jsonb where id=1)); \n key  |  value  \n------+---------\n col  | \"pgxz\"\n col1 | 1\n col2 | \"opentenbase\"\n(3 rows)\n</code></pre>"},{"location":"guide/04-advanced-use/#232jsonb_each_textjson","title":"2.3.2\u3001jsonb_each_text()\u5c06json\u5bf9\u8c61\u8f6c\u53d8\u6587\u672c\u7c7b\u578b\u7684\u952e\u548c\u503c","text":"<pre><code>postgres=#  select * from  jsonb_each_text((select  f_jsonb  from t_jsonb where id=1)); \n key  | value \n------+-------\n col  | pgxz\n col1 | 1\n col2 | opentenbase\n(3 rows)\n</code></pre>"},{"location":"guide/04-advanced-use/#233row_to_jsonjson","title":"2.3.3\u3001row_to_json()\u5c06\u4e00\u884c\u8bb0\u5f55\u53d8\u6210\u4e00\u4e2ajson\u5bf9\u8c61","text":"<pre><code>postgres=# \\d+ opentenbase\n                                    Table \"public.opentenbase\"\n  Column  |  Type   | Collation | Nullable | Default | Storage  | Stats target | Description \n----------+---------+-----------+----------+---------+----------+--------------+-------------\n id       | integer |           | not null |         | plain    |              | \n nickname | text    |           |          |         | extended |              | \nIndexes:\n    \"opentenbase_pkey\" PRIMARY KEY, btree (id)\nDistribute By: SHARD(id)\nLocation Nodes: ALL DATANODES\n\npostgres=# select * from opentenbase;\n id | nickname \n----+----------\n  1 | opentenbase\n  2 | pgxz\n(2 rows)\n\npostgres=# select row_to_json(opentenbase) from opentenbase;\n         row_to_json         \n-----------------------------\n {\"id\":1,\"nickname\":\"opentenbase\"}\n {\"id\":2,\"nickname\":\"pgxz\"}\n(2 rows)\n</code></pre>"},{"location":"guide/04-advanced-use/#234json_object_keys","title":"2.3.4\u3001json_object_keys()\u8fd4\u56de\u4e00\u4e2a\u5bf9\u8c61\u4e2d\u6240\u6709\u7684\u952e","text":"<pre><code>postgres=#  select * from json_object_keys((select  f_jsonb  from t_jsonb where id=1)::json); \n json_object_keys \n------------------\n col\n col1\n col2\n(3 rows)\n</code></pre>"},{"location":"guide/04-advanced-use/#24jsonb","title":"2.4\u3001jsonb\u7d22\u5f15\u4f7f\u7528","text":"<p>OpenTenBase\u4e3a\u6587\u6863jsonb\u63d0\u4f9b\u4e86GIN\u7d22\u5f15\uff0cGIN \u7d22\u5f15\u53ef\u4ee5\u88ab\u7528\u6765\u6709\u6548\u5730\u641c\u7d22\u5728\u5927\u91cfjsonb\u6587\u6863\uff08\u6570\u636e\uff09\u4e2d\u51fa\u73b0 \u7684\u952e\u6216\u8005\u952e\u503c\u5bf9\u3002</p>"},{"location":"guide/04-advanced-use/#241jsonb","title":"2.4.1\u3001\u521b\u5efa\u7acbjsonb\u7d22\u5f15","text":"<pre><code>postgres=# create index t_jsonb_f_jsonb_idx on t_jsonb using gin(f_jsonb);\nCREATE INDEX\n\npostgres=# \\d+ t_jsonb\n                                   Table \"public.t_jsonb\"\n Column  |  Type   | Collation | Nullable | Default | Storage  | Stats target | Description \n---------+---------+-----------+----------+---------+----------+--------------+-------------\n id      | integer |           |          |         | plain    |              | \n f_jsonb | jsonb   |           |          |         | extended |              | \nIndexes:\n    \"t_jsonb_f_jsonb_idx\" gin (f_jsonb)\nDistribute By: SHARD(id)\nLocation Nodes: ALL DATANODES\n</code></pre>"},{"location":"guide/04-advanced-use/#242","title":"2.4.2\u3001\u6d4b\u8bd5\u67e5\u8be2\u7684\u6027\u80fd","text":"<pre><code>postgres=# select count(1) from t_jsonb;\n  count   \n----------\n 10000000\n(1 row)\n\npostgres=# analyze t_jsonb;\nANALYZE\n\n</code></pre> <p>--\u6ca1\u6709\u7d22\u5f15\u5f00\u9500</p> <pre><code>postgres=# select * from t_jsonb where f_jsonb @&gt; '{\"col1\":9999}';\n  id  |            f_jsonb             \n------+--------------------------------\n 9999 | {\"col1\": 9999, \"col2\": \"9999\"}\n 9999 | {\"col1\": 9999, \"col2\": \"9999\"}\n 9999 | {\"col1\": 9999, \"col2\": \"9999\"}\n 9999 | {\"col1\": 9999, \"col2\": \"9999\"}\n 9999 | {\"col1\": 9999, \"col2\": \"9999\"}\n(5 rows)\n\nTime: 2473.488 ms (00:02.473)\n\n</code></pre> <p>--\u6709\u7d22\u5f15\u5f00\u9500</p> <pre><code>postgres=# select * from t_jsonb where f_jsonb @&gt; '{\"col1\":9999}';\n  id  |            f_jsonb             \n------+--------------------------------\n 9999 | {\"col1\": 9999, \"col2\": \"9999\"}\n 9999 | {\"col1\": 9999, \"col2\": \"9999\"}\n 9999 | {\"col1\": 9999, \"col2\": \"9999\"}\n 9999 | {\"col1\": 9999, \"col2\": \"9999\"}\n 9999 | {\"col1\": 9999, \"col2\": \"9999\"}\n(5 rows)\n\nTime: 217.968 ms\n</code></pre>"},{"location":"guide/04-advanced-use/#3","title":"3\u3001\u6e38\u6807\u4f7f\u7528","text":""},{"location":"guide/04-advanced-use/#31","title":"3.1\u3001\u5b9a\u4e49\u4e00\u4e2a\u6e38\u6807","text":"<pre><code>postgres=# begin;\nBEGIN\npostgres=#  DECLARE opentenbase_cur SCROLL CURSOR FOR SELECT * from opentenbase ORDER BY id;              \nDECLARE CURSOR\n</code></pre> <p>\u6ce8\u610f\uff1a\u6e38\u6807\u9700\u8981\u653e\u5728\u4e00\u4e2a\u4e8b\u52a1\u4e2d\u4f7f\u7528</p>"},{"location":"guide/04-advanced-use/#32","title":"3.2\u3001\u63d0\u53d6\u4e0b\u4e00\u884c\u6570\u636e","text":"<pre><code>postgres=# DECLARE opentenbase_cur SCROLL CURSOR FOR SELECT * from opentenbase ORDER BY id; \nDECLARE CURSOR\npostgres=# FETCH NEXT from opentenbase_cur ;               \n id |  nickname   \n----+-------------\n  1 | hello opentenbase\n(1 row)\n\npostgres=# FETCH NEXT from opentenbase_cur ;\n id | nickname  \n----+-----------\n  2 | opentenbase\u597d\n(1 row)\n</code></pre>"},{"location":"guide/04-advanced-use/#33","title":"3.3\u3001\u63d0\u53d6\u524d\u4e00\u884c\u6570\u636e","text":"<pre><code>postgres=# FETCH PRIOR from opentenbase_cur ;      \n id |  nickname   \n----+-------------\n  1 | hello opentenbase\n(1 row)\n\npostgres=# FETCH PRIOR from opentenbase_cur ;\n id | nickname \n----+----------\n(0 rows)\n</code></pre>"},{"location":"guide/04-advanced-use/#34","title":"3.4\u3001\u63d0\u53d6\u6700\u540e\u4e00\u884c","text":"<pre><code>postgres=# FETCH LAST from opentenbase_cur ;         \n id |  nickname  \n----+------------\n  5 | opentenbase swap\n(1 row)\n</code></pre>"},{"location":"guide/04-advanced-use/#35","title":"3.5\u3001\u63d0\u53d6\u7b2c\u4e00\u884c","text":"<pre><code>postgres=# FETCH FIRST from opentenbase_cur ;       \n id |  nickname   \n----+-------------\n  1 | hello opentenbase\n(1 row)\n</code></pre>"},{"location":"guide/04-advanced-use/#36x","title":"3.6\u3001\u63d0\u53d6\u8be5\u67e5\u8be2\u7684\u7b2cx\u884c","text":"<pre><code>postgres=# FETCH ABSOLUTE 2 from opentenbase_cur ;                \n id | nickname  \n----+-----------\n  2 | opentenbase\u597d\n(1 row)\n\npostgres=# FETCH ABSOLUTE -1 from opentenbase_cur ; \n id |  nickname  \n----+------------\n  5 | opentenbase swap\n(1 row)\n\npostgres=# FETCH ABSOLUTE -2 from opentenbase_cur ; \n id |   nickname    \n----+---------------\n  4 | opentenbase default\n(1 row)\n\n</code></pre> <p>X\u4e3a\u8d1f\u6570\u65f6\u5219\u4ece\u5c3e\u90e8\u5411\u4e0a\u63d0</p>"},{"location":"guide/04-advanced-use/#37x","title":"3.7\u3001\u63d0\u53d6\u5f53\u524d\u4f4d\u7f6e\u540e\u7684\u7b2cx\u884c","text":"<pre><code>postgres=#  FETCH ABSOLUTE 1 from opentenbase_cur ; \n id |  nickname   \n----+-------------\n  1 | hello opentenbase\n(1 row)\n\npostgres=# FETCH RELATIVE 2 from opentenbase_cur ;\n id | nickname  \n----+-----------\n  3 | opentenbase\u597d\n(1 row)\n\npostgres=# FETCH RELATIVE 2 from opentenbase_cur ;\n id |  nickname  \n----+------------\n  5 | opentenbase swap\n(1 row)\n\n</code></pre> <p>\u6bcf\u63d0\u53d6\u4e00\u6b21\u6570\u636e\uff0c\u6e38\u6807\u7684\u4f4d\u7f6e\u90fd\u662f\u4f1a\u524d\u884c</p>"},{"location":"guide/04-advanced-use/#38x","title":"3.8\u3001\u5411\u524d\u63d0\u53d6x\u884c\u6570\u636e","text":"<pre><code>postgres=# FETCH FORWARD 2 from opentenbase_cur ;             \n id |  nickname   \n----+-------------\n  1 | hello opentenbase\n  2 | opentenbase\u597d\n(2 rows)\n\npostgres=# FETCH FORWARD 2 from opentenbase_cur ; \n id |   nickname    \n----+---------------\n  3 | opentenbase\u597d\n  4 | opentenbase default\n(2 rows)\n</code></pre>"},{"location":"guide/04-advanced-use/#39","title":"3.9\u3001\u5411\u524d\u63d0\u53d6\u5269\u4e0b\u7684\u6240\u6709\u6570\u636e","text":"<pre><code>postgres=# FETCH FORWARD 2 from opentenbase_cur ;    \n id |  nickname   \n----+-------------\n  1 | hello opentenbase\n  2 | opentenbase\u597d\n(2 rows)\n\npostgres=# FETCH FORWARD all from opentenbase_cur ;                                         \n id |   nickname    \n----+---------------\n  3 | opentenbase\u597d\n  4 | opentenbase default\n  5 | opentenbase swap\n(3 rows)\n</code></pre>"},{"location":"guide/04-advanced-use/#310x","title":"3.10\u3001\u5411\u540e\u63d0\u53d6x\u884c\u6570\u636e","text":"<pre><code>postgres=# FETCH BACKWARD 2 from opentenbase_cur ;   \n id |   nickname    \n----+---------------\n  5 | opentenbase swap\n  4 | opentenbase default\n(2 rows)\n</code></pre>"},{"location":"guide/04-advanced-use/#311","title":"3.11\u3001\u5411\u540e\u63d0\u53d6\u5269\u4e0b\u7684\u6240\u6709\u6570\u636e","text":"<pre><code>postgres=# FETCH BACKWARD all from opentenbase_cur ; \n id |  nickname   \n----+-------------\n  3 | opentenbase\u597d\n  2 | opentenbase\u597d\n  1 | hello opentenbase\n(3 rows)\n</code></pre>"},{"location":"guide/04-advanced-use/#4","title":"4\u3001\u4e8b\u52a1\u4f7f\u7528","text":""},{"location":"guide/04-advanced-use/#41","title":"4.1\u3001\u5f00\u59cb\u4e00\u4e2a\u4e8b\u52a1","text":"<pre><code>postgres=# begin;\nBEGIN\n</code></pre> <p>\u6216\u8005</p> <pre><code>postgres=# begin TRANSACTION ; \nBEGIN\n</code></pre> <p>\u4e5f\u53ef\u4ee5\u5b9a\u4e49\u4e8b\u52a1\u7684\u7ea7\u522b</p> <pre><code>postgres=# begin transaction isolation level read committed ;\nBEGIN\n</code></pre>"},{"location":"guide/04-advanced-use/#42","title":"4.2\u3001\u63d0\u4ea4\u4e8b\u52a1","text":"<p>\u8fdb\u7a0b#1\u8bbf\u95ee </p> <pre><code>postgres=# begin;\nBEGIN\npostgres=# delete from opentenbase where id=5;\nDELETE 1\npostgres=#\npostgres=# select * from opentenbase order by id;\n id |   nickname    \n----+---------------\n  1 | hello opentenbase\n  2 | opentenbase\u597d\n  3 | opentenbase\u597d\n  4 | opentenbase default\n\n</code></pre> <p>OpenTenBase\u4e5f\u662f\u5b8c\u5168\u652f\u6301ACID\u7279\u6027\uff0c\u6ca1\u63d0\u4ea4\u524d\u5f00\u542f\u53e6\u4e00\u4e2a\u8fde\u63a5\u67e5\u8be2\uff0c\u4f60\u4f1a\u770b\u5230\u662f5\u6761\u8bb0\u5f55\uff0c\u8fd9\u662fOpenTenBase\u9694\u79bb\u6027\u548c\u591a\u7248\u672c\u89c6\u56fe\u7684\u5b9e\u73b0\uff0c\u5982\u4e0b\u6240\u793a</p> <p>\u8fdb\u7a0b#2\u8bbf\u95ee</p> <pre><code>postgres=# select * from opentenbase order by id;\n id |   nickname    \n----+---------------\n  1 | hello opentenbase\n  2 | opentenbase\u597d\n  3 | opentenbase\u597d\n  4 | opentenbase default\n  5 | opentenbase swap\n(5 rows)\n\n</code></pre> <p>\u8fdb\u7a0b#1\u63d0\u4ea4\u6570\u636e</p> <pre><code>postgres=# commit;\nCOMMIT\npostgres=# \n</code></pre> <p>\u8fdb\u7a0b#2\u518d\u67e5\u8be2\u6570\u636e\uff0c\u8fd9\u65f6\u80fd\u770b\u5230\u5df2\u7ecf\u63d0\u4ea4\u7684\u6570\u636e\u4e86\uff0c\u8fd9\u4e2a\u7ea7\u522b\u53eb\u201c\u8bfb\u5df2\u63d0\u4ea4\u201d</p> <pre><code>postgres=# select * from opentenbase order by id;\n id |   nickname    \n----+---------------\n  1 | hello opentenbase\n  2 | opentenbase\u597d\n  3 | opentenbase\u597d\n  4 | opentenbase default\n(4 rows)\n</code></pre>"},{"location":"guide/04-advanced-use/#43","title":"4.3\u3001\u56de\u6eda\u4e8b\u52a1","text":"<pre><code>postgres=# begin;\nBEGIN\npostgres=# delete from opentenbase where id in (3,4);\nDELETE 2\npostgres=# select * from opentenbase;\n id |  nickname   \n----+-------------\n  1 | hello opentenbase\n  2 | opentenbase\u597d\n(2 rows)\n\npostgres=# rollback;\nROLLBACK\n</code></pre> <p>Rollback\u540e\u6570\u636e\u53c8\u56de\u6765\u4e86</p> <pre><code>postgres=# select * from opentenbase;\n id |   nickname    \n----+---------------\n  1 | hello opentenbase\n  2 | opentenbase\u597d\n  3 | opentenbase\u597d\n  4 | opentenbase default\n(4 rows)\n</code></pre>"},{"location":"guide/04-advanced-use/#44repeatable-read","title":"4.4\u3001\u4e8b\u52a1\u8bfb\u4e00\u81f4\u6027REPEATABLE READ","text":"<p>\u8fd9\u79cd\u4e8b\u52a1\u7ea7\u522b\u8868\u793a\u4e8b\u52a1\u81ea\u59cb\u81f3\u7ec8\u8bfb\u53d6\u7684\u6570\u636e\u90fd\u662f\u4e00\u81f4\u7684\uff0c\u5982\u4e0b\u6240\u793a</p> <p>#session1</p> <pre><code>postgres=# create table t_repeatable_read (id int,mc text);\nNOTICE:  Replica identity is needed for shard table, please add to this table through \"alter table\" command.\nCREATE TABLE\npostgres=# insert into t_repeatable_read values(1,'opentenbase');\nINSERT 0 1\n\npostgres=# begin isolation level repeatable read ;\nBEGIN\npostgres=# select * from t_repeatable_read ;\n id |  mc   \n----+-------\n  1 | opentenbase\n(1 row)\n</code></pre> <p>#session2</p> <pre><code>postgres=# insert into t_repeatable_read values(1,'pgxz'); \nINSERT 0 1\npostgres=# select * from t_repeatable_read;\n id |  mc   \n----+-------\n  1 | opentenbase\n  1 | pgxz\n(2 rows)\n</code></pre> <p>#session1</p> <pre><code>postgres=# select * from t_repeatable_read ;\n id |  mc   \n----+-------\n  1 | opentenbase\n(1 row)\n\npostgres=#\n\n</code></pre>"},{"location":"guide/04-advanced-use/#45","title":"4.5\u3001\u884c\u9501\u5728\u4e8b\u52a1\u4e2d\u7684\u8fd0\u7528","text":""},{"location":"guide/04-advanced-use/#451","title":"4.5.1\u3001\u73af\u5883\u51c6\u5907","text":"<pre><code>postgres=# create table t_row_lock(id int,mc text,primary key (id));\nNOTICE:  Replica identity is needed for shard table, please add to this table through \"alter table\" command.\nCREATE TABLE\npostgres=# \n\npostgres=# insert into t_row_lock values(1,'opentenbase'),(2,'pgxz');       \nINSERT 0 2\npostgres=# select * from t_row_lock;\n id |  mc   \n----+-------\n  1 | opentenbase\n  2 | pgxz\n(2 rows)\n</code></pre>"},{"location":"guide/04-advanced-use/#452update","title":"4.5.2\u3001\u76f4\u63a5update\u83b7\u53d6","text":"<p>#session1</p> <pre><code>postgres=# begin;\nBEGIN\npostgres=# set lock_timeout to 1;\nSET\npostgres=# update t_row_lock set mc='postgres' where mc='pgxz';\nUPDATE 1\npostgres=# \n</code></pre> <p>#session2</p> <pre><code>postgres=# begin;\nBEGIN\npostgres=# set lock_timeout to 1;\nSET\npostgres=#  update t_row_lock set mc='postgresql' where mc='opentenbase';        \nUPDATE 1\npostgres=# \n\n</code></pre> <p>\u4e0a\u9762session1\u4e0esession2\u5206\u522b\u6301\u6709mc=pgxz\u884c\u548cmc=opentenbase\u7684\u884c\u9501</p>"},{"location":"guide/04-advanced-use/#453selectfor-update","title":"4.5.3\u3001select...for update\u83b7\u53d6","text":"<p>#session1 </p> <pre><code>postgres=#  \nBEGIN\npostgres=# set lock_timeout to 1; \nSET\npostgres=# select * from t_row_lock where mc='pgxz' for update;\n id |  mc  \n----+------\n  2 | pgxz\n(1 row)\n</code></pre> <p>#session2 </p> <pre><code>postgres=# begin;\nBEGIN\npostgres=# set lock_timeout to 1; \nSET\npostgres=# select * from t_row_lock where mc='opentenbase' for update;\n id |  mc  \n----+------\n  2 | pgxz\n(1 row)\n</code></pre> <p>\u4e0a\u9762session1\u4e0esession2\u5206\u522b\u6301\u6709mc=pgxz\u884c\u548cmc=opentenbase\u7684\u884c\u9501</p>"},{"location":"guide/04-advanced-use/#454","title":"4.5.4\u3001\u6392\u5b83\u9501\u68c0\u67e5","text":"<pre><code>postgres=# select pid,pg_blocking_pids(pid),wait_event_type,query from pg_stat_activity where wait_event_type = 'Lock' and pid!=pg_backend_pid()\n</code></pre>"},{"location":"guide/05-component/","title":"\u7ec4\u4ef6\u5b89\u88c5\u53ca\u7ba1\u7406","text":"<p>\u5728\u5feb\u901f\u5165\u95e8\u6587\u7ae0\u4e2d\u6211\u4eec\u4ecb\u7ecd\u4e86 OpenTenBase \u7684\u67b6\u6784\u3001\u6e90\u7801\u7f16\u8bd1\u5b89\u88c5\u3001\u96c6\u7fa4\u8fd0\u884c\u72b6\u6001\u3001\u542f\u52a8\u505c\u6b62\u7b49\u5185\u5bb9\u3002</p> <p>\u5728\u5e94\u7528\u63a5\u5165\u4e2d\u6211\u4eec\u4ecb\u7ecd\u4e86\u5e94\u7528\u7a0b\u5e8f\u8fde\u63a5 OpenTenBase \u6570\u636e\u5e93\u8fdb\u884c\u5efa\u5e93\u3001\u5efa\u8868\u3001\u6570\u636e\u5bfc\u5165\u3001\u67e5\u8be2\u7b49\u64cd\u4f5c\u3002</p> <p>\u5728\u57fa\u672c\u4f7f\u7528\u4e2d\u6211\u4eec\u4ecb\u7ecd OpenTenBase \u4e2d\u7279\u6709\u7684shard\u8868\u3001\u590d\u5236\u8868\u7684\u521b\u5efa\uff0c\u548c\u57fa\u672c\u7684DML\u64cd\u4f5c\u3002</p> <p>\u5728\u9ad8\u7ea7\u4f7f\u7528\u4e2d\u6211\u4eec\u4ecb\u7ecd OpenTenBase \u7684\u9ad8\u7ea7\u4f7f\u7528\u64cd\u4f5c\u5185\u5bb9\uff0c\u5176\u4e2d\u5305\u542b\u4e86\u5404\u79cd\u7a97\u53e3\u51fd\u6570\u3001Json/Jsonb\u3001\u6e38\u6807\u3001\u4e8b\u52a1\u3001\u9501\u7b49\u7684\u4f7f\u7528\u3002</p> <p>\u5728\u672c\u7bc7\u6587\u7ae0\u4e2d\u6211\u4eec\u5c06\u6df1\u5165\u5230 OpenTenBase \u5404\u79cd\u7ec4\u4ef6\u5185\u90e8\uff0c\u5bf9\u5404\u79cd\u7ec4\u4ef6\u7684\u521d\u59cb\u5316\u3001\u53c2\u6570\u914d\u7f6e\u3001\u542f\u505c\u3001\u8fd0\u884c\u72b6\u6001\u67e5\u770b\u3001\u8def\u7531\u751f\u6548\u914d\u7f6e\u7b49\u8fdb\u884c\u5355\u72ec\u7684\u8be6\u7ec6\u4ecb\u7ecd\u3002</p>"},{"location":"guide/05-component/#_2","title":"\u673a\u5668\u51c6\u5907","text":"<ul> <li>\u670d\u52a1\u5668\u6570\u91cf</li> </ul> <p>2\u53f0\uff0cIP\u5206\u522b\u4e3a\uff1a 172.16.0.29\uff0c172.16.0.47</p> <ul> <li>\u786c\u4ef6\u914d\u7f6e</li> </ul> <p>CPU\uff1a4\u6838   \u5185\u5b58\uff1a8G   \u7cfb\u7edf\u76d8\uff1a50G   \u6570\u636e\u76d8\uff1a200G  </p> <ul> <li>\u64cd\u4f5c\u7cfb\u7edf\u8981\u6c42</li> </ul> <p>centos7.3  </p>"},{"location":"guide/05-component/#os","title":"\u521b\u5efaOS\u7528\u6237","text":"<ul> <li>\u521b\u5efa\u64cd\u4f5c\u7cfb\u7edf\u8fd0\u884c\u7528\u6237  </li> </ul> <pre><code>[root@VM_0_29_centos ~]# adduser -d /data/opentenbase opentenbase\n</code></pre> <ul> <li>\u914d\u7f6e\u64cd\u4f5c\u7cfb\u7edf\u7528\u6237\u5bc6\u7801  </li> </ul> <pre><code>[root@VM_0_29_centos pgxztmp]# passwd opentenbase\n</code></pre> <ul> <li>\u521b\u5efaopentenbase\u5e94\u7528\u7a0b\u5e8f\u8fd0\u884c\u76ee\u5f55  </li> </ul> <pre><code>[root@VM_0_29_centos pgxz]# su opentenbase  \n[opentenbase@VM_0_29_centos install]$ mkdir -p /data/opentenbase/install/pgxz\n</code></pre> <ul> <li>\u521b\u5efaopentenbase\u6570\u636e\u76ee\u5f55  </li> </ul> <pre><code>[root@VM_0_29_centos pgxz]# su opentenbase  \n[opentenbase@VM_0_29_centos install]$ mkdir -p /data/opentenbase/data/pgxz\n</code></pre> <ul> <li>\u4e0a\u4f20pgxz\u5e94\u7528\u7a0b\u5e8f\u5230\u76ee\u5f55/data/opentenbase/install/pgxz\u4e0b\u9762\uff0c\u76ee\u5f55\u7684\u7ed3\u6784\u4e3a  </li> </ul> <pre><code>[opentenbase@VM_0_29_centos pgxz]$ ll /data/opentenbase/install/pgxz\ntotal 4\ndrwxrwxr-x 2 pgxz pgxz 4096 Nov 10 04:33 bin\ndrwxrwxr-x 4 pgxz pgxz  189 Nov 10 04:33 include\ndrwxrwxr-x 4 pgxz pgxz  172 Nov 10 04:33 lib\ndrwxrwxr-x 3 pgxz pgxz   24 Oct  1 14:54 share\n[opentenbase@VM_0_29_centos pgxz]$ \n</code></pre> <ul> <li>\u914d\u7f6epgxz\u7528\u6237\u7684\u73af\u5883\u53d8\u91cf</li> </ul> <pre><code>[opentenbase@VM_0_29_centos ~]$ vim /data/opentenbase/.bashrc \n# .bashrc\n\n# Source global definitions\nif [ -f /etc/bashrc ]; then\n        . /etc/bashrc\nfi\n\nexport OPENTENBASE_HOME=/data/opentenbase/install/pgxz\nexport PATH=$OPENTENBASE_HOME/bin:$PATH\nexport LD_LIBRARY_PATH=$OPENTENBASE_HOME/lib:${LD_LIBRARY_PATH}\n</code></pre>"},{"location":"guide/05-component/#_3","title":"\u914d\u7f6e\u516c\u5171\u53c2\u6570","text":"<pre><code>[opentenbase@VM_0_29_centos ~]# mkdir -p /data/opentenbase/global/\n[opentenbase@VM_0_29_centos ~]#vim /data/opentenbase/global/postgresql.conf.user\n\nlisten_addresses = '0.0.0.0'\nmax_connections = 500\nmax_pool_size = 65535\nshared_buffers = 1GB                    \nmax_prepared_transactions = 2000\nmaintenance_work_mem = 256MB\nwal_level = logical\nmax_wal_senders = 64\nmax_wal_size = 1GB\nmin_wal_size = 256MB\nlog_destination = 'csvlog'\nlogging_collector = on\nlog_directory = 'log'\nlog_filename = 'postgresql-%A-%H.log' \nsynchronous_commit = local\nsynchronous_standby_names = '' \n</code></pre>"},{"location":"guide/05-component/#_4","title":"\u5b89\u88c5\u914d\u7f6e\u62d3\u8865\u7ed3\u6784\u8bf4\u660e","text":"\u8282\u70b9\u540d\u79f0 IP \u76ee\u5f55 gtm\u4e3b 172.16.0.29 /data/opentenbase/data/pgxz/gtm gtm\u5907 172.16.0.47 /data/opentenbase/data/pgxz/gtm cn01 172.16.0.29 /data/opentenbase/data/pgxz/cn01 cn02 172.16.0.47 /data/opentenbase/data/pgxz/cn02 dn01\u4e3b 172.16.0.29 /data/opentenbase/data/pgxz/dn01 dn01\u5907 172.16.0.47 /data/opentenbase/data/pgxz/dn01 dn02\u4e3b 172.16.0.47 /data/opentenbase/data/pgxz/dn02 dn02\u5907 172.16.0.29 /data/opentenbase/data/pgxz/dn02"},{"location":"guide/05-component/#gtm","title":"GTM\u4e3b\u7ba1\u7406","text":""},{"location":"guide/05-component/#_5","title":"\u521d\u59cb\u5316","text":"<pre><code>[opentenbase@VM_0_29_centos ~]# mkdir -p /data/opentenbase/data/pgxz\n[opentenbase@VM_0_29_centos ~]# initgtm -Z gtm -D /data/opentenbase/data/pgxz/gtm\n</code></pre>"},{"location":"guide/05-component/#_6","title":"\u53c2\u6570\u914d\u7f6e","text":"<pre><code>#\u914d\u7f6egtm\u8282\u70b9\u540d\u79f0\nnodename = gtm_1 \n\n#\u5141\u8bb8\u670d\u52a1\u76d1\u542c\u8303\u56f4\uff0c*\u5141\u8bb8\u76d1\u542c\u6240\u6709 IP \u5730\u5740  \nlisten_addresses = '*' \n\n#\u76d1\u542c\u7aef\u53e3\u53f7\nport = 21000\n\n#\u505a\u4e3aGTM\u4e3b\u8282\u70b9\u63d0\u4f9b\u670d\u52a1\nstartup = ACT\n</code></pre>"},{"location":"guide/05-component/#_7","title":"\u670d\u52a1\u7ba1\u7406","text":"<ul> <li>\u542f\u52a8\u670d\u52a1</li> </ul> <pre><code>[opentenbase@VM_0_29_centos ~]# gtm_ctl -Z gtm -D /data/opentenbase/data/pgxz/gtm start\n</code></pre> <ul> <li>\u5173\u95ed\u670d\u52a1</li> </ul> <pre><code>[opentenbase@VM_0_29_centos ~]# gtm_ctl -Z gtm -D /data/opentenbase/data/pgxz/gtm stop\n</code></pre> <ul> <li>\u67e5\u8be2\u72b6\u6001</li> </ul> <pre><code>[opentenbase@VM_0_29_centos ~]# gtm_ctl -Z gtm -D /data/opentenbase/data/pgxz/gtm status -H 127.0.0.1 -P 21000\n</code></pre>"},{"location":"guide/05-component/#gtm_1","title":"GTM\u5907\u7ba1\u7406","text":""},{"location":"guide/05-component/#_8","title":"\u521d\u59cb\u5316","text":"<pre><code>[opentenbase@VM_0_47_centos ~]# mkdir -p /data/opentenbase/data/pgxz\n[opentenbase@VM_0_47_centos ~]# initgtm -Z gtm -D /data/opentenbase/data/pgxz/gtm\n</code></pre>"},{"location":"guide/05-component/#_9","title":"\u53c2\u6570\u914d\u7f6e","text":"<pre><code>[opentenbase@VM_0_47_centos ~]# vim /data/opentenbase/data/pgxz/gtm/gtm.conf\n#\u914d\u7f6egtm\u8282\u70b9\u540d\u79f0\nnodename = gtm_1\n\n#\u5141\u8bb8\u670d\u52a1\u76d1\u542c\u8303\u56f4\uff0c*\u5141\u8bb8\u76d1\u542c\u6240\u6709 IP \u5730\u5740\nlisten_addresses = '*' \n\n#\u76d1\u542c\u7aef\u53e3\u53f7\nport = 21000\n\n#\u505a\u4e3aGTM\u5907\u8282\u70b9\u63d0\u4f9b\u8fd0\u884c\nstartup = STANDBY \n\n#\u914d\u7f6eGTM\u4e3b\u8282\u70b9\u4fe1\u606f\nactive_host = '172.16.0.29' \nactive_port = 21000\n</code></pre>"},{"location":"guide/05-component/#_10","title":"\u670d\u52a1\u7ba1\u7406","text":"<ul> <li>\u542f\u52a8\u670d\u52a1</li> </ul> <pre><code>[opentenbase@VM_0_47_centos ~]# gtm_ctl -Z gtm -D /data/opentenbase/data/pgxz/gtm start\n</code></pre> <ul> <li>\u5173\u95ed\u670d\u52a1</li> </ul> <pre><code>[opentenbase@VM_0_47_centos ~]# gtm_ctl -Z gtm -D /data/opentenbase/data/pgxz/gtm stop\n</code></pre> <ul> <li>\u67e5\u8be2\u72b6\u6001</li> </ul> <pre><code>[opentenbase@VM_0_47_centos ~]# gtm_ctl -Z gtm -D /data/opentenbase/data/pgxz/gtm status -H 127.0.0.1 -P 21000\n</code></pre>"},{"location":"guide/05-component/#cn01","title":"cn01\u7ba1\u7406","text":""},{"location":"guide/05-component/#_11","title":"\u521d\u59cb\u5316","text":"<pre><code>[opentenbase@VM_0_29_centos ~]# initdb --locale=zh_CN.UTF-8 -U opentenbase -E utf8 -D /data/opentenbase/data/pgxz/cn01 --nodename=cn01 --nodetype=coordinator --master_gtm_nodename gtm_1 --master_gtm_ip 172.16.0.29 --master_gtm_port 21000\n</code></pre>"},{"location":"guide/05-component/#_12","title":"\u53c2\u6570\u914d\u7f6e","text":"<pre><code>[opentenbase@VM_0_29_centos ~]# vim /data/opentenbase/data/pgxz/cn01/postgresql.conf\n\nport = 15432\npooler_port=15433\ninclude_if_exists ='/data/opentenbase/global/postgresql.conf.user'\n</code></pre> <pre><code>[opentenbase@VM_0_29_centos ~]# vim /data/opentenbase/data/pgxz/cn01/pg_hba.conf\n\nlocal   all             all                    trust \nhost    all             all    127.0.0.1/32    trust\n\nhost    replication    all    172.16.0.29/32    trust \nhost    all            all    172.16.0.29/32    trust \n\nhost    replication    all    172.16.0.47/32    trust \nhost    all            all    172.16.0.47/32    trust\n\nhost    all            all       0.0.0.0/0        md5\n</code></pre>"},{"location":"guide/05-component/#_13","title":"\u670d\u52a1\u7ba1\u7406","text":"<ul> <li>\u542f\u52a8\u670d\u52a1</li> </ul> <pre><code>[opentenbase@VM_0_29_centos ~]# pg_ctl -Z coordinator -D /data/opentenbase/data/pgxz/cn01 start\n</code></pre> <ul> <li>\u5173\u95ed\u670d\u52a1</li> </ul> <pre><code>[opentenbase@VM_0_29_centos ~]# pg_ctl -Z coordinator -D /data/opentenbase/data/pgxz/cn01 stop\n[opentenbase@VM_0_29_centos ~]# pg_ctl -Z coordinator -D /data/opentenbase/data/pgxz/cn01 stop -m f #\u5feb\u901f\u5173\u95ed\n[opentenbase@VM_0_29_centos ~]# pg_ctl -Z coordinator -D /data/opentenbase/data/pgxz/cn01 stop -m i #\u5f3a\u5236\u5173\u95ed\n</code></pre> <ul> <li>\u91cd\u8f7d\u53c2\u6570</li> </ul> <pre><code>[opentenbase@VM_0_29_centos ~]# pg_ctl -D /data/opentenbase/data/pgxz/cn01 reload\n</code></pre> <ul> <li>\u67e5\u8be2\u72b6\u6001</li> </ul> <pre><code>[opentenbase@VM_0_29_centos ~]# pg_ctl -D /data/opentenbase/data/pgxz/cn01 status\n</code></pre>"},{"location":"guide/05-component/#cn02","title":"cn02\u7ba1\u7406","text":""},{"location":"guide/05-component/#_14","title":"\u521d\u59cb\u5316","text":"<pre><code>[opentenbase@VM_0_47_centos ~]# initdb --locale=zh_CN.UTF-8 -U opentenbase -E utf8 -D /data/opentenbase/data/pgxz/cn02 --nodename=cn02 --nodetype=coordinator --master_gtm_nodename gtm_1 --master_gtm_ip 172.16.0.29 --master_gtm_port 21000\n</code></pre>"},{"location":"guide/05-component/#_15","title":"\u53c2\u6570\u914d\u7f6e","text":"<pre><code>[opentenbase@VM_0_47_centos ~]# vim /data/opentenbase/data/pgxz/cn02/postgresql.conf\n\nport = 15432\npooler_port=15433\ninclude_if_exists ='/data/opentenbase/global/postgresql.conf.user'\n\n[opentenbase@VM_0_47_centos ~]# vim /data/opentenbase/data/pgxz/cn02/pg_hba.conf\n\nlocal   all             all                    trust \nhost    all             all    127.0.0.1/32    trust\n\nhost    replication    all    172.16.0.29/32    trust \nhost    all            all    172.16.0.29/32    trust \n\nhost    replication    all    172.16.0.47/32    trust \nhost    all            all    172.16.0.47/32    trust\n\nhost    all            all       0.0.0.0/0        md5\n</code></pre>"},{"location":"guide/05-component/#_16","title":"\u670d\u52a1\u7ba1\u7406","text":"<ul> <li>\u542f\u52a8\u670d\u52a1 </li> </ul> <pre><code>[opentenbase@VM_0_47_centos ~]# pg_ctl -Z coordinator -D /data/opentenbase/data/pgxz/cn02 start\n</code></pre> <ul> <li>\u5173\u95ed\u670d\u52a1</li> </ul> <pre><code>[opentenbase@VM_0_47_centos ~]# pg_ctl -Z coordinator -D /data/opentenbase/data/pgxz/cn02 stop\n[opentenbase@VM_0_47_centos ~]# pg_ctl -Z coordinator -D /data/opentenbase/data/pgxz/cn02 stop -m f #\u5feb\u901f\u5173\u95ed\n[opentenbase@VM_0_47_centos ~]# pg_ctl -Z coordinator -D /data/opentenbase/data/pgxz/cn02 stop -m i #\u5f3a\u5236\u5173\u95ed\n</code></pre> <ul> <li>\u91cd\u8f7d\u53c2\u6570</li> </ul> <pre><code>[opentenbase@VM_0_47_centos ~]# pg_ctl -D /data/opentenbase/data/pgxz/cn02 reload\n</code></pre> <ul> <li>\u67e5\u8be2\u72b6\u6001 </li> </ul> <pre><code>[opentenbase@VM_0_47_centos ~]# pg_ctl -D /data/opentenbase/data/pgxz/cn02 status\n</code></pre>"},{"location":"guide/05-component/#dn01","title":"dn01\u4e3b\u7ba1\u7406","text":""},{"location":"guide/05-component/#_17","title":"\u521d\u59cb\u5316","text":"<pre><code>[opentenbase@VM_0_29_centos ~]# initdb --locale=zh_CN.UTF-8 -U opentenbase -E utf8 -D /data/opentenbase/data/pgxz/dn01 --nodename=dn01 --nodetype=datanode --master_gtm_nodename gtm_1 --master_gtm_ip 172.16.0.29 --master_gtm_port 21000\n</code></pre>"},{"location":"guide/05-component/#_18","title":"\u53c2\u6570\u914d\u7f6e","text":"<pre><code>[opentenbase@VM_0_29_centos ~]# vim /data/opentenbase/data/pgxz/dn01/postgresql.conf\n\nport = 23001\npooler_port=24001\ninclude_if_exists ='/data/opentenbase/global/postgresql.conf.user'\n\n[opentenbase@VM_0_29_centos ~]# vim /data/opentenbase/data/pgxz/dn01/pg_hba.conf\n\nlocal   all             all                    trust \nhost    all             all    127.0.0.1/32    trust\n\nhost    replication    all    172.16.0.29/32    trust \nhost    all            all    172.16.0.29/32    trust \n\nhost    replication    all    172.16.0.47/32    trust \nhost    all            all    172.16.0.47/32    trust \n</code></pre>"},{"location":"guide/05-component/#_19","title":"\u670d\u52a1\u7ba1\u7406","text":"<ul> <li>\u542f\u52a8\u670d\u52a1</li> </ul> <pre><code>[opentenbase@VM_0_29_centos ~]# pg_ctl -Z datanode -D /data/opentenbase/data/pgxz/dn01 start\n</code></pre> <ul> <li>\u5173\u95ed\u670d\u52a1</li> </ul> <pre><code>[opentenbase@VM_0_29_centos ~]# pg_ctl -Z datanode -D /data/opentenbase/data/pgxz/dn01 stop\n[opentenbase@VM_0_29_centos ~]# pg_ctl -Z datanode -D /data/opentenbase/data/pgxz/dn01 stop -m f #\u5feb\u901f\u5173\u95ed\n[opentenbase@VM_0_29_centos ~]# pg_ctl -Z datanode -D /data/opentenbase/data/pgxz/dn01 stop -m i #\u5f3a\u5236\u5173\u95ed\n</code></pre> <ul> <li>\u91cd\u8f7d\u53c2\u6570</li> </ul> <pre><code>[opentenbase@VM_0_29_centos ~]# pg_ctl -D /data/opentenbase/data/pgxz/dn01 reload\n</code></pre> <ul> <li>\u67e5\u8be2\u72b6\u6001</li> </ul> <pre><code>[opentenbase@VM_0_29_centos ~]# pg_ctl -D /data/opentenbase/data/pgxz/dn01 status\n</code></pre>"},{"location":"guide/05-component/#dn02","title":"dn02\u4e3b\u7ba1\u7406","text":""},{"location":"guide/05-component/#_20","title":"\u521d\u59cb\u5316","text":"<pre><code>[opentenbase@VM_0_47_centos ~]# initdb --locale=zh_CN.UTF-8 -U opentenbase -E utf8 -D /data/opentenbase/data/pgxz/dn02 --nodename=dn02 --nodetype=datanode --master_gtm_nodename gtm_1 --master_gtm_ip 172.16.0.29 --master_gtm_port 21000\n</code></pre>"},{"location":"guide/05-component/#_21","title":"\u53c2\u6570\u914d\u7f6e","text":"<pre><code>[opentenbase@VM_0_47_centos ~]# vim /data/opentenbase/data/pgxz/dn02/postgresql.conf\n\nport = 23002\npooler_port=24002\ninclude_if_exists ='/data/opentenbase/global/postgresql.conf.user'\n\n[opentenbase@VM_0_47_centos ~]# vim /data/opentenbase/data/pgxz/dn01/pg_hba.conf\n\nlocal   all             all                    trust \nhost    all             all    127.0.0.1/32    trust\n\nhost    replication    all    172.16.0.29/32    trust \nhost    all            all    172.16.0.29/32    trust \n\nhost    replication    all    172.16.0.47/32    trust \nhost    all            all    172.16.0.47/32    trust \n</code></pre>"},{"location":"guide/05-component/#_22","title":"\u670d\u52a1\u7ba1\u7406","text":"<ul> <li>\u542f\u52a8\u670d\u52a1</li> </ul> <pre><code>[opentenbase@VM_0_47_centos ~]# pg_ctl -Z datanode -D /data/opentenbase/data/pgxz/dn02 start\n</code></pre> <ul> <li>\u5173\u95ed\u670d\u52a1</li> </ul> <pre><code>[opentenbase@VM_0_47_centos ~]# pg_ctl -Z datanode -D /data/opentenbase/data/pgxz/dn02 stop\n[opentenbase@VM_0_47_centos ~]# pg_ctl -Z datanode -D /data/opentenbase/data/pgxz/dn02 stop -m f #\u5feb\u901f\u5173\u95ed\n[opentenbase@VM_0_47_centos ~]# pg_ctl -Z datanode -D /data/opentenbase/data/pgxz/dn02 stop -m i #\u5f3a\u5236\u5173\u95ed\n</code></pre> <ul> <li>\u91cd\u8f7d\u53c2\u6570</li> </ul> <pre><code>[opentenbase@VM_0_47_centos ~]# pg_ctl -D /data/opentenbase/data/pgxz/dn02 reload\n</code></pre> <ul> <li>\u67e5\u8be2\u72b6\u6001</li> </ul> <pre><code>[opentenbase@VM_0_47_centos ~]# pg_ctl -D /data/opentenbase/data/pgxz/dn02 status\n</code></pre>"},{"location":"guide/05-component/#dn01_1","title":"dn01\u5907\u7ba1\u7406","text":""},{"location":"guide/05-component/#_23","title":"\u751f\u6210\u5907\u8282\u70b9","text":"<pre><code>[opentenbase@VM_0_47_centos ~]# pg_basebackup -p 23001 -h 172.16.0.29 -U opentenbase -D /data/opentenbase/data/pgxz/dn01 -X f -P -v\n</code></pre>"},{"location":"guide/05-component/#_24","title":"\u53c2\u6570\u914d\u7f6e","text":"<pre><code>[opentenbase@VM_0_47_centos ~]# vim /data/opentenbase/data/pgxz/dn01/recovery.conf\n\nstandby_mode = on \nprimary_conninfo = 'host = 172.16.0.29 port = 23001 user = opentenbase application_name = s1'\n</code></pre>"},{"location":"guide/05-component/#_25","title":"\u670d\u52a1\u7ba1\u7406","text":"<ul> <li>\u542f\u52a8\u670d\u52a1</li> </ul> <pre><code>[opentenbase@VM_0_47_centos ~]# pg_ctl -Z datanode -D /data/opentenbase/data/pgxz/dn01 start\n</code></pre> <ul> <li>\u5173\u95ed\u670d\u52a1</li> </ul> <pre><code>[opentenbase@VM_0_47_centos ~]# pg_ctl -Z datanode -D /data/opentenbase/data/pgxz/dn01 stop\n[opentenbase@VM_0_47_centos ~]# pg_ctl -Z datanode -D /data/opentenbase/data/pgxz/dn01 stop -m f #\u5feb\u901f\u5173\u95ed\n[opentenbase@VM_0_47_centos ~]# pg_ctl -Z datanode -D /data/opentenbase/data/pgxz/dn01 stop -m i #\u5f3a\u5236\u5173\u95ed\n</code></pre> <ul> <li>\u91cd\u8f7d\u53c2\u6570</li> </ul> <pre><code>[opentenbase@VM_0_47_centos ~]# pg_ctl -D /data/opentenbase/data/pgxz/dn01 reload\n</code></pre> <ul> <li>\u67e5\u8be2\u72b6\u6001</li> </ul> <pre><code>[opentenbase@VM_0_47_centos ~]# pg_ctl -D /data/opentenbase/data/pgxz/dn01 status\n</code></pre>"},{"location":"guide/05-component/#dn02_1","title":"dn02\u5907\u7ba1\u7406","text":""},{"location":"guide/05-component/#_26","title":"\u751f\u6210\u5907\u8282\u70b9","text":"<pre><code>[opentenbase@VM_0_29_centos ~]# pg_basebackup -p 23002 -h 172.16.0.47 -U opentenbase -D /data/opentenbase/data/pgxz/dn02 -X f -P -v\n</code></pre>"},{"location":"guide/05-component/#_27","title":"\u53c2\u6570\u914d\u7f6e","text":"<pre><code>[opentenbase@VM_0_29_centos ~]# vim /data/opentenbase/data/pgxz/dn02/recovery.conf\n\nstandby_mode = on \nprimary_conninfo = 'host = 172.16.0.47 port = 23002 user = opentenbase application_name = s1'\n</code></pre>"},{"location":"guide/05-component/#_28","title":"\u670d\u52a1\u7ba1\u7406","text":"<ul> <li>\u542f\u52a8\u670d\u52a1</li> </ul> <pre><code>[opentenbase@VM_0_29_centos ~]# pg_ctl -Z datanode -D /data/opentenbase/data/pgxz/dn02 start\n</code></pre> <ul> <li>\u5173\u95ed\u670d\u52a1</li> </ul> <pre><code>[opentenbase@VM_0_29_centos ~]# pg_ctl -Z datanode -D /data/opentenbase/data/pgxz/dn02 stop\n[opentenbase@VM_0_29_centos ~]# pg_ctl -Z datanode -D /data/opentenbase/data/pgxz/dn02 stop -m f #\u5feb\u901f\u5173\u95ed\n[opentenbase@VM_0_29_centos ~]# pg_ctl -Z datanode -D /data/opentenbase/data/pgxz/dn02 stop -m i #\u5f3a\u5236\u5173\u95ed\n</code></pre> <ul> <li>\u91cd\u8f7d\u53c2\u6570</li> </ul> <pre><code>[opentenbase@VM_0_29_centos ~]# pg_ctl -D /data/opentenbase/data/pgxz/dn02 reload\n</code></pre> <ul> <li>\u67e5\u8be2\u72b6\u6001</li> </ul> <pre><code>[opentenbase@VM_0_29_centos ~]# pg_ctl -D /data/opentenbase/data/pgxz/dn02 status\n</code></pre>"},{"location":"guide/05-component/#_29","title":"\u8def\u7531\u914d\u7f6e","text":""},{"location":"guide/05-component/#cn01_1","title":"cn01","text":"<pre><code>[opentenbase@VM_0_29_centos ~]# psql -h 172.16.0.29 -p 15432 -d postgres -U opentenbase\npsql (PostgreSQL 10.0 opentenbase V2)\nType \"help\" for help.\n\npostgres=# \nalter node cn01 with (host='172.16.0.29',port=15432);\ncreate node cn02 with (type=coordinator,host='172.16.0.47',port=15432,primary=false,preferred=false);\ncreate node dn01 with (type=datanode,host='172.16.0.29',port=23001,primary=false,preferred=false);\ncreate node dn02 with (type=datanode,host='172.16.0.47',port=23002,primary=false,preferred=false);\nselect pgxc_pool_reload();\n</code></pre>"},{"location":"guide/05-component/#cn02_1","title":"cn02","text":"<pre><code>[opentenbase@VM_0_29_centos ~]# psql -h 172.16.0.47 -p 15432 -d postgres -U opentenbase\npsql (PostgreSQL 10.0 opentenbase V2)\nType \"help\" for help.\n\npostgres=#\nalter node cn02 with (host='172.16.0.47',port=15432);\ncreate node cn01 with (type=coordinator,host='172.16.0.29',port=15432,primary=false,preferred=false);\ncreate node dn01 with (type=datanode,host='172.16.0.29',port=23001,primary=false,preferred=false);\ncreate node dn02 with (type=datanode,host='172.16.0.47',port=23002,primary=false,preferred=false);\nselect pgxc_pool_reload();\n</code></pre>"},{"location":"guide/05-component/#dn01_2","title":"dn01","text":"<pre><code>[opentenbase@VM_0_29_centos ~]# psql -h 172.16.0.29 -p 23001 -d postgres -U opentenbase\npsql (PostgreSQL 10.0 opentenbase V2)\nType \"help\" for help.\n\npostgres=#\nalter node dn01 with (host='172.16.0.29',port=23001);\ncreate node cn01 with (type=coordinator,host='172.16.0.29',port=15432,primary=false,preferred=false);\ncreate node cn02 with (type=coordinator,host='172.16.0.47',port=15432,primary=false,preferred=false);\ncreate node dn02 with (type=datanode,host='172.16.0.47',port=23002,primary=false,preferred=false);\nselect pgxc_pool_reload();\n</code></pre>"},{"location":"guide/05-component/#dn02_2","title":"dn02","text":"<pre><code>[opentenbase@VM_0_29_centos ~]# psql -h 172.16.0.47 -p 23002 -d postgres -U opentenbase\npsql (PostgreSQL 10.0 opentenbase V2)\nType \"help\" for help.\n\npostgres=#\nalter node dn02 with (host='172.16.0.47',port=23001);\ncreate node cn01 with (type=coordinator,host='172.16.0.29',port=15432,primary=false,preferred=false);\ncreate node cn02 with (type=coordinator,host='172.16.0.47',port=15432,primary=false,preferred=false);\ncreate node dn01 with (type=datanode,host='172.16.0.29',port=23001,primary=false,preferred=false);\nselect pgxc_pool_reload();\n</code></pre>"},{"location":"guide/05-component/#_30","title":"\u8def\u7531\u8868\u4fe1\u606f","text":"<p>\u6240\u6709\u8282\u70b9\u7684\u8def\u7531\u4fe1\u606f\u914d\u7f6e\u5b8c\u6210\u540e\u5982\u4e0b\u6240\u793a</p> <pre><code>[opentenbase@VM_0_29_centos ~]# psql -h 172.16.0.29 -p 15432 -d postgres -U opentenbase\n\npostgres=# select * from pgxc_node;\n node_name | node_type | node_port |  node_host  | nodeis_primary | nodeis_preferred |   node_id   | node_cluster_name \n-----------+-----------+-----------+-------------+----------------+------------------+-------------+-------------------\n gtm_1     | G         |     21000 | 172.16.0.29 | t              | f                | -1500995709 | opentenbase_cluster\n cn01      | C         |     15432 | 172.16.0.29 | f              | f                |    53994174 | opentenbase_cluster\n cn02      | C         |     15432 | 172.16.0.47 | f              | f                |  -613255070 | opentenbase_cluster\n dn01      | D         |     23001 | 172.16.0.29 | f              | f                | -1085152094 | opentenbase_cluster\n dn02      | D         |     23002 | 172.16.0.47 | f              | f                |  -506537247 | opentenbase_cluster\n(5 rows)\n</code></pre>"},{"location":"guide/05-component/#group","title":"GROUP\uff08\u5b58\u50a8\u7ec4\uff09\u914d\u7f6e","text":""},{"location":"guide/05-component/#group_1","title":"\u521b\u5efa\u9ed8\u8ba4GROUP","text":"<p>\u521b\u5efa\u9ed8\u8ba4GROUP</p> <pre><code>[opentenbase@VM_0_29_centos ~]# psql -h 172.16.0.29 -p 15432 -d postgres -U opentenbase\npsql (PostgreSQL 10.0 opentenbase V2)\nType \"help\" for help.\n\npostgres=#\ncreate default node group default_group with(dn01, dn02);\ncreate sharding group to group default_group;\nclean sharding;\n</code></pre> <p>\u81f3\u6b64\uff0cOpenTenBase \u5c31\u53ef\u4ee5\u50cf\u5355\u673a\u6570\u636e\u5e93\u4e00\u6837\u4f7f\u7528\u4e86\u3002</p>"},{"location":"guide/05-component/#group_2","title":"\u67e5\u8be2\u5df2\u7ecf\u521b\u5efa\u7684GROUP","text":"<pre><code>[opentenbase@VM_0_29_centos ~]# psql -h 172.16.0.29 -p 15432 -d postgres -U opentenbase\n\nselect * from pgxc_group;\n\n</code></pre>"},{"location":"guide/06-switching/","title":"\u4e3b\u5907\u5207\u6362","text":"<p>\u5728\u5feb\u901f\u5165\u95e8\u6587\u7ae0\u4e2d\u6211\u4eec\u4ecb\u7ecd\u4e86 OpenTenBase \u7684\u67b6\u6784\u3001\u6e90\u7801\u7f16\u8bd1\u5b89\u88c5\u3001\u96c6\u7fa4\u8fd0\u884c\u72b6\u6001\u3001\u542f\u52a8\u505c\u6b62\u7b49\u5185\u5bb9\u3002</p> <p>\u5728\u5e94\u7528\u63a5\u5165\u4e2d\u6211\u4eec\u4ecb\u7ecd\u4e86\u5e94\u7528\u7a0b\u5e8f\u8fde\u63a5 OpenTenBase \u6570\u636e\u5e93\u8fdb\u884c\u5efa\u5e93\u3001\u5efa\u8868\u3001\u6570\u636e\u5bfc\u5165\u3001\u67e5\u8be2\u7b49\u64cd\u4f5c\u3002</p> <p>\u5728\u57fa\u672c\u4f7f\u7528\u4e2d\u6211\u4eec\u4ecb\u7ecd OpenTenBase \u4e2d\u7279\u6709\u7684shard\u8868\u3001\u590d\u5236\u8868\u7684\u521b\u5efa\uff0c\u548c\u57fa\u672c\u7684DML\u64cd\u4f5c\u3002</p> <p>\u5728\u9ad8\u7ea7\u4f7f\u7528\u4e2d\u6211\u4eec\u4ecb\u7ecd OpenTenBase \u7684\u9ad8\u7ea7\u4f7f\u7528\u64cd\u4f5c\u5185\u5bb9\uff0c\u5176\u4e2d\u5305\u542b\u4e86\u5404\u79cd\u7a97\u53e3\u51fd\u6570\u3001Json/Jsonb\u3001\u6e38\u6807\u3001\u4e8b\u52a1\u3001\u9501\u7b49\u7684\u4f7f\u7528\u3002</p> <p>\u5728\u7ec4\u4ef6\u5b89\u88c5\u53ca\u7ba1\u7406\u4e2d\u6211\u4eec\u6df1\u5165\u5230 OpenTenBase \u5404\u79cd\u7ec4\u4ef6\u5185\u90e8\uff0c\u5bf9\u5404\u79cd\u7ec4\u4ef6\u7684\u521d\u59cb\u5316\u3001\u53c2\u6570\u914d\u7f6e\u3001\u542f\u505c\u3001\u8fd0\u884c\u72b6\u6001\u67e5\u770b\u3001\u8def\u7531\u751f\u6548\u914d\u7f6e\u7b49\u8fdb\u884c\u5355\u72ec\u7684\u8be6\u7ec6\u4ecb\u7ecd\u3002</p> <p>\u5728\u672c\u7bc7\u6587\u7ae0\u4e2d\u6211\u4eec\u5c06\u5bf9 OpenTenBase \u5185\u90e8\u5404\u79cd\u7ec4\u4ef6\u7684\u4e3b\u5907\u89d2\u8272\u5982\u4f55\u5207\u6362\u8fdb\u884c\u8be6\u7ec6\u4ecb\u7ecd\u3002</p>"},{"location":"guide/06-switching/#_2","title":"\u73af\u5883\u90e8\u7f72","text":"<ul> <li>\u670d\u52a1\u5668\u6570\u91cf</li> </ul> <p>2\u53f0\uff0cIP\u5206\u522b\u4e3a\uff1a 172.16.0.29\uff0c172.16.0.47</p> <ul> <li>\u786c\u4ef6\u914d\u7f6e</li> </ul> <p>CPU\uff1a4\u6838   \u5185\u5b58\uff1a8G   \u7cfb\u7edf\u76d8\uff1a50G   \u6570\u636e\u76d8\uff1a200G  </p> <ul> <li>\u64cd\u4f5c\u7cfb\u7edf\u8981\u6c42</li> </ul> <p>centos7.3  </p>"},{"location":"guide/06-switching/#os","title":"\u521b\u5efaOS\u7528\u6237","text":"<ul> <li>\u521b\u5efa\u64cd\u4f5c\u7cfb\u7edf\u8fd0\u884c\u7528\u6237  </li> </ul> <pre><code>[root@VM_0_29_centos ~]# adduser -d /data/opentenbase opentenbase\n</code></pre> <ul> <li>\u914d\u7f6e\u64cd\u4f5c\u7cfb\u7edf\u7528\u6237\u5bc6\u7801  </li> </ul> <pre><code>[root@VM_0_29_centos pgxztmp]# passwd opentenbase\n</code></pre> <ul> <li>\u521b\u5efaopentenbase\u5e94\u7528\u7a0b\u5e8f\u8fd0\u884c\u76ee\u5f55  </li> </ul> <pre><code>[root@VM_0_29_centos pgxz]# su opentenbase  \n[opentenbase@VM_0_29_centos install]$ mkdir -p /data/opentenbase/install/pgxz\n</code></pre> <ul> <li>\u521b\u5efaopentenbase\u6570\u636e\u76ee\u5f55  </li> </ul> <pre><code>[root@VM_0_29_centos pgxz]# su opentenbase  \n[opentenbase@VM_0_29_centos install]$ mkdir -p /data/opentenbase/data/pgxz\n</code></pre> <ul> <li>\u4e0a\u4f20pgxz\u5e94\u7528\u7a0b\u5e8f\u5230\u76ee\u5f55/data/opentenbase/install/pgxz\u4e0b\u9762\uff0c\u76ee\u5f55\u7684\u7ed3\u6784\u4e3a  </li> </ul> <pre><code>[opentenbase@VM_0_29_centos pgxz]$ ll /data/opentenbase/install/pgxz\ntotal 4\ndrwxrwxr-x 2 pgxz pgxz 4096 Nov 10 04:33 bin\ndrwxrwxr-x 4 pgxz pgxz  189 Nov 10 04:33 include\ndrwxrwxr-x 4 pgxz pgxz  172 Nov 10 04:33 lib\ndrwxrwxr-x 3 pgxz pgxz   24 Oct  1 14:54 share\n[opentenbase@VM_0_29_centos pgxz]$ \n</code></pre> <ul> <li>\u914d\u7f6epgxz\u7528\u6237\u7684\u73af\u5883\u53d8\u91cf</li> </ul> <pre><code>[opentenbase@VM_0_29_centos ~]$ vim /data/opentenbase/.bashrc \n# .bashrc\n\n# Source global definitions\nif [ -f /etc/bashrc ]; then\n        . /etc/bashrc\nfi\n\nexport OPENTENBASE_HOME=/data/opentenbase/install/pgxz\nexport PATH=$OPENTENBASE_HOME/bin:$PATH\nexport LD_LIBRARY_PATH=$OPENTENBASE_HOME/lib:${LD_LIBRARY_PATH}\n</code></pre>"},{"location":"guide/06-switching/#_3","title":"\u914d\u7f6e\u516c\u5171\u53c2\u6570","text":"<pre><code>[opentenbase@VM_0_29_centos ~]# mkdir -p /data/opentenbase/global/\n[opentenbase@VM_0_29_centos ~]#vim /data/opentenbase/global/postgresql.conf.user\n\nlisten_addresses = '0.0.0.0'\nmax_connections = 500\nmax_pool_size = 65535\nshared_buffers = 1GB                    \nmax_prepared_transactions = 2000\nmaintenance_work_mem = 256MB\nwal_level = logical\nmax_wal_senders = 64\nmax_wal_size = 1GB\nmin_wal_size = 256MB\nlog_destination = 'csvlog'\nlogging_collector = on\nlog_directory = 'log'\nlog_filename = 'postgresql-%A-%H.log' \nsynchronous_commit = local\nsynchronous_standby_names = '' \n</code></pre>"},{"location":"guide/06-switching/#_4","title":"\u5b89\u88c5\u914d\u7f6e\u62d3\u8865\u7ed3\u6784\u8bf4\u660e","text":"\u8282\u70b9\u540d\u79f0 IP \u76ee\u5f55 gtm\u4e3b 172.16.0.29 /data/opentenbase/data/pgxz/gtm gtm\u5907 172.16.0.47 /data/opentenbase/data/pgxz/gtm cn01 172.16.0.29 /data/opentenbase/data/pgxz/cn01 cn02 172.16.0.47 /data/opentenbase/data/pgxz/cn02 dn01\u4e3b 172.16.0.29 /data/opentenbase/data/pgxz/dn01 dn01\u5907 172.16.0.47 /data/opentenbase/data/pgxz/dn01 dn02\u4e3b 172.16.0.47 /data/opentenbase/data/pgxz/dn02 dn02\u5907 172.16.0.29 /data/opentenbase/data/pgxz/dn02"},{"location":"guide/06-switching/#dn","title":"DN\u4e3b\u5907\u5207\u6362","text":""},{"location":"guide/06-switching/#dn01","title":"\u6a21\u4f3cDN01\u4e3b\u6545\u969c","text":"<pre><code>[opentenbase@VM_0_29_centos ~]# pg_ctl -Z datanode -D /data/opentenbase/data/pgxz/dn01 stop -m f  \n</code></pre>"},{"location":"guide/06-switching/#dn01_1","title":"\u5c06DN01\u5907\u63d0\u5347\u4e3a\u4e3b","text":"<pre><code>[opentenbase@VM_0_47_centos ~]# pg_ctl -Z datanode -D /data/opentenbase/data/pgxz/dn01 promote \n</code></pre>"},{"location":"guide/06-switching/#cn01","title":"CN01\u4e3b\u8def\u7531\u53d8\u66f4","text":"<pre><code>[opentenbase@VM_0_29_centos ~]# psql -h 172.16.0.29 -p 15432 -d postgres -U opentenbase\npsql (PostgreSQL 10.0 opentenbase V2)\nType \"help\" for help.\n\npostgres=# alter node dn01 with (host='172.16.0.47',port=23001);\n</code></pre>"},{"location":"guide/06-switching/#cn02","title":"CN02\u4e3b\u8def\u7531\u53d8\u66f4","text":"<pre><code>[opentenbase@VM_0_29_centos ~]# psql -h 172.16.0.47 -p 15432 -d postgres -U opentenbase\npsql (PostgreSQL 10.0 opentenbase V2)\nType \"help\" for help.\n\npostgres=# alter node dn01 with (host='172.16.0.47',port=23001);\n</code></pre>"},{"location":"guide/06-switching/#dn01_2","title":"DN01\u4e3b\u8def\u7531\u53d8\u66f4","text":"<pre><code>[opentenbase@VM_0_29_centos ~]# psql -h 172.16.0.47 -p 23001 -d postgres -U opentenbase\npsql (PostgreSQL 10.0 opentenbase V2)\nType \"help\" for help.\n\npostgres=# alter node dn01 with (host='172.16.0.47',port=23001);\n</code></pre> <p>\u6ce8\u610f\u8fd9\u91cc\u8981\u8fde\u63a5\u5230\u65b0\u4e3b</p>"},{"location":"guide/06-switching/#dn02","title":"DN02\u4e3b\u8def\u7531\u53d8\u66f4","text":"<pre><code>[opentenbase@VM_0_29_centos ~]# psql -h 172.16.0.47 -p 23002 -d postgres -U opentenbase\npsql (PostgreSQL 10.0 opentenbase V2)\nType \"help\" for help.\n\npostgres=# alter node dn01 with (host='172.16.0.47',port=23001);\n</code></pre> <p>\u8bf4\u660e\uff1aCN\u7684\u4e3b\u5907\u5207\u6362\u548cDN\u7c7b\u4f3c\uff0c\u53ea\u662f\u5728\u6a21\u62dfCN\u6545\u969c\u548c\u63d0\u5347\u5907\u8282\u70b9\u65f6\u5c06-Z\u53c2\u6570\u6539\u4e3acoordinator\uff0c\u56e0\u6b64\u4e0d\u5728\u8d58\u8ff0 pg_ctl -Z coordinator -D ${CN\u8282\u70b9\u6570\u636e\u76ee\u5f55} [stop -m f | promote]</p>"},{"location":"guide/06-switching/#gtm","title":"GTM\u4e3b\u5907\u5207\u6362","text":""},{"location":"guide/06-switching/#gtm_1","title":"\u6a21\u4f3cGTM\u4e3b\u6545\u969c","text":"<pre><code>[opentenbase@VM_0_29_centos ~]# gtm_ctl -Z gtm -D /data/opentenbase/data/pgxz/gtm stop \n</code></pre>"},{"location":"guide/06-switching/#gtm_2","title":"\u5c06GTM\u5907\u63d0\u5347\u4e3a\u4e3b","text":"<pre><code>[opentenbase@VM_0_47_centos ~]# gtm_ctl -Z gtm -D /data/opentenbase/data/pgxz/gtm promote \n</code></pre>"},{"location":"guide/06-switching/#cn01_1","title":"CN01\u4e3b\u8def\u7531\u53d8\u66f4","text":"<pre><code>[opentenbase@VM_0_29_centos ~]# psql -h 172.16.0.29 -p 15432 -d postgres -U opentenbase\npsql (PostgreSQL 10.0 opentenbase V2)\nType \"help\" for help.\n\npostgres=# alter gtm node gtm_1 with (host='172.16.0.47',port=21000);\n</code></pre>"},{"location":"guide/06-switching/#cn02_1","title":"CN02\u4e3b\u8def\u7531\u53d8\u66f4","text":"<pre><code>[opentenbase@VM_0_29_centos ~]# psql -h 172.16.0.47 -p 15432 -d postgres -U opentenbase\npsql (PostgreSQL 10.0 opentenbase V2)\nType \"help\" for help.\n\npostgres=# alter gtm node gtm_1 with (host='172.16.0.47',port=21000);\n</code></pre>"},{"location":"guide/06-switching/#dn01_3","title":"DN01\u4e3b\u8def\u7531\u53d8\u66f4","text":"<pre><code>[opentenbase@VM_0_29_centos ~]# psql -h 172.16.0.47 -p 23001 -d postgres -U opentenbase\npsql (PostgreSQL 10.0 opentenbase V2)\nType \"help\" for help.\n\npostgres=# alter gtm node gtm_1 with (host='172.16.0.47',port=21000);\n</code></pre> <p>\u6ce8\u610f\u8fd9\u91cc\u8981\u8fde\u63a5\u5230\u65b0\u4e3b</p>"},{"location":"guide/06-switching/#dn02_1","title":"DN02\u4e3b\u8def\u7531\u53d8\u66f4","text":"<pre><code>[opentenbase@VM_0_29_centos ~]# psql -h 172.16.0.47 -p 23002 -d postgres -U opentenbase\npsql (PostgreSQL 10.0 opentenbase V2)\nType \"help\" for help.\n\npostgres=# alter gtm node gtm_1 with (host='172.16.0.47',port=21000);\n</code></pre>"},{"location":"guide/07-user-rights/","title":"\u7528\u6237\u7ba1\u7406","text":""},{"location":"guide/07-user-rights/#_2","title":"\u521b\u5efa\u7528\u6237","text":""},{"location":"guide/07-user-rights/#_3","title":"\u521b\u5efa\u666e\u901a\u7528\u6237","text":"<p>\u4f7f\u7528\u7ba1\u7406\u5458opentenbase\u8fde\u63a5\u5230\u67d0\u4e2acn\u8282\u70b9\uff0c\u4e0b\u9762\u64cd\u4f5c\u76f8\u540c</p> <pre><code>[opentenbase@VM_0_29_centos ~]$ psql -h 172.16.0.29 -U opentenbase -d postgres -p 15432\npsql (PostgreSQL 10.0 opentenbase V2)\nType \"help\" for help.\n\npostgres=# create role user1 with login password 'user1@123';\nCREATE ROLE\n</code></pre> <p>\u8bf4\u660e\uff1a</p> <ul> <li>\u4e0a\u9762\u521b\u5efa\u4e86\u7528\u6237user1\uff0cwith\u662f\u6307\u5b9a\u8be5\u7528\u6237\u7684\u4e00\u4e9b\u5c5e\u6027</li> <li>login\u6307\u5b9a\u8be5\u7528\u6237\u53ef\u4ee5\u767b\u5f55</li> <li>password  'user1@123' \u6307\u5b9a\u7528\u6237\u7684\u5bc6\u7801 </li> </ul>"},{"location":"guide/07-user-rights/#_4","title":"\u521b\u5efa\u7ba1\u7406\u5458\u7528\u6237","text":"<pre><code>[opentenbase@VM_0_29_centos ~]$ psql -h 172.16.0.29 -U opentenbase -d postgres -p 15432\npsql (Postgr\neSQL 10.0 opentenbase V2)\nType \"help\" for help.\n\npostgres=# create role opentenbaseadmin with login password 'opentenbaseadmin @123' superuser;\nCREATE ROLE\n</code></pre> <p>\u8bf4\u660e\uff1a</p> <ul> <li>with superuser \u6307\u5b9a\u8be5\u7528\u6237\u4e3a\u7ba1\u7406\u5458  </li> </ul>"},{"location":"guide/07-user-rights/#_5","title":"\u66f4\u591a\u7528\u6237\u5c5e\u6027\u914d\u7f6e","text":"<pre><code>[opentenbase@VM_0_29_centos ~]$ psql -h 172.16.0.29 -U opentenbase -d postgres -p 15432\npsql (PostgreSQL 10.0 opentenbase V2)\nType \"help\" for help.\n\npostgres=# create role user1 with login password 'user1@123' createdb createrole replication CONNECTION LIMIT 100 VALID UNTIL '2023-09-30 23:59:59';\nCREATE ROLE\n</code></pre> <p>\u8bf4\u660e\uff1a</p> <ul> <li>createdb \u6307\u5b9a\u8be5\u7528\u6237\u80fd\u521b\u5efa\u6570\u636e\u5e93</li> <li>createrole\u6307\u5b9a\u8be5\u7528\u6237\u80fd\u521b\u5efa\u7528\u6237</li> <li>replication\u6279\u5b9a\u8be5\u7528\u6237\u53ef\u4ee5\u7528\u4e8e\u6570\u636e\u540c\u6b65\u590d\u5236\u914d\u7f6e</li> <li>CONNECTION LIMIT 100\u8868\u793a\u8be5\u7528\u6237\u6700\u5927\u8fde\u63a5\u6570\u4e3a100\uff0c\u6ce8\u610f\uff0copentenbase\u7684dn\u8282\u70b9\u4e4b\u95f4\u4e5f\u4f1a\u4e92\u76f8\u8fde\u63a5\uff0c-1\uff08\u9ed8\u8ba4\u503c\uff09\u8868\u793a\u65e0\u9650\u5236\u3002</li> <li>VALID UNTIL '2023-09-30 23:59:59'\u8868\u793a\u7528\u6237\u5bc6\u7801\u5230\u671f\u65f6\u95f4\u622a\uff0cVALID UNTIL 'infinity'\uff0c\u8ba9\u4e00\u4e2a\u53e3\u4ee4\u6c38\u8fdc\u6709\u6548</li> </ul>"},{"location":"guide/07-user-rights/#_6","title":"\u4fee\u6539\u7528\u6237\u5c5e\u6027","text":""},{"location":"guide/07-user-rights/#_7","title":"\u7981\u6b62\u51c6\u8bb8\u7528\u6237\u767b\u5f55","text":"<pre><code>[opentenbase@VM_0_29_centos ~]$ psql -h 172.16.0.29 -U opentenbase -d postgres -p 15432\npsql (PostgreSQL 10.0 opentenbase V2)\nType \"help\" for help.\n\npostgres=# alter role user1 with nologin ;\nALTER ROLE\n\npostgres=# alter role user1 with login ;\nALTER ROLE\n</code></pre>"},{"location":"guide/07-user-rights/#_8","title":"\u8bbe\u7f6e\u7528\u6237\u4e3a\u7ba1\u7406\u5458\u548c\u975e\u7ba1\u7406\u5458","text":"<pre><code>[opentenbase@VM_0_29_centos ~]$ psql -h 172.16.0.29 -U opentenbase -d postgres -p 15432\npsql (PostgreSQL 10.0 opentenbase V2)\nType \"help\" for help.\n\npostgres=#  alter role user1 with superuser ;\nALTER ROLE\n\npostgres=#  alter role user1 with nosuperuser ;\nALTER ROLE\n</code></pre>"},{"location":"guide/07-user-rights/#_9","title":"\u7528\u6237\u8fde\u63a5\u6570\u9650\u5236","text":"<pre><code>[opentenbase@VM_0_29_centos  ~]$ psql -h 172.16.0.29 -U opentenbase -d postgres -p 15432\npsql (PostgreSQL 10.0 opentenbase V2)\nType \"help\" for help.\n\npostgres=# alter role user1 with CONNECTION LIMIT 100;\nALTER ROLE\n\npostgres=# alter role user1 with CONNECTION LIMIT -1; \nALTER ROLE\n</code></pre> <p>\u8bf4\u660e\uff1a</p> <ul> <li>CONNECTION LIMIT 100\u8868\u793a\u8be5\u7528\u6237\u6700\u5927\u8fde\u63a5\u6570\u4e3a100\uff0c\u6ce8\u610f\uff0copentenbase\u7684dn\u8282\u70b9\u4e4b\u95f4\u4e5f\u4f1a\u4e92\u76f8\u8fde\u63a5\uff0c-1\uff08\u9ed8\u8ba4\u503c\uff09\u8868\u793a\u65e0\u9650\u5236\u3002</li> </ul>"},{"location":"guide/07-user-rights/#_10","title":"\u8bbe\u7f6e\u7528\u6237\u5bc6\u7801\u8fc7\u65f6\u65f6\u95f4\u622a","text":"<pre><code>[opentenbase@VM_0_29_centos ~]$ psql -h 172.16.0.29 -U opentenbase -d postgres -p 15432\npsql (PostgreSQL 10.0 opentenbase V2)\nType \"help\" for help.\n\npostgres=# alter role user1 with VALID UNTIL '2023-09-30 23:59:59';\nALTER ROLE\n\npostgres=# alter role user1 with VALID UNTIL 'infinity'; \nALTER ROLE\n</code></pre> <p>\u8bf4\u660e\uff1a</p> <ul> <li>VALID UNTIL '2023-09-30 23:59:59'\u8868\u793a\u7528\u6237\u5bc6\u7801\u5230\u671f\u65f6\u95f4\u622a\uff0cVALID UNTIL 'infinity'\uff0c\u8ba9\u4e00\u4e2a\u53e3\u4ee4\u6c38\u8fdc\u6709\u6548</li> </ul>"},{"location":"guide/07-user-rights/#_11","title":"\u4fee\u6539\u7528\u6237\u5bc6\u7801","text":"<pre><code>[opentenbase@VM_0_29_centos ~]$ psql -h 172.16.0.29 -U opentenbase -d postgres -p 15432\npsql (PostgreSQL 10.0 opentenbase V2)\nType \"help\" for help.\n\n--\u4fee\u6539\u5bc6\u7801\u65b9\u6cd5\u4e00\npostgres=# role user1 with password 'user1@123' ;\nALTER ROLE\n\n\n--\u4fee\u6539\u5bc6\u7801\u65b9\u6cd5\u4e8c\npostgres=# \\password user1\nEnter new password: \nEnter it again: \npostgres=#  \n</code></pre> <p>\u8fde\u7eed\u8f93\u5165\u4e24\u6b21\u5bc6\u7801\uff0c\u4f7f\u7528\\password \u7528\u6237\u540d\u65b9\u5f0f\u4fee\u6539\u5bc6\u7801\u66f4\u5b89\u5168\uff0c\u56e0\u4e3a\u5bc6\u7801\u4fe1\u606f\u6ca1\u6709\u8bb0\u5f55\u5728log\u65e5\u5fd7\u6587\u4ef6\u4e2d\u3002  </p>"},{"location":"guide/07-user-rights/#_12","title":"\u66f4\u591a\u7684\u7528\u6237\u5c5e\u6027\u914d\u7f6e","text":"<pre><code>[opentenbase@VM_0_29_centos  ~]$ psql -h 172.16.0.29 -U opentenbase -d postgres -p 15432\npsql (PostgreSQL 10.0 opentenbase V2)\nType \"help\" for help.\n\npostgres=# alter role user1 with createdb createrole replication;\nCREATE ROLE\n\npostgres=# alter role user1 with nocreatedb nocreaterole noreplication ;\nCREATE ROLE\n</code></pre> <p>\u8bf4\u660e\uff1a</p> <ul> <li>createdb/nocreatedb \u6307\u5b9a\u8be5\u7528\u6237\u80fd\u5426\u521b\u5efa\u6570\u636e\u5e93</li> <li>createrole/nocreaterole\u6307\u5b9a\u8be5\u7528\u6237\u80fd\u5426\u521b\u5efa\u7528\u6237</li> <li>replication/nocreaterole\u6279\u5b9a\u8be5\u7528\u6237\u662f\u5426\u53ef\u7528\u4e8e\u6570\u636e\u540c\u6b65\u590d\u5236</li> </ul>"},{"location":"guide/07-user-rights/#_13","title":"\u67e5\u8be2\u7528\u6237","text":""},{"location":"guide/07-user-rights/#psql","title":"psql\u5feb\u6377\u547d\u4ee4\u67e5\u8be2","text":"<pre><code>[opentenbase@VM_0_29_centos  ~]$ psql -h 172.16.0.29 -U opentenbase -d postgres -p 15432\npsql (PostgreSQL 10.0 opentenbase V2)\nType \"help\" for help.\n\npostgres=# \\du\n                                      List of roles\n   Role name    |                         Attributes                         | Member of \n----------------+------------------------------------------------------------+-----------\n audit_admin    | No inheritance                                             | {}\n mls_admin      | No inheritance                                             | {}\n opentenbase          | Superuser, Create role, Create DB, Replication, Bypass RLS | {}\n opentenbase_01_admin | Superuser                                                  | {}\n opentenbaseadmin     | Superuser, Create role, Create DB                          | {}\n user1          | Password valid until infinity                              | {}\n</code></pre> <p>\u8bf4\u660e\uff1a</p> <ul> <li>Attributes \u663e\u793a\u4e86\u8be5\u7528\u6237\u7684\u5c5e\u6027  </li> </ul>"},{"location":"guide/07-user-rights/#_14","title":"\u67e5\u8be2\u7528\u6237\u7cfb\u7edf\u8868","text":"<pre><code>[opentenbase@VM_0_29_centos  ~]$ psql -h 172.16.0.29 -U opentenbase -d postgres -p 15432\npsql (PostgreSQL 10.0 opentenbase V2)\nType \"help\" for help.\n\npostgres=# select * from pg_roles where rolname='opentenbase';\n-[ RECORD 1 ]--+---------\nrolname        | opentenbase\nrolsuper       | t\nrolinherit     | t\nrolcreaterole  | t\nrolcreatedb    | t\nrolcanlogin    | t\nrolreplication | t\nrolconnlimit   | -1\nrolpassword    | ********\nrolvaliduntil  | \nrolbypassrls   | t\nrolconfig      | \noid            | 10\n</code></pre>"},{"location":"guide/07-user-rights/#_15","title":"\u5220\u9664\u7528\u6237","text":"<pre><code>[opentenbase@VM_0_29_centos  ~]$ psql -h 172.16.0.29 -U opentenbase -d postgres -p 15432\npsql (PostgreSQL 10.0 opentenbase V2)\nType \"help\" for help.\n\npostgres=# drop role user1 ;\nDROP ROLE\n</code></pre> <p>\u8bf4\u660e\uff1a</p> <ul> <li>\u5982\u679c\u8be5\u7528\u6237\u5df2\u7ecf\u6709\u8868\u5b58\u5728\u5c31\u65e0\u6cd5\u5220\u9664\uff0c\u5982\u679c\u4e0d\u51c6\u8bb8\u8be5\u7528\u6237\u4f7f\u7528\uff0c\u53ef\u4ee5\u4f7f\u7528nologin\u7981\u7528\u7528\u6237\u767b\u5f55\u3002</li> </ul>"},{"location":"guide/07-user-rights/#_16","title":"\u7528\u6237\u4e0e\u8d44\u6e90\u641c\u7d22\u8def\u5f84\u7ba1\u7406","text":"<p>opentenbase\u9ed8\u8ba4\u7684\u8d44\u6e90\u641c\u7d22\u8def\u5f84\u4e3a</p> <pre><code>postgres=# show search_path ;\n   search_path   \n-----------------\n \"$user\", public\n(1 row)\n</code></pre> <p>\u5373\u8bbf\u95ee\u7684\u8d44\u6e90\uff08\u5982\u8868\uff0c\u89c6\u56fe\u3002\u3002\u3002\uff09\u7b2c\u4e00\u641c\u7d22\u7684\u6a21\u5f0f\u5c31\u662f\u81ea\u5df1\u7528\u6237\u540d\u76f8\u540c\u7684\u6a21\u5f0f\uff0c\u7b2c\u4e8c\u4e2a\u624d\u662fpublic\u6a21\u5f0f</p>"},{"location":"guide/07-user-rights/#_17","title":"\u914d\u7f6e\u7528\u6237\u7684\u9ed8\u8ba4\u641c\u7d22\u6a21\u5f0f","text":"<pre><code>[opentenbase@VM_0_29_centos ~]$ psql -h 172.16.0.29 -U opentenbase -d postgres -p 15432\npsql (PostgreSQL 10.0 opentenbase V2)\nType \"help\" for help.\n\npostgres=# alter role user1 set search_path to opentenbase,\"$user\", public;\nALTER ROLE\n\npostgres=#  alter role user1 set search_path to DEFAULT ;\nALTER ROLE\npostgres=# \n\n</code></pre> <p>\u8bf4\u660e\uff1a  </p> <ul> <li>\u914d\u7f6e\u7528\u6237user1\u7684\u641c\u7d22\u8def\u5f84\u4e3aopentenbase,user1,public </li> <li>to DEFAULT\u914d\u7f6e\u7528\u6237user1\u7684\u641c\u7d22\u6a21\u5f0f\u4e3a\u7cfb\u7edf\u9ed8\u8ba4\u503c </li> </ul>"},{"location":"guide/07-user-rights/#_18","title":"\u7ed9\u7528\u6237\u6dfb\u52a0\u4e00\u4e2a\u6a21\u5f0f","text":"<pre><code>[opentenbase@VM_0_29_centos ~]$ psql -h 172.16.0.29 -U opentenbase -d postgres -p 15432\npsql (PostgreSQL 10.0 opentenbase V2)\nType \"help\" for help.\n\npostgres=# create schema user1 AUTHORIZATION user1;\n\n</code></pre> <p>\u8bf4\u660e\uff1a  </p> <ul> <li>AUTHORIZATION user1\u6307\u5b9a\u6a21\u5f0fuser1\u7684\u6240\u5c5e\u7528\u6237\u4e3ausers</li> </ul>"},{"location":"guide/07-user-rights/#_19","title":"\u6743\u9650\u7ba1\u7406","text":""},{"location":"guide/07-user-rights/#_20","title":"\u6a21\u5f0f\u6743\u9650\u7ba1\u7406","text":""},{"location":"guide/07-user-rights/#_21","title":"\u6388\u6743\u7528\u6237\u53ef\u4ee5\u8bbf\u95ee\u67d0\u4e2a\u6a21\u5f0f","text":"<pre><code>[opentenbase@VM_0_29_centos ~]$ psql -h 172.16.0.29 -U opentenbase -d postgres -p 15432\npsql (PostgreSQL 10.0 opentenbase V2)\nType \"help\" for help.\n\npostgres=# grant usage on SCHEMA mysch to user1;\nGRANT\npostgres=#\n</code></pre> <p>\u8bf4\u660e\uff1a</p> <ul> <li>\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u666e\u901a\u7528\u6237\u662f\u65e0\u6cd5\u8bbf\u95ee\u6ca1\u6388\u6743\u7684schema\uff0c\u6240\u4ee5\u8981\u6388\u6743\u7528\u6237\u8bbf\u95ee\u67d0\u4e2a\u8868\u7684\u8bbf\u95ee\u6743\u9650\uff0c\u5219\u9700\u8981\u5c06\u8868\u6240\u5728\u7684schema\u4f7f\u7528\u6743\u5206\u914d\u7ed9\u7528\u6237\u5148\u3002</li> <li>\u5982\u679c\u6a21\u5f0f\u8bbf\u95ee\u65e0\u63a7\u6743\uff0c\u5219\u63d0\u793a ERROR:  permission denied for schema mysch  </li> </ul>"},{"location":"guide/07-user-rights/#_22","title":"\u6536\u56de\u7528\u6237\u8bbf\u95ee\u67d0\u4e2a\u6a21\u5f0f\u8981\u6743\u9650","text":"<pre><code>[opentenbase@VM_0_29_centos ~]$ psql -h 172.16.0.29 -U opentenbase -d postgres -p 15432\npsql (PostgreSQL 10.0 opentenbase V2)\nType \"help\" for help.\n\npostgres=# revoke usage on SCHEMA mysch from user1;\nREVOKE\n</code></pre>"},{"location":"guide/07-user-rights/#_23","title":"\u4fee\u6539\u6a21\u5f0f\u6240\u5c5e\u7528\u6237","text":"<pre><code>[opentenbase@VM_0_29_centos ~]$ psql -h 172.16.0.29 -U opentenbase -d postgres -p 15432\npsql (PostgreSQL 10.0 opentenbase V2)\nType \"help\" for help.\n\npostgres=# alter schema mysch owner to user1;\nALTER SCHEMA\n</code></pre>"},{"location":"guide/07-user-rights/#_24","title":"\u8868\u6743\u9650\u7ba1\u7406","text":""},{"location":"guide/07-user-rights/#_25","title":"\u6388\u6743\u7528\u6237\u53ef\u4ee5\u589e\u5220\u6539\u67e5\u67d0\u4e2a\u8868\u8bb0\u5f55","text":"<pre><code>[opentenbase@VM_0_29_centos ~]$ psql -h 172.16.0.29 -U opentenbase -d postgres -p 15432\npsql (PostgreSQL 10.0 opentenbase V2)\nType \"help\" for help.\n\npostgres=# grant ALL on mysch.t2 to user1;\nGRANT\n\npostgres=# grant SELECT on mysch.t2 to user1;\nGRANT\npostgres=# \n</code></pre> <p>\u8bf4\u660e\uff1a</p> <ul> <li>\u589e\uff0c\u5220\uff0c\u6539\uff0c\u67e5\u5206\u522b\u5bf9\u5e94INSERT/DELETE/UPDATE/SELECT\u3002</li> <li>\u5982\u679c\u9700\u8981\u5168\u90e8\u6743\u9650\uff0c\u5219\u53ef\u4ee5\u8fd9\u6837\u5199\u6210all</li> </ul>"},{"location":"guide/07-user-rights/#_26","title":"\u79fb\u9664\u7528\u6237\u7684\u8bbf\u95ee\u6743\u9650","text":"<pre><code>[opentenbase@VM_0_29_centos ~]$ psql -h 172.16.0.29 -U opentenbase -d postgres -p 15432\npsql (PostgreSQL 10.0 opentenbase V2)\nType \"help\" for help.\n\npostgres=# revoke ALL on mysch.t2 from user1; \nREVOKE\n\npostgres=# revoke select on mysch.t2 from user1;   \nREVOKE\n</code></pre>"},{"location":"guide/07-user-rights/#_27","title":"\u5e26\u5e8f\u5217\u7684\u8868\u5e8f\u5217\u4e5f\u8981\u6388\u6743","text":"<pre><code>[opentenbase@VM_0_29_centos ~]$ psql -h 172.16.0.29 -U opentenbase -d postgres -p 15432\npsql (PostgreSQL 10.0 opentenbase V2)\nType \"help\" for help.\n\npostgres=# create table mysch.t3(f1 serial,f2 int);\nCREATE TABLE\npostgres=# \\d+  mysch.t3\n                                                   Table \"mysch.t3\"\n Column |  Type   | Collation | Nullable |               Default                | Storage | Stats target | Description \n--------+---------+-----------+----------+--------------------------------------+---------+--------------+-------------\n f1     | integer |           | not null | nextval('mysch.t3_f1_seq'::regclass) | plain   |              | \n f2     | integer |           |          |                                      | plain   |              | \nDistribute By: SHARD(f1)\nLocation Nodes: ALL DATANODES\n\npostgres=# \n\n-- \u6388\u6743\u5fc5\u9700\u8fd9\u6837\npostgres=# grant all on mysch.t3 to user1 ;\nGRANT\n\npostgres=# grant all on SEQUENCE mysch.t3_f1_seq to user1;             \nGRANT\n\n</code></pre> <p>\u8bf4\u660e\uff1a</p> <ul> <li>\u5982\u679c\u6ca1\u6709\u6388\u6743\uff0c\u4f1a\u63d0\u793a\u65e0\u5e8f\u5217\u8bbf\u95ee\u6743\u9650permission denied for sequence t3_f1_seq\u3002</li> </ul>"},{"location":"guide/07-user-rights/#_28","title":"\u5c06\u67d0\u4e2a\u6a21\u5f0f\u4e0b\u6240\u6709\u8868\u8bbf\u95ee\u6743\u9650\u5206\u914d\u7ed9\u67d0\u4e2a\u7528\u6237","text":"<pre><code>[opentenbase@VM_0_29_centos ~]$ psql -h 172.16.0.29 -U opentenbase -d postgres -p 15432\npsql (PostgreSQL 10.0 opentenbase V2)\nType \"help\" for help.\n\npostgres=#  grant ALL ON ALL TABLES IN SCHEMA  mysch  TO user1;\nGRANT\n</code></pre>"},{"location":"guide/07-user-rights/#_29","title":"\u53d6\u6d88\u67d0\u4e2a\u6a21\u5f0f\u4e0b\u6240\u6709\u8868\u8bbf\u95ee\u6743\u9650","text":"<pre><code>[opentenbase@VM_0_29_centos ~]$ psql -h 172.16.0.29 -U opentenbase -d postgres -p 15432\npsql (PostgreSQL 10.0 opentenbase V2)\nType \"help\" for help.\n\npostgres=# revoke ALL ON ALL TABLES IN SCHEMA  mysch  FROM user1;       \nREVOKE\n</code></pre>"},{"location":"guide/07-user-rights/#_30","title":"\u7ed3\u8bed","text":"<p>OpenTenBase \u662f\u4f01\u4e1a\u7ea7\u5206\u5e03\u5f0fHTAP\u6570\u636e\u5e93\u7ba1\u7406\u7cfb\u7edf\u3002\u901a\u8fc7\u5355\u4e00\u6570\u636e\u5e93\u96c6\u7fa4\u540c\u65f6\u4e3a\u5ba2\u6237\u63d0\u4f9b\u9ad8\u4e00\u81f4\u6027\u7684\u5206\u5e03\u5f0f\u6570\u636e\u5e93\u670d\u52a1\u548c\u9ad8\u6027\u80fd\u7684\u6570\u636e\u4ed3\u5e93\u670d\u52a1\uff0c\u5f62\u6210\u4e00\u5957\u878d\u5408\u5b8c\u6574\u7684\u4f01\u4e1a\u7ea7\u89e3\u51b3\u65b9\u6848\u3002\u5927\u5bb6\u5728\u6570\u636e\u5e93\u9886\u57df\u9047\u5230\u76f8\u5173\u95ee\u9898\u65f6\uff0c\u6b22\u8fce\u968f\u65f6\u7559\u8a00\u6211\u4eec\u3002</p>"},{"location":"guide/08-data-dump-restore/","title":"\u6570\u636e\u5bfc\u5165\u5bfc\u51fa","text":""},{"location":"guide/08-data-dump-restore/#pg_dump","title":"pg_dump\u6570\u636e\u5bfc\u51fa\u5de5\u5177","text":""},{"location":"guide/08-data-dump-restore/#pg_dump_1","title":"pg_dump\u4ecb\u7ecd","text":"<p>pg_dump\u662f\u7528\u4e8e\u5907\u4efd OpenTenBase \u5355\u4e2a\u6570\u636e\u5e93\u7684\u5de5\u5177\u3002\u5373\u4f7f\u6570\u636e\u5e93\u6b63\u5728\u88ab\u5e76\u53d1\u4f7f\u7528\uff0c\u5b83\u4e5f\u80fd\u521b\u5efa\u4e00\u81f4\u7684\u5907\u4efd\u3002pg_dump\u4e0d\u963b\u585e\u5176\u4ed6\u7528\u6237\u8bbf\u95ee\u6570\u636e\u5e93\uff08\u8bfb\u53d6\u6216\u5199\u5165\uff09\u3002</p> <p>\u5907\u4efd\u7684\u6570\u636e\u53ef\u4ee5\u662f\u811a\u672c\u6216\u5f52\u6863\u6587\u4ef6\u683c\u5f0f\u3002\u811a\u672c\u5185\u5bb9\u5305\u542b SQL \u547d\u4ee4\u7684\u7eaf\u6587\u672c\u6570\u636e\uff0c\u5b83\u4eec\u53ef\u4ee5\u7528\u6765\u91cd\u5efa\u6570\u636e\u5e93\u5230\u5b83\u88ab\u5907\u4efd\u65f6\u7684\u72b6\u6001\u3002\u6062\u590d\u4e00\u4e2a\u8fd9\u6837\u7684\u811a\u672c\uff0c\u9700\u8981\u4f7f\u7528psql\u5ba2\u6237\u7aef\u5de5\u5177\u3002\u811a\u672c\u6587\u4ef6\u8fd8\u53ef\u4ee5\u88ab\u7528\u6765\u5728\u5176\u4ed6\u673a\u5668\u4e0a\u91cd\u6784\u6570\u636e\u5e93\u3002\u5728\u7ecf\u8fc7\u4e00\u4e9b\u4fee\u6539\u540e\uff0c\u8fd8\u53ef\u4ee5\u5728\u5176\u4ed6 SQL \u6570\u636e\u5e93\u4ea7\u54c1\u4e0a\u91cd\u6784\u6570\u636e\u5e93\u3002\u53e6\u4e00\u79cd\u53ef\u9009\u7684\u5f52\u6863\u6587\u4ef6\u683c\u5f0f\u5fc5\u987b\u4e0epg_restore\u914d\u5408\u4f7f\u7528\u6765\u91cd\u5efa\u6570\u636e\u5e93\u3002pg_dump\u63d0\u4f9b\u4e86\u4e00\u79cd\u7075\u6d3b\u7684\u5f52\u6863\u548c\u4f20\u8f93\u673a\u5236\u3002pg_dump\u53ef\u4ee5\u88ab\u7528\u6765\u5907\u4efd\u6574\u4e2a\u6570\u636e\u5e93\uff0c\u7136\u540epg_restore\u53ef\u4ee5\u88ab\u7528\u6765\u68c0\u67e5\u5f52\u6863\u5e76/\u6216\u9009\u62e9\u6570\u636e\u5e93\u7684\u54ea\u4e9b\u90e8\u5206\u8981\u88ab\u6062\u590d\u3002pg_restore\u652f\u6301\u5e76\u884c\u6062\u590d\u5e76\u4e14\u9ed8\u8ba4\u662f\u538b\u7f29\u7684\u3002  </p>"},{"location":"guide/08-data-dump-restore/#_2","title":"\u8fde\u63a5\u6570\u636e\u5e93\u53c2\u6570\u4ecb\u7ecd","text":"<p>-d dbname --dbname=dbname \u6307\u5b9a\u8981\u8fde\u63a5\u5230\u7684\u6570\u636e\u5e93\u540d\uff0c\u4e0d\u6307\u5b9a\u8be5\u53c2\u6570\u65f6\u9ed8\u8ba4\u662f\u4ecePGDATABASE\u73af\u5883\u53d8\u91cf\u4e2d\u53d6\u5f97\uff08\u5982\u679c\u88ab\u8bbe\u7f6e\uff09\u3002   </p> <p>-h host --host=host \u6307\u5b9a\u8981\u8fde\u63a5\u670d\u52a1\u5668\u673a\u5668\u7684\u4e3b\u673a\u540d\u6216\u8005ip\u5730\u5740\u3002\u4e0d\u6307\u5b9a\u8be5\u53c2\u6570\u65f6\u9ed8\u8ba4\u662f\u4ecePGHOST\u73af\u5883\u53d8\u91cf\u4e2d\u53d6\u5f97\uff08\u5982\u679c\u88ab\u8bbe\u7f6e\uff09\u3002   </p> <p>-p port --port=port \u6307\u5b9a\u8981\u8fde\u63a5\u670d\u52a1\u5668\u76d1\u542c\u7684 TCP \u7aef\u53e3\uff0c\u4e0d\u6307\u5b9a\u8be5\u53c2\u6570\u65f6\u9ed8\u8ba4\u662f\u4ecePGPORT\u73af\u5883\u53d8\u91cf\u4e2d\uff08\u5982\u679c\u88ab\u8bbe\u7f6e\uff09\uff0c\u5426\u5219\u4f7f\u7528\u7f16\u8bd1\u5728\u7a0b\u5e8f\u4e2d\u7684\u9ed8\u8ba4\u503c\u3002   </p> <p>-U username --username=username \u6307\u5b9a\u8981\u8fde\u63a5\u670d\u52a1\u7684\u7528\u6237\u540d\uff0c\u4e0d\u6307\u5b9a\u8be5\u53c2\u6570\u65f6\u9ed8\u8ba4\u662f\u4ecePGUSER\u73af\u5883\u53d8\u91cf\u4e2d\uff08\u5982\u679c\u88ab\u8bbe\u7f6e\uff09\uff0c\u5426\u5219\u4f7f\u7528\u5f53\u524d\u64cd\u4f5c\u7cfb\u7edf\u7528\u6237\u540d\u505a\u4e3a\u9ed8\u8ba4\u503c\u3002   </p> <p>-w --no-password \u4ece\u4e0d\u53d1\u51fa\u4e00\u4e2a\u53e3\u4ee4\u63d0\u793a\u3002\u5982\u679c\u670d\u52a1\u5668\u8981\u6c42\u53e3\u4ee4\u8ba4\u8bc1\u5e76\u4e14\u6ca1\u6709\u5176\u4ed6\u65b9\u5f0f\u63d0\u4f9b\u53e3\u4ee4\uff08\u4f8b\u5982\u4e00\u4e2a.pgpass\u6587\u4ef6\uff09\uff0c\u90a3\u4e48\u8fde\u63a5\u5c1d\u8bd5\u5c06\u5931\u8d25\u3002\u8fd9\u4e2a\u9009\u9879\u5bf9\u4e8e\u6279\u5904\u7406\u4efb\u52a1\u548c\u811a\u672c\u6709\u7528\uff0c\u56e0\u4e3a\u5728\u5176\u4e2d\u6ca1\u6709\u4e00\u4e2a\u7528\u6237\u6765\u8f93\u5165\u53e3\u4ee4\u3002   </p> <p>-W --password \u5f3a\u5236pg_dump\u5728\u8fde\u63a5\u5230\u4e00\u4e2a\u6570\u636e\u5e93\u4e4b\u524d\u63d0\u793a\u8981\u6c42\u4e00\u4e2a\u53e3\u4ee4\u3002  </p>"},{"location":"guide/08-data-dump-restore/#_3","title":"\u4f7f\u7528\u4ecb\u7ecd","text":""},{"location":"guide/08-data-dump-restore/#_4","title":"\u6574\u5e93\u5907\u4efd","text":"<ul> <li>\u5907\u4efd\u6210\u6587\u672c\u683c\u5f0f</li> </ul> <pre><code>pg_dump -h 127.0.0.1 -U opentenbase -d postgres -p 15432 &gt;/data/opentenbase/opentenbase.sql\n</code></pre> <ul> <li>\u5907\u4efd\u6210\u5f52\u6863\u683c\u5f0f</li> </ul> <pre><code>pg_dump -h 127.0.0.1 -U opentenbase -d postgres -p 15432 -Fc&gt;/data/opentenbase/opentenbase.sql  \n</code></pre>"},{"location":"guide/08-data-dump-restore/#_5","title":"\u53ea\u5907\u4efd\u6307\u5b9a\u6a21\u5f0f\u4e0b\u7684\u5bf9\u8c61","text":"<p>\u5907\u4efdopentenbase\u6a21\u5f0f\u4e0b\u7684\u5bf9\u8c61  </p> <pre><code>pg_dump -h 127.0.0.1 -U opentenbase -d postgres -p 15432 -n opentenbase&gt;/data/opentenbase/opentenbase.sql\n</code></pre> <p>\u5907\u4efdopentenbase\u548cpgxz\u6a21\u5f0f\u4e0b\u7684\u5bf9\u8c61\uff0c\u591a\u4e2a\u6a21\u5f0f\u4f7f\u7528\u591a\u7ec4-n  </p> <pre><code>pg_dump -h 127.0.0.1 -U opentenbase -d postgres -p 15432 -n opentenbase -n pgxz&gt;/data/opentenbase/opentenbase.sql\n</code></pre>"},{"location":"guide/08-data-dump-restore/#_6","title":"\u4e0d\u5907\u4efd\u6307\u5b9a\u6a21\u5f0f\u4e0b\u7684\u5bf9\u8c61","text":"<p>\u4e0d\u5907\u4efdopentenbase\u6a21\u5f0f\u4e0b\u7684\u5bf9\u8c61</p> <pre><code>pg_dump -h 127.0.0.1 -U opentenbase -d postgres -p 15432 -N opentenbase&gt;/data/opentenbase/opentenbase.sql\n</code></pre> <p>\u4e0d\u5907\u4efdopentenbase\u548cpgxz\u6a21\u5f0f\u4e0b\u7684\u5bf9\u8c61\uff0c\u591a\u4e2a\u6a21\u5f0f\u4f7f\u7528\u591a\u7ec4-N  </p> <pre><code>pg_dump -h 127.0.0.1 -U opentenbase -d postgres -p 15432 -N opentenbase -N pgxz&gt;/data/opentenbase/opentenbase.sql\n</code></pre>"},{"location":"guide/08-data-dump-restore/#_7","title":"\u53ea\u5907\u4efd\u67d0\u4e9b\u6570\u636e\u8868","text":"<p>\u5907\u4efd\u6570\u636e\u8868opentenbase.t</p> <pre><code>pg_dump -h 127.0.0.1 -U opentenbase -d postgres -p 15432 -t 'opentenbase.t' &gt;/data/opentenbase/opentenbase.sql\n</code></pre> <p>\u5907\u4efd\u6570\u636e\u8868opentenbase.t\uff0cpgxz.t  </p> <pre><code>pg_dump -h 127.0.0.1 -U opentenbase -d postgres -p 15432 -t 'opentenbase.t' -t 'pgxz.t1'&gt;/data/opentenbase/opentenbase.sql\n</code></pre> <p>\u5907\u4efd\u6a21\u5f0fopentenbase\u4e0b\u6240\u6709t\u5f00\u5934\u7684\u6570\u636e\u8868</p> <pre><code>pg_dump -h 127.0.0.1 -U opentenbase -d postgres -p 15432 -t 'opentenbase.t*' &gt;/data/opentenbase/opentenbase.sql\n</code></pre>"},{"location":"guide/08-data-dump-restore/#_8","title":"\u4e0d\u5907\u4efd\u67d0\u4e9b\u6570\u636e\u8868","text":"<p>\u4e0d\u5907\u4efd\u6570\u636e\u8868opentenbase.t  </p> <pre><code>pg_dump -h 127.0.0.1 -U opentenbase -d postgres -p 15432 -T 'opentenbase.t' &gt;/data/opentenbase/opentenbase.sql\n</code></pre> <p>\u4e0d\u5907\u4efd\u6570\u636e\u8868opentenbase.t\uff0cpgxz.t1</p> <pre><code>pg_dump -h 127.0.0.1 -U opentenbase -d postgres -p 15432 -T 'opentenbase.t' -T 'pgxz.t1'&gt;/data/opentenbase/opentenbase.sql\n</code></pre> <p>\u4e0d\u5907\u4efd\u6a21\u5f0fopentenbase\u4e0b\u6240\u6709t\u5f00\u5934\u7684\u6570\u636e\u8868</p> <pre><code>pg_dump -h 127.0.0.1 -U opentenbase -d postgres -p 15432 -T 'opentenbase.t*' &gt;/data/opentenbase/opentenbase.sql\n</code></pre>"},{"location":"guide/08-data-dump-restore/#_9","title":"\u53ea\u5907\u4efd\u51fa\u5bf9\u8c61\u5b9a\u4e49","text":"<pre><code>pg_dump -h 127.0.0.1 -U opentenbase -d postgres -p 15432 -s &gt;/data/opentenbase/opentenbase.sql\n</code></pre>"},{"location":"guide/08-data-dump-restore/#_10","title":"\u53ea\u5907\u4efd\u51fa\u6570\u636e","text":"<pre><code>pg_dump -h 127.0.0.1 -U opentenbase -d postgres -p 15432 -a &gt;/data/opentenbase/opentenbase.sql\n</code></pre>"},{"location":"guide/08-data-dump-restore/#insert-valuesxxx","title":"\u5907\u4efd\u51fa\u7684\u6570\u636e\u683c\u5f0f\u4e3ainsert values(xxx)","text":"<pre><code>pg_dump -h 127.0.0.1 -U opentenbase -d postgres -p 15432 --inserts &gt;/data/opentenbase/opentenbase.sql\n</code></pre>"},{"location":"guide/08-data-dump-restore/#insertxxx-valuesxxx","title":"\u5907\u4efd\u51fa\u7684\u6570\u636e\u683c\u5f0f\u4e3ainsert(xxx) values(xxx)","text":"<pre><code>pg_dump -h 127.0.0.1 -U opentenbase -d postgres -p 15432 --column-inserts &gt;/data/opentenbase/opentenbase.sql\n</code></pre>"},{"location":"guide/08-data-dump-restore/#group","title":"\u5907\u4efd\u5e26group\u4fe1\u606f","text":"<pre><code>pg_dump -h 127.0.0.1 -U opentenbase -d postgres -p 15432 --include-nodes &gt;/data/opentenbase/opentenbase.sql\n</code></pre>"},{"location":"guide/08-data-dump-restore/#_11","title":"\u4e0d\u5907\u4efd\u5e26\u975e\u65e5\u5fd7\u8868\u6570\u636e","text":"<pre><code>pg_dump -h 127.0.0.1 -U opentenbase -d postgres -p 15432 --no-unlogged-table-data &gt;/data/opentenbase/opentenbase.sql\n</code></pre>"},{"location":"guide/08-data-dump-restore/#pg_dumpall","title":"pg_dumpall\u6570\u636e\u5bfc\u51fa\u5de5\u5177","text":""},{"location":"guide/08-data-dump-restore/#pg_dumpall_1","title":"pg_dumpall\u4ecb\u7ecd","text":"<p>pg_dumpall\u662f\u7528\u4e8e\u5907\u4efd OpenTenBase \u6240\u6709\u6570\u636e\u5e93\u7684\u5de5\u5177\uff0c\u6240\u4ee5\u4f7f\u7528pg_dumpall\u65f6\u4e0d\u80fd\u6307\u5b9a\u6570\u636e\u5e93\u3002\u5373\u4f7f\u6570\u636e\u5e93\u6b63\u5728\u88ab\u5e76\u53d1\u4f7f\u7528\uff0c\u5b83\u4e5f\u80fd\u521b\u5efa\u4e00\u81f4\u7684\u5907\u4efd\u3002pg_dumpall\u4e0d\u963b\u585e\u5176\u4ed6\u7528\u6237\u8bbf\u95ee\u6570\u636e\u5e93\uff08\u8bfb\u53d6\u6216\u5199\u5165\uff09\u3002\u4e0epg_dump\u4e0d\u540c\u7684\u5730\u65b9\u662fpg_dumpall\u53ef\u4ee5\u7528\u4e8e\u5907\u4efd OpenTenBase \u5168\u5c40\u5bf9\u8c61\uff0c\u5982\u7528\u6237\u548c\u8868\u7a7a\u95f4\u5b9a\u4e49\u3002pg_dumpall\u5907\u4efd\u65f6\u65e0\u6cd5\u6307\u5b9a\u5907\u4efd\u6570\u636e\u7684\u683c\u5f0f\uff0c\u5373\u65e0\u6cd5\u4f7f\u7528-Fc\u8fd9\u6837\u7684\u53c2\u6570\u3002</p>"},{"location":"guide/08-data-dump-restore/#_12","title":"\u8fde\u63a5\u6570\u636e\u5e93\u53c2\u6570\u4ecb\u7ecd","text":"<p>-h host --host=host \u6307\u5b9a\u8981\u8fde\u63a5\u670d\u52a1\u5668\u673a\u5668\u7684\u4e3b\u673a\u540d\u6216\u8005ip\u5730\u5740\u3002\u4e0d\u6307\u5b9a\u8be5\u53c2\u6570\u65f6\u9ed8\u8ba4\u662f\u4ecePGHOST\u73af\u5883\u53d8\u91cf\u4e2d\u53d6\u5f97\uff08\u5982\u679c\u88ab\u8bbe\u7f6e\uff09\u3002   </p> <p>-p port --port=port \u6307\u5b9a\u8981\u8fde\u63a5\u670d\u52a1\u5668\u76d1\u542c\u7684 TCP \u7aef\u53e3\uff0c\u4e0d\u6307\u5b9a\u8be5\u53c2\u6570\u65f6\u9ed8\u8ba4\u662f\u4ecePGPORT\u73af\u5883\u53d8\u91cf\u4e2d\uff08\u5982\u679c\u88ab\u8bbe\u7f6e\uff09\uff0c\u5426\u5219\u4f7f\u7528\u7f16\u8bd1\u5728\u7a0b\u5e8f\u4e2d\u7684\u9ed8\u8ba4\u503c\u3002  </p> <p>-U username --username=username \u6307\u5b9a\u8981\u8fde\u63a5\u670d\u52a1\u7684\u7528\u6237\u540d\uff0c\u4e0d\u6307\u5b9a\u8be5\u53c2\u6570\u65f6\u9ed8\u8ba4\u662f\u4ecePGUSER\u73af\u5883\u53d8\u91cf\u4e2d\uff08\u5982\u679c\u88ab\u8bbe\u7f6e\uff09\uff0c\u5426\u5219\u4f7f\u7528\u5f53\u524d\u64cd\u4f5c\u7cfb\u7edf\u7528\u6237\u540d\u505a\u4e3a\u9ed8\u8ba4\u503c\u3002  </p> <p>-w --no-password \u4ece\u4e0d\u53d1\u51fa\u4e00\u4e2a\u53e3\u4ee4\u63d0\u793a\u3002\u5982\u679c\u670d\u52a1\u5668\u8981\u6c42\u53e3\u4ee4\u8ba4\u8bc1\u5e76\u4e14\u6ca1\u6709\u5176\u4ed6\u65b9\u5f0f\u63d0\u4f9b\u53e3\u4ee4\uff08\u4f8b\u5982\u4e00\u4e2a.pgpass\u6587\u4ef6\uff09\uff0c\u90a3\u4e48\u8fde\u63a5\u5c1d\u8bd5\u5c06\u5931\u8d25\u3002\u8fd9\u4e2a\u9009\u9879\u5bf9\u4e8e\u6279\u5904\u7406\u4efb\u52a1\u548c\u811a\u672c\u6709\u7528\uff0c\u56e0\u4e3a\u5728\u5176\u4e2d\u6ca1\u6709\u4e00\u4e2a\u7528\u6237\u6765\u8f93\u5165\u53e3\u4ee4\u3002   </p> <p>-W --password \u5f3a\u5236pg_dump\u5728\u8fde\u63a5\u5230\u4e00\u4e2a\u6570\u636e\u5e93\u4e4b\u524d\u63d0\u793a\u8981\u6c42\u4e00\u4e2a\u53e3\u4ee4\u3002   </p> <p>-l dbname --database=dbname \u6307\u5b9a\u8981\u8fde\u63a5\u5230\u54ea\u4e2a\u6570\u636e\u5e93\u5907\u4efd\u5168\u5c40\u5bf9\u8c61\u4ee5\u53ca\u53d1\u73b0\u8981\u5907\u4efd\u54ea\u4e9b\u5176\u4ed6\u6570\u636e\u5e93\u3002\u5982\u679c\u6ca1\u6709\u6307\u5b9a\uff0c\u5c06\u4f1a\u4f7f\u7528postgres\u6570\u636e\u5e93\uff0c\u5982\u679cpostgres\u4e0d\u5b58\u5728\uff0c\u5c31\u4f7f\u7528 template1\u3002  </p>"},{"location":"guide/08-data-dump-restore/#_13","title":"\u4f7f\u7528\u4ecb\u7ecd","text":""},{"location":"guide/08-data-dump-restore/#_14","title":"\u53ea\u5907\u4efd\u5168\u5c40\u5bf9\u8c61","text":"<pre><code>pg_dumpall -h 127.0.0.1 -U opentenbase -p 15432 -g &gt;/data/opentenbase/opentenbase.sql\n</code></pre>"},{"location":"guide/08-data-dump-restore/#_15","title":"\u53ea\u5907\u4efd\u7528\u6237\u89d2\u8272","text":"<pre><code>pg_dumpall -h 127.0.0.1 -U opentenbase -p 15432 -r &gt;/data/opentenbase/opentenbase.sql\n</code></pre>"},{"location":"guide/08-data-dump-restore/#_16","title":"\u53ea\u5907\u4efd\u8868\u7a7a\u95f4","text":"<pre><code>pg_dumpall -h 127.0.0.1 -U opentenbase -p 15432 -t&gt;/data/opentenbase/opentenbase.sql\n</code></pre>"},{"location":"guide/08-data-dump-restore/#pg_restore","title":"pg_restore\u6570\u636e\u5bfc\u5165\u5de5\u5177","text":""},{"location":"guide/08-data-dump-restore/#pg_restore_1","title":"pg_restore\u4ecb\u7ecd","text":"<p>pg_restore\u662f\u4e00\u4e2a\u7528\u6765\u4ecepg_dump\u521b\u5efa\u7684\u975e\u6587\u672c\u683c\u5f0f\u5f52\u6863\u6062\u590dPostgreSQL\u6570\u636e\u5e93\u7684\u5de5\u5177\u3002\u8fd9\u4e9b\u5f52\u6863\u6587\u4ef6\u8fd8\u5141\u8bb8pg_restore\u9009\u62e9\u6062\u590d\u54ea\u4e9b\u5185\u5bb9\u3002pg_restore\u53ef\u4ee5\u5728\u4e24\u79cd\u6a21\u5f0f\u4e0b\u64cd\u4f5c\u3002\u5982\u679c\u6307\u5b9a\u4e86\u4e00\u4e2a\u6570\u636e\u5e93\u540d\u79f0\uff0cpg_restore\u4f1a\u8fde\u63a5\u90a3\u4e2a\u6570\u636e\u5e93\u5e76\u4e14\u628a\u5f52\u6863\u5185\u5bb9\u76f4\u63a5\u6062\u590d\u5230\u8be5\u6570\u636e\u5e93\u4e2d\u3002\u5426\u5219\uff0c\u4f1a\u521b\u5efa\u4e00\u4e2a\u811a\u672c\uff0c\u5176\u4e2d\u5305\u542b\u7740\u91cd\u5efa\u8be5\u6570\u636e\u5e93\u6240\u5fc5\u8981\u7684 SQL \u547d\u4ee4\uff0c\u5b83\u4f1a\u88ab\u5199\u5165\u5230\u4e00\u4e2a\u6587\u4ef6\u6216\u8005\u6807\u51c6\u8f93\u51fa\u3002\u8fd9\u4e2a\u811a\u672c\u8f93\u51fa\u7b49\u6548\u4e8epg_dump\u7684\u7eaf\u6587\u672c\u8f93\u51fa\u683c\u5f0f\u3002\u56e0\u6b64\uff0c\u4e00\u4e9b\u63a7\u5236\u8f93\u51fa\u7684\u9009\u9879\u4e0epg_dump\u7684\u9009\u9879\u7c7b\u4f3c\u3002  </p>"},{"location":"guide/08-data-dump-restore/#_17","title":"\u8fde\u63a5\u53c2\u6570\u4ecb\u7ecd","text":"<p>-d dbname --dbname=dbname \u6307\u5b9a\u8981\u8fde\u63a5\u5230\u7684\u6570\u636e\u5e93\u540d\u3002   </p> <p>-h host --host=host \u6307\u5b9a\u8981\u8fde\u63a5\u670d\u52a1\u5668\u673a\u5668\u7684\u4e3b\u673a\u540d\u6216\u8005ip\u5730\u5740\u3002\u4e0d\u6307\u5b9a\u8be5\u53c2\u6570\u65f6\u9ed8\u8ba4\u662f\u4ecePGHOST\u73af\u5883\u53d8\u91cf\u4e2d\u53d6\u5f97\uff08\u5982\u679c\u88ab\u8bbe\u7f6e\uff09\u3002   </p> <p>-p port --port=port \u6307\u5b9a\u8981\u8fde\u63a5\u670d\u52a1\u5668\u76d1\u542c\u7684 TCP \u7aef\u53e3\uff0c\u4e0d\u6307\u5b9a\u8be5\u53c2\u6570\u65f6\u9ed8\u8ba4\u662f\u4ecePGPORT\u73af\u5883\u53d8\u91cf\u4e2d\uff08\u5982\u679c\u88ab\u8bbe\u7f6e\uff09\uff0c\u5426\u5219\u4f7f\u7528\u7f16\u8bd1\u5728\u7a0b\u5e8f\u4e2d\u7684\u9ed8\u8ba4\u503c\u3002   </p> <p>-U username --username=username \u6307\u5b9a\u8981\u8fde\u63a5\u670d\u52a1\u7684\u7528\u6237\u540d\uff0c\u4e0d\u6307\u5b9a\u8be5\u53c2\u6570\u65f6\u9ed8\u8ba4\u662f\u4ecePGUSER\u73af\u5883\u53d8\u91cf\u4e2d\uff08\u5982\u679c\u88ab\u8bbe\u7f6e\uff09\uff0c\u5426\u5219\u4f7f\u7528\u5f53\u524d\u64cd\u4f5c\u7cfb\u7edf\u7528\u6237\u540d\u505a\u4e3a\u9ed8\u8ba4\u503c\u3002   </p> <p>-w --no-password \u4ece\u4e0d\u53d1\u51fa\u4e00\u4e2a\u53e3\u4ee4\u63d0\u793a\u3002\u5982\u679c\u670d\u52a1\u5668\u8981\u6c42\u53e3\u4ee4\u8ba4\u8bc1\u5e76\u4e14\u6ca1\u6709\u5176\u4ed6\u65b9\u5f0f\u63d0\u4f9b\u53e3\u4ee4\uff08\u4f8b\u5982\u4e00\u4e2a.pgpass\u6587\u4ef6\uff09\uff0c\u90a3\u4e48\u8fde\u63a5\u5c1d\u8bd5\u5c06\u5931\u8d25\u3002\u8fd9\u4e2a\u9009\u9879\u5bf9\u4e8e\u6279\u5904\u7406\u4efb\u52a1\u548c\u811a\u672c\u6709\u7528\uff0c\u56e0\u4e3a\u5728\u5176\u4e2d\u6ca1\u6709\u4e00\u4e2a\u7528\u6237\u6765\u8f93\u5165\u53e3\u4ee4\u3002   </p> <p>-W --password \u5f3a\u5236pg_restore\u5728\u8fde\u63a5\u5230\u4e00\u4e2a\u6570\u636e\u5e93\u4e4b\u524d\u63d0\u793a\u8981\u6c42\u4e00\u4e2a\u53e3\u4ee4\u3002  </p>"},{"location":"guide/08-data-dump-restore/#_18","title":"\u4f7f\u7528\u4ecb\u7ecd","text":""},{"location":"guide/08-data-dump-restore/#pg_dump_2","title":"\u8f93\u51fa\u7b49\u6548\u4e8epg_dump\u7684\u7eaf\u6587\u672c\u683c\u5f0f","text":"<pre><code>pg_restore opentenbase.dump\n</code></pre> <p>\u547d\u4ee4\u4e2d\u4e0d\u8981\u4f7f\u7528-d dbname \u53c2\u6570\uff0c\u5219pg_restore\u8f93\u51fa\u7b49\u6548\u4e8epg_dump\u7684\u7eaf\u6587\u672c\u8f93\u51fa\u683c\u5f0f\u3002</p>"},{"location":"guide/08-data-dump-restore/#_19","title":"\u8f93\u51fa\u6587\u672c\u91cd\u5b9a\u5411\u4e8e\u67d0\u4e2a\u6587\u4ef6\u4e2d","text":"<pre><code>pg_restore opentenbase.dump -f  opentenbase.sql \n</code></pre> <p>\u6216\u8005\u5f97  </p> <pre><code>pg_restore opentenbase.dump &gt; opentenbase.sql  \n</code></pre> <p>\u5c06\u8f93\u51fa\u7684\u6587\u672c\u91cd\u5b9a\u5411\u4e8eopentenbase.sql\u6587\u4ef6\u4e2d\u3002  </p>"},{"location":"guide/08-data-dump-restore/#_20","title":"\u6062\u590d\u65f6\u5148\u521b\u5efa\u6570\u636e\u5e93","text":"<pre><code>pg_dump -h 127.0.0.1 -p 15432 -U opentenbase -d opentenbase -Fc &gt; opentenbase.dump\ndropdb -h 127.0.0.1 -p 15432 -U opentenbase opentenbase   \npg_restore -h 127.0.0.1 -U opentenbase -p 15432 -C -d postgres opentenbase.dump \n</code></pre> <p>\u5728\u4f7f\u7528\u8fd9\u4e2a\u9009\u9879\u65f6\uff0c-d\u63d0\u5230\u7684\u6570\u636e\u5e93\u53ea\u88ab\u7528\u4e8e\u53d1\u51fa\u521d\u59cb\u7684DROP DATABASE\u548cCREATE DATABASE\u547d\u4ee4\u3002\u6240\u6709\u8981\u6062\u590d\u5230\u8be5\u6570\u636e\u5e93\u540d\u4e2d\u7684\u6570\u636e\u90fd\u51fa\u73b0\u5728\u5f52\u6863\u4e2d  </p>"},{"location":"guide/08-data-dump-restore/#ddl","title":"\u53ea\u6062\u590dddl","text":"<pre><code>pg_restore -h 127.0.0.1 -U opentenbase -p 15432 -d opentenbase -s opentenbase.dump\n</code></pre>"},{"location":"guide/08-data-dump-restore/#_21","title":"\u53ea\u6062\u590d\u6570\u636e","text":"<pre><code>pg_restore -h 127.0.0.1 -U opentenbase -p 15432 -d opentenbase -a opentenbase.dump\n</code></pre>"},{"location":"guide/08-data-dump-restore/#_22","title":"\u5728\u91cd\u65b0\u521b\u5efa\u6570\u636e\u5e93\u5bf9\u8c61\u4e4b\u524d\u6e05\u9664","text":"<pre><code>pg_restore -h 127.0.0.1 -U opentenbase -p 15432 -d opentenbase -c opentenbase.dump\n</code></pre>"},{"location":"guide/08-data-dump-restore/#_23","title":"\u53ea\u6062\u590d\u67d0\u4e9b\u6a21\u5f0f","text":"<pre><code>pg_restore -h 127.0.0.1 -U opentenbase -p 15432 -n 'public' -d opentenbase opentenbase.dump\n</code></pre>"},{"location":"guide/08-data-dump-restore/#_24","title":"\u53ea\u6062\u590d\u67d0\u4e9b\u8868","text":"<p>\u6062\u590d\u6240\u6709\u6a21\u5f0f\u4e0b\u7684t_txt\u8868  </p> <pre><code>pg_restore -h 127.0.0.1 -U opentenbase -p 15432 -t 't_txt' -d opentenbase opentenbase.dump\n</code></pre> <p>\u6062\u590d\u6240\u6709\u6a21\u5f0f\u4e0b\u7684t_txt\u8868\u548ct\u8868</p> <pre><code>pg_restore -h 127.0.0.1 -U opentenbase -p 15432 -t 't_txt' -t 't' opentenbase.dump\n</code></pre> <p>\u6062\u590dpublic\u6a21\u5f0f\u4e0b\u7684t_txt\u8868  </p> <pre><code>pg_restore -h 127.0.0.1 -U opentenbase -p 15432 -n 'public' -t 't_txt' -d opentenbase opentenbase.dump\n</code></pre>"},{"location":"guide/08-data-dump-restore/#psql","title":"psql\u6570\u636e\u5bfc\u5165\u5de5\u5177","text":""},{"location":"guide/08-data-dump-restore/#psql_1","title":"psql\u4ecb\u7ecd","text":"<p>psql\u662f\u4e00\u4e2a\u57fa\u4e8e\u7ec8\u7aef\u7684 OpenTenBase \u5ba2\u6237\u7aef\u5de5\u5177\uff0c\u7c7b\u4f3cOracle\u4e2d\u7684\u547d\u4ee4\u884c\u5de5\u5177sqlplus\uff0c\u4f46\u6bd4sqlplus\u5f3a\u5927\u591a\u4e86\u3002\u5b83\u8ba9\u4f60\u80fd\u4ea4\u4e92\u5f0f\u5730\u952e\u5165\u67e5\u8be2\uff0c\u628a\u5b83\u4eec\u53d1\u9001\u7ed9 OpenTenBase \uff0c\u5e76\u4e14\u67e5\u770b\u67e5\u8be2\u7ed3\u679c\u3002\u6216\u8005\uff0c\u8f93\u5165\u53ef\u4ee5\u6765\u81ea\u4e8e\u4e00\u4e2a\u6587\u4ef6\u6216\u8005\u547d\u4ee4\u884c\u53c2\u6570\u3002\u6b64\u5916\uff0cpsql\u8fd8\u63d0\u4f9b\u4e00\u4e9b\u5143\u547d\u4ee4\u548c\u591a\u79cd\u7c7b\u4f3c shell \u7684\u7279\u6027\u6765\u4e3a\u7f16\u5199\u811a\u672c\u548c\u81ea\u52a8\u5316\u591a\u79cd\u4efb\u52a1\u63d0\u4f9b\u4fbf\u5229\u3002psql\u8fd8\u652f\u6301\u547d\u4ee4\u8865\u5168\uff0c\u5386\u53f2\u547d\u4ee4\u56de\u627e\u3002  </p>"},{"location":"guide/08-data-dump-restore/#_25","title":"\u8fde\u63a5\u6570\u636e\u5e93\u53c2\u6570\u4ecb\u7ecd","text":"<p>-d dbname --dbname=dbname \u6307\u5b9a\u8981\u8fde\u63a5\u5230\u7684\u6570\u636e\u5e93\u540d\uff0c\u4e0d\u6307\u5b9a\u8be5\u53c2\u6570\u65f6\u9ed8\u8ba4\u662f\u4ecePGDATABASE\u73af\u5883\u53d8\u91cf\u4e2d\u53d6\u5f97\uff08\u5982\u679c\u88ab\u8bbe\u7f6e\uff09\u3002   </p> <p>-h host --host=host \u6307\u5b9a\u8981\u8fde\u63a5\u670d\u52a1\u5668\u673a\u5668\u7684\u4e3b\u673a\u540d\u6216\u8005ip\u5730\u5740\u3002\u4e0d\u6307\u5b9a\u8be5\u53c2\u6570\u65f6\u9ed8\u8ba4\u662f\u4ecePGHOST\u73af\u5883\u53d8\u91cf\u4e2d\u53d6\u5f97\uff08\u5982\u679c\u88ab\u8bbe\u7f6e\uff09\u3002   </p> <p>-p port --port=port \u6307\u5b9a\u8981\u8fde\u63a5\u670d\u52a1\u5668\u76d1\u542c\u7684 TCP \u7aef\u53e3\uff0c\u4e0d\u6307\u5b9a\u8be5\u53c2\u6570\u65f6\u9ed8\u8ba4\u662f\u4ecePGPORT\u73af\u5883\u53d8\u91cf\u4e2d\uff08\u5982\u679c\u88ab\u8bbe\u7f6e\uff09\uff0c\u5426\u5219\u4f7f\u7528\u7f16\u8bd1\u5728\u7a0b\u5e8f\u4e2d\u7684\u9ed8\u8ba4\u503c\u3002   </p> <p>-U username --username=username \u6307\u5b9a\u8981\u8fde\u63a5\u670d\u52a1\u7684\u7528\u6237\u540d\uff0c\u4e0d\u6307\u5b9a\u8be5\u53c2\u6570\u65f6\u9ed8\u8ba4\u662f\u4ecePGUSER\u73af\u5883\u53d8\u91cf\u4e2d\uff08\u5982\u679c\u88ab\u8bbe\u7f6e\uff09\uff0c\u5426\u5219\u4f7f\u7528\u5f53\u524d\u64cd\u4f5c\u7cfb\u7edf\u7528\u6237\u540d\u505a\u4e3a\u9ed8\u8ba4\u503c\u3002   </p> <p>-w --no-password \u4ece\u4e0d\u53d1\u51fa\u4e00\u4e2a\u53e3\u4ee4\u63d0\u793a\u3002\u5982\u679c\u670d\u52a1\u5668\u8981\u6c42\u53e3\u4ee4\u8ba4\u8bc1\u5e76\u4e14\u6ca1\u6709\u5176\u4ed6\u65b9\u5f0f\u63d0\u4f9b\u53e3\u4ee4\uff08\u4f8b\u5982\u4e00\u4e2a.pgpass\u6587\u4ef6\uff09\uff0c\u90a3\u4e48\u8fde\u63a5\u5c1d\u8bd5\u5c06\u5931\u8d25\u3002\u8fd9\u4e2a\u9009\u9879\u5bf9\u4e8e\u6279\u5904\u7406\u4efb\u52a1\u548c\u811a\u672c\u6709\u7528\uff0c\u56e0\u4e3a\u5728\u5176\u4e2d\u6ca1\u6709\u4e00\u4e2a\u7528\u6237\u6765\u8f93\u5165\u53e3\u4ee4\u3002   </p> <p>-W --password \u5f3a\u5236pg_dump\u5728\u8fde\u63a5\u5230\u4e00\u4e2a\u6570\u636e\u5e93\u4e4b\u524d\u63d0\u793a\u8981\u6c42\u4e00\u4e2a\u53e3\u4ee4\u3002  </p>"},{"location":"guide/08-data-dump-restore/#_26","title":"\u4f7f\u7528\u4ecb\u7ecd","text":""},{"location":"guide/08-data-dump-restore/#psqlsql","title":"psql\u6267\u884c\u4e00\u4e2asql\u6587\u4ef6\u4e2d\u6240\u6709\u547d\u4ee4","text":"<ul> <li>\u5728\u5916\u90e8\u6267\u884c</li> </ul> <pre><code>[pgxz@VM_0_3_centos ~]$ cat /data/opentenbase/opentenbase.sql \nset search_path = public;\ninsert into opentenbase values(1,2);\nselect count(1) from opentenbase;\n</code></pre> <pre><code>[pgxz@VM_0_3_centos ~]$ psql -h 172.16.0.29 -p 15432 -U opentenbase -d postgres -f /data/opentenbase/opentenbase.sql \nSET\nINSERT 0 1\n count \n-------\n 10001\n(1 row)\n</code></pre> <ul> <li>\u5728\u5185\u90e8\u6267\u884c</li> </ul> <pre><code>[pgxz@VM_0_3_centos ~]$ psql -h 172.16.0.29 -p 15432 -U opentenbase -d postgres \npsql (PostgreSQL 10 (opentenbase 2.01))\nType \"help\" for help.\n\npostgres=# \\i  /data/opentenbase/opentenbase.sql \nSET\nINSERT 0 1\n count \n-------\n 10002\n(1 row)\n\n</code></pre>"},{"location":"guide/08-data-dump-restore/#_27","title":"\u7ed3\u8bed","text":"<p>OpenTenBase \u662f\u4f01\u4e1a\u7ea7\u5206\u5e03\u5f0fHTAP\u6570\u636e\u5e93\u7ba1\u7406\u7cfb\u7edf\u3002\u901a\u8fc7\u5355\u4e00\u6570\u636e\u5e93\u96c6\u7fa4\u540c\u65f6\u4e3a\u5ba2\u6237\u63d0\u4f9b\u9ad8\u4e00\u81f4\u6027\u7684\u5206\u5e03\u5f0f\u6570\u636e\u5e93\u670d\u52a1\u548c\u9ad8\u6027\u80fd\u7684\u6570\u636e\u4ed3\u5e93\u670d\u52a1\uff0c\u5f62\u6210\u4e00\u5957\u878d\u5408\u5b8c\u6574\u7684\u4f01\u4e1a\u7ea7\u89e3\u51b3\u65b9\u6848\u3002\u5927\u5bb6\u5728\u6570\u636e\u5e93\u9886\u57df\u9047\u5230\u76f8\u5173\u95ee\u9898\u65f6\uff0c\u6b22\u8fce\u968f\u65f6\u7559\u8a00\u6211\u4eec\u3002</p>"},{"location":"guide/09-problem-performance/","title":"\u95ee\u9898\u5b9a\u4f4d\u53ca\u6027\u80fd\u4f18\u5316","text":""},{"location":"guide/09-problem-performance/#_2","title":"\u65e5\u5fd7\u7ba1\u7406","text":""},{"location":"guide/09-problem-performance/#opentenbase","title":"OpenTenBase \u65e5\u5fd7\u683c\u5f0f\u8bf4\u660e","text":"<p>\u6267\u884c\u6b63\u786e\u7684\u8bed\u53e5\u4ea7\u751f\u7684\u65e5\u5fd7  </p> <pre><code>2017-10-11 16:23:55.178 CST,\"pgxz\",\"postgres\",11499,\"127.0.0.1:2329\",59ddd50c.2ceb,1,\"idle\",2017-10-11 16:23:40 CST,3/26053,0,LOG,00000,\"statement: select * from pg_class limit 1;\",,,,,,,,,\"psql\"\n</code></pre> <pre><code>\u6267\u884c\u65f6\u95f4                                                            | 2017-10-11 16:23:55.178\n\u7528\u6237\u540d                                                              | pgxz\n\u6570\u636e\u5e93                                                              | postgres\n\u8fdb\u7a0bid                                                              | 11499\n\u5ba2\u6237\u7aefid                                                            | 127.0.0.1:2329\n\u4f1a\u8bdd ID                                                             | 59ddd50c.2ceb\n\u6bcf\u4e2a\u4f1a\u8bdd\u7684\u884c\u53f7                                                        | 1\n\u547d\u4ee4\u6807\u7b7e                                                             | idle\n\u767b\u5f55\u65f6\u95f4                                                             | 2017-10-11 16:23:40\n\u865a\u62df\u4e8b\u52a1 ID                                                          | 3/26053\n\u666e\u901a\u4e8b\u52a1 ID                                                          | 0\n\u7ea7\u522b                                                                | LOG\nSQLSTATE \u4ee3\u7801                                                       | 00000\n\u6267\u884c\u4fe1\u606f                                                             | statement: select * from pg_class limit 1;\n\u8be6\u60c5                                                                | \n\u63d0\u793a                                                                | \n\u5bfc\u81f4\u9519\u8bef\u7684\u5185\u90e8\u67e5\u8be2                                                    | \n\u9519\u8bef\u4f4d\u7f6e\u6240\u5728\u7684\u5b57\u7b26\u8ba1\u6570                                                 | \n\u9519\u8bef\u4e0a\u4e0b\u6587                                                           | \n\u5bfc\u81f4\u9519\u8bef\u7684\u7528\u6237\u67e5\u8be2\uff08\u5982\u679c\u6709\u4e14\u88ablog_min_error_statement\u542f\u7528\uff09              | \n\u9519\u8bef\u4f4d\u7f6e\u6240\u5728\u7684\u5b57\u7b26\u8ba1\u6570                                                 | \n\u5728 PostgreSQL \u6e90\u4ee3\u7801\u4e2d\u9519\u8bef\u7684\u4f4d\u7f6e(\u5982\u679clog_error_verbosity\u88ab\u8bbe\u7f6e\u4e3averbose) | \n\u5e94\u7528\u540d                                                               | psql\n</code></pre> <p>\u9519\u8bef\u65e5\u5fd7\u89e3\u91ca  </p> <pre><code>2017-10-11 16:24:10.233 CST,\"pgxz\",\"postgres\",11499,\"127.0.0.1:2329\",59ddd50c.2ceb,2,\"idle\",2017-10-11 16:23:40 CST,3/26054,0,LOG,00000,\"statement: select * from pgxc_nodes limit 1;\",,,,,,,,,\"psql\"\n2017-10-11 16:24:10.233 CST,\"pgxz\",\"postgres\",11499,\"127.0.0.1:2329\",59ddd50c.2ceb,3,\"SELECT\",2017-10-11 16:23:40 CST,3/26054,0,ERROR,42P01,\"relation \"\"pgxc_nodes\"\" does not exist\",,,,,,,,,\"psql\"\n\n</code></pre> <p>\u5411 OpenTenBase \u6267\u884c\u9519\u8bef\u7684\u8bed\u53e5\u4f1a\u4ea7\u751f\u4e24\u6761\u65e5\u5fd7\uff0c\u4e00\u6761\u662f\u6267\u884c\u8bed\u53e5\uff0c\u4e00\u6761\u63d0\u793a\u51fa\u9519\u7684\u539f\u56e0  </p>"},{"location":"guide/09-problem-performance/#_3","title":"\u5bf9\u65e5\u5fd7\u8fdb\u884c\u5206\u6790","text":""},{"location":"guide/09-problem-performance/#_4","title":"\u521b\u5efa\u65e5\u5fd7\u8868","text":"<pre><code>CREATE table opentenbase_log\n(\n  log_time timestamp without time zone,\n  user_name text,\n  database_name text,\n  process_id integer,\n  connection_from text,\n  session_id text,\n  session_line_num bigint,\n  command_tag text,\n  session_start_time timestamp without time zone,\n  virtual_transaction_id text,\n  transaction_id bigint,\n  error_severity text,\n  sql_state_code text,\n  message text,\n  detail text,\n  hint text,\n  internal_query text,\n  internal_query_pos integer,\n  context text,\n  query text,\n  query_pos integer,\n  location text,\n  application_name text\n);\n</code></pre>"},{"location":"guide/09-problem-performance/#_5","title":"\u5bfc\u5165\u65e5\u5fd7\u6570\u636e","text":"<p>OpenTenBase \u65e5\u5fd7\u6587\u4ef6\u9ed8\u8ba4\u5b58\u50a8\u5728\u201c\u6570\u636e\u76ee\u5f55/pg_log\u201d\u76ee\u5f55\u4e0b\u9762</p> <pre><code>postgres=# COPY opentenbase_log FROM '/data/pgxz/data/pgxz/dn001/pg_log/postgresql-Tuesday-16.csv' WITH csv; \nCOPY 10790\n</code></pre>"},{"location":"guide/09-problem-performance/#_6","title":"\u7edf\u8ba1\u65e5\u5fd7\u6570\u636e","text":"<p>--\u6309\u7167session\u8fde\u63a5\u53ca\u64cd\u4f5c\u65f6\u95f4\u6392\u5e8f</p> <pre><code>postgres=# select * from opentenbase_log order by process_id,log_time;\n</code></pre> <p>--\u67e5\u8be2\u9519\u8bef\u65e5\u5fd7</p> <pre><code>SELECT * FROM  opentenbase_log WHERE error_severity='ERROR' limit 1;  \n</code></pre> <p>--\u7edf\u8ba1session\u64cd\u4f5c\u6570\u7edf\u8ba1</p> <pre><code>postgres=#  select count(1),process_id,user_name,database_name from opentenbase_log group by process_id,user_name,database_name order by count(1) desc limit 10;\n count | process_id | user_name | database_name \n-------+------------+-----------+---------------\n  2770 |      48067 | pgxz      | postgres\n    10 |      22143 | pgxz      | postgres\n    10 |      28778 | pgxz      | postgres\n     9 |      28367 | pgxz      | postgres\n     9 |      44280 | pgxz      | postgres\n     8 |      32442 | pgxz      | postgres\n     7 |      17911 | pgxz      | postgres\n     7 |      21865 | pgxz      | postgres\n     7 |      26159 | pgxz      | postgres\n     7 |      45471 | pgxz      | postgres\n(10 rows)\n</code></pre> <p>--\u7528\u6237\u64cd\u4f5c\u7edf\u8ba1</p> <pre><code>postgres=#  select count(1),user_name from opentenbase_log group by user_name order by count(1) desc limit 10;                                                           \n count | user_name \n-------+-----------\n 10790 | pgxz\n</code></pre> <p>--\u6570\u636e\u5e93\u8bbf\u95ee\u6b21\u6570\u7edf\u8ba1</p> <pre><code>postgres=#  select count(1),database_name from opentenbase_log group by database_name order by count(1) desc limit 10;             \n count | database_name \n-------+---------------\n 10790 | postgres\n(1 row)\n</code></pre> <p>--\u9519\u8bef\u4fe1\u606f\u7edf\u8ba1</p> <pre><code>postgres=# select count(1),user_name,database_name from opentenbase_log where error_severity='ERROR' group by user_name,database_name order by count(1) desc limit 10;           \n count | user_name | database_name \n-------+-----------+---------------\n  1390 | pgxz      | postgres\n(1 row)\n</code></pre>"},{"location":"guide/09-problem-performance/#sql","title":"\u914d\u7f6e\u53ea\u6536\u96c6\u6162\u7684sql\u8bed\u53e5","text":"<p>#\u7528\u6237\u8bbf\u95ee\u65e5\u5fd7\u683c\u5f0f log_destination = 'csvlog'  </p> <p>#\u542f\u7528\u7528\u6237\u8bbf\u95ee\u65e5\u5fd7\u6536\u96c6\u5668 logging_collector = on  </p> <p>#\u914d\u7f6esql\u8bed\u53e5\u6267\u884c\u8d85\u8fc7\u591a\u5c11\u6beb\u79d2\u6570\u65f6\uff0c\u8bed\u53e5\u5c06\u88ab\u8bb0\u5f55,\u503c\u4e3a-1\u65f6\u7981\u7528\uff0c0\u65f6\u8bb0\u5f55\u6240\u6709\u8bed\u53e5 #\u4e0b\u9762\u914d\u7f6e\u53ea\u6536\u96c6\u8fd0\u884c\u8d85\u8fc71\u79d2\u7684\u8bed\u53e5 log_min_duration_statement = 1000  </p> <p>#\u9ed8\u8ba4\u4e0d\u8bb0\u5f55\u4efb\u4f55\u65e5\u5fd7 log_statement = 'none'  </p> <p>\u6536\u96c6\u5230\u7684\u65e5\u5fd7\u6587\u4ef6\u5185\u5bb9\u5982\u4e0b\u6240\u793a</p> <pre><code>2017-10-15 10:25:54.106 CST,\"postgres\",\"postgres\",43799,\"127.0.0.1:17899\",59e2c65b.ab17,4,\"SELECT\",2017-10-15 10:22:19 CST,2/0,0,LOG,00000,\"duration: 1338.366 ms  statement: select * from t where id=20000 or id=2000000;\",,,,,,,,,\"psql\"\n</code></pre> <p>\u7cfb\u7edf\u8bb0\u5f55\u8fd0\u884c\u7684\u8bed\u53e5\u53ca\u8fd0\u884c\u65f6\u95f4</p>"},{"location":"guide/09-problem-performance/#_7","title":"\u5982\u4f55\u67e5\u8be2\u6570\u636e\u662f\u5426\u503e\u659c","text":"<p>\u8fde\u63a5\u4e0a\u4e0d\u540c\u7684dn\u8282\u70b9\uff0c\u67e5\u8be2\u8868\u7684\u5bb9\u91cf\u5927\u5c0f\uff0c\u5982\u679c\u5927\u5c0f\u504f\u5dee\u8f83\u5927\u5c31\u53ef\u4ee5\u5224\u65ad\u5b58\u5728\u6570\u636e\u503e\u659c \u8fde\u63a5dn001:</p> <pre><code>[pgxz@VM_0_29_centos pgxz]$ psql -p 15432 -h 172.16.0.47\npsql (PostgreSQL 10 (opentenbase 2.01))\nType \"help\" for help.\n\npostgres=# select pg_size_pretty(pg_table_size('opentenbase_1'));\n pg_size_pretty \n----------------\n 2408 kB\n(1 row)\n\npostgres=# select pg_size_pretty(pg_table_size('opentenbase_2'));\n pg_size_pretty \n----------------\n 896 kB\n(1 row)\n\npostgres=# \\q\n</code></pre> <p>\u8fde\u63a5dn002:</p> <pre><code>[pgxz@VM_0_29_centos pgxz]$ psql -p 15431 -h 172.16.0.47 \npsql (PostgreSQL 10 (opentenbase 2.01))\nType \"help\" for help.\n\npostgres=# select pg_size_pretty(pg_table_size('opentenbase_1'));\n pg_size_pretty \n----------------\n 2408 kB\n(1 row)\n\npostgres=#  select pg_size_pretty(pg_table_size('opentenbase_2'));\n pg_size_pretty \n----------------\n 464 kB\n(1 row)\n</code></pre> <p>\u4e0a\u9762\u6570\u636e\u8868\u201copentenbase_2\u201d\u5bb9\u91cf\u76f8\u5dee\u4e3a\u4e00\u534a\uff0c\u57fa\u672c\u53ef\u4ee5\u5224\u5b9a\u5b58\u5728\u6570\u636e\u503e\u659c\u3002</p>"},{"location":"guide/09-problem-performance/#sql_1","title":"\u5982\u4f55\u4f18\u5316\u6709\u95ee\u9898\u7684Sql\u8bed\u53e5","text":""},{"location":"guide/09-problem-performance/#_8","title":"\u67e5\u770b\u662f\u5426\u4e3a\u5206\u5e03\u952e\u67e5\u8be2","text":"<pre><code>postgres=# explain select * from opentenbase_1 where f1=1;        \n                                   QUERY PLAN                                   \n--------------------------------------------------------------------------------\n Remote Fast Query Execution  (cost=0.00..0.00 rows=0 width=0)\n   Node/s: dn001, dn002\n   -&gt;  Gather  (cost=1000.00..7827.20 rows=1 width=14)\n         Workers Planned: 2\n         -&gt;  Parallel Seq Scan on opentenbase_1  (cost=0.00..6827.10 rows=1 width=14)\n               Filter: (f1 = 1)\n(6 rows)\n</code></pre> <pre><code>postgres=# explain select * from opentenbase_1 where f2=1;\n                                   QUERY PLAN                                   \n--------------------------------------------------------------------------------\n Remote Fast Query Execution  (cost=0.00..0.00 rows=0 width=0)\n   Node/s: dn001\n   -&gt;  Gather  (cost=1000.00..7827.20 rows=1 width=14)\n         Workers Planned: 2\n         -&gt;  Parallel Seq Scan on opentenbase_1  (cost=0.00..6827.10 rows=1 width=14)\n               Filter: (f2 = 1)\n(6 rows)\n</code></pre> <p>\u4e0a\u9762\u7b2c\u4e00\u4e2a\u67e5\u8be2\u4e3a\u975e\u5206\u5e03\u952e\u67e5\u8be2\uff0c\u9700\u8981\u53d1\u5f80\u6240\u6709\u8282\u70b9\uff0c\u8fd9\u6837\u6700\u6162\u7684\u8282\u70b9\u51b3\u5b9a\u4e86\u6574\u4e2a\u4e1a\u52a1\u7684\u901f\u5ea6\uff0c\u9700\u8981\u4fdd\u6301\u6240\u6709\u8282\u70b9\u7684\u54cd\u5e94\u6027\u80fd\u4e00\u81f4\uff0c\u4e1a\u52a1\u8bbe\u8ba1\u67e5\u8be2\u65f6\u5c3d\u53ef\u80fd\u5e26\u4e0a\u5206\u5e03\u952e</p>"},{"location":"guide/09-problem-performance/#_9","title":"\u67e5\u770b\u662f\u5426\u4f7f\u7528\u4e0a\u7d22\u5f15","text":"<pre><code>postgres=# create index opentenbase_2_f2_idx on opentenbase_2(f2); \nCREATE INDEX\npostgres=# explain select * from opentenbase_2 where f2=1;\n                                     QUERY PLAN                                      \n-------------------------------------------------------------------------------------\n Remote Fast Query Execution  (cost=0.00..0.00 rows=0 width=0)\n   Node/s: dn001, dn002\n   -&gt;  Index Scan using opentenbase_2_f2_idx on opentenbase_2  (cost=0.42..4.44 rows=1 width=14)\n         Index Cond: (f2 = 1)\n(4 rows)\n</code></pre> <pre><code>postgres=# explain select * from opentenbase_2 where f3='1';\n                                   QUERY PLAN                                   \n--------------------------------------------------------------------------------\n Remote Fast Query Execution  (cost=0.00..0.00 rows=0 width=0)\n   Node/s: dn001, dn002\n   -&gt;  Gather  (cost=1000.00..7827.20 rows=1 width=14)\n         Workers Planned: 2\n         -&gt;  Parallel Seq Scan on opentenbase_2  (cost=0.00..6827.10 rows=1 width=14)\n               Filter: (f3 = '1'::text)\n(6 rows)\n\n</code></pre> <p>\u7b2c\u4e00\u4e2a\u67e5\u8be2\u4f7f\u7528\u4e86\u7d22\u5f15\uff0c\u7b2c\u4e8c\u4e2a\u6ca1\u6709\u4f7f\u7528\u7d22\u5f15\uff0c\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u4f7f\u7528\u7d22\u5f15\u53ef\u4ee5\u52a0\u901f\u67e5\u8be2\u901f\u5ea6\uff0c\u4f46\u8981\u8bb0\u4f4f\u7d22\u5f15\u4e5f\u4f1a\u589e\u52a0\u66f4\u65b0\u7684\u5f00\u9500</p>"},{"location":"guide/09-problem-performance/#key-join","title":"\u67e5\u770b\u662f\u5426\u4e3a\u5206\u5e03key join","text":"<pre><code>postgres=# explain  select opentenbase_1.* from opentenbase_1,opentenbase_2 where opentenbase_1.f1=opentenbase_2.f1 ;           \n                                           QUERY PLAN                                           \n------------------------------------------------------------------------------------------------\n Remote Subquery Scan on all (dn001,dn002)  (cost=29.80..186.32 rows=3872 width=40)\n   -&gt;  Hash Join  (cost=29.80..186.32 rows=3872 width=40)\n         Hash Cond: (opentenbase_1.f1 = opentenbase_2.f1)\n         -&gt;  Remote Subquery Scan on all (dn001,dn002)  (cost=100.00..158.40 rows=880 width=40)\n               Distribute results by S: f1\n               -&gt;  Seq Scan on opentenbase_1  (cost=0.00..18.80 rows=880 width=40)\n         -&gt;  Hash  (cost=18.80..18.80 rows=880 width=4)\n               -&gt;  Seq Scan on opentenbase_2  (cost=0.00..18.80 rows=880 width=4)\n(8 rows)\n</code></pre> <pre><code>postgres=# explain  select opentenbase_1.* from opentenbase_1,opentenbase_2 where opentenbase_1.f2=opentenbase_2.f1 ;   \n                                   QUERY PLAN                                    \n---------------------------------------------------------------------------------\n Remote Fast Query Execution  (cost=0.00..0.00 rows=0 width=0)\n   Node/s: dn001, dn002\n   -&gt;  Hash Join  (cost=18904.69..46257.08 rows=500564 width=14)\n         Hash Cond: (opentenbase_1.f2 = opentenbase_2.f1)\n         -&gt;  Seq Scan on opentenbase_1  (cost=0.00..9225.64 rows=500564 width=14)\n         -&gt;  Hash  (cost=9225.64..9225.64 rows=500564 width=4)\n               -&gt;  Seq Scan on opentenbase_2  (cost=0.00..9225.64 rows=500564 width=4)\n(7 rows)\n</code></pre> <p>\u7b2c\u4e00\u67e5\u8be2\u9700\u8981\u6570\u636e\u91cd\u5206\u5e03\uff0c\u800c\u7b2c\u4e8c\u4e2a\u662f\u4e0d\u9700\u8981\uff0c\u5206\u5e03\u952ejoin\u67e5\u8be2\u6027\u80fd\u4f1a\u66f4\u9ad8\u3002</p>"},{"location":"guide/09-problem-performance/#join","title":"\u67e5\u770bjoin\u53d1\u751f\u7684\u8282\u70b9","text":"<pre><code>postgres=#  explain  select opentenbase_1.* from opentenbase_1,opentenbase_2 where opentenbase_1.f1=opentenbase_2.f1 ;    \n                                          QUERY PLAN                                           \n-----------------------------------------------------------------------------------------------\n Hash Join  (cost=29.80..186.32 rows=3872 width=40)\n   Hash Cond: (opentenbase_1.f1 = opentenbase_2.f1)\n   -&gt;  Remote Subquery Scan on all (dn001,dn002)  (cost=100.00..158.40 rows=880 width=40)\n         -&gt;  Seq Scan on opentenbase_1  (cost=0.00..18.80 rows=880 width=40)\n   -&gt;  Hash  (cost=126.72..126.72 rows=880 width=4)\n         -&gt;  Remote Subquery Scan on all (dn001,dn002)  (cost=100.00..126.72 rows=880 width=4)\n               -&gt;  Seq Scan on opentenbase_2  (cost=0.00..18.80 rows=880 width=4)\n(7 rows)\n</code></pre> <pre><code>postgres=# set prefer_olap to on;\nSET\npostgres=# explain  select opentenbase_1.* from opentenbase_1,opentenbase_2 where opentenbase_1.f1=opentenbase_2.f1 ;  \n                                           QUERY PLAN                                           \n------------------------------------------------------------------------------------------------\n Remote Subquery Scan on all (dn001,dn002)  (cost=29.80..186.32 rows=3872 width=40)\n   -&gt;  Hash Join  (cost=29.80..186.32 rows=3872 width=40)\n         Hash Cond: (opentenbase_1.f1 = opentenbase_2.f1)\n         -&gt;  Remote Subquery Scan on all (dn001,dn002)  (cost=100.00..158.40 rows=880 width=40)\n               Distribute results by S: f1\n               -&gt;  Seq Scan on opentenbase_1  (cost=0.00..18.80 rows=880 width=40)\n         -&gt;  Hash  (cost=18.80..18.80 rows=880 width=4)\n               -&gt;  Seq Scan on opentenbase_2  (cost=0.00..18.80 rows=880 width=4)\n(8 rows)\n</code></pre> <p>\u4e0a\u9762join\u5728cn\u8282\u70b9\u6267\u884c\uff0c\u4e0b\u9762\u7684\u5728dn\u4e0a\u91cd\u5206\u5e03\u540e\u518djoin\uff0c\u4e1a\u52a1\u4e0a\u8bbe\u8ba1\u4e00\u822coltp\u7c7b\u4e1a\u52a1\u5728cn\u4e0a\u8fdb\u884c\u5c11\u6570\u636e\u91cfjoin\u6027\u80fd\u4f1a\u66f4\u597d</p>"},{"location":"guide/09-problem-performance/#worker","title":"\u67e5\u770b\u5e76\u884c\u7684worker\u6570","text":"<pre><code>postgres=# explain select count(1) from opentenbase_1;\n                                      QUERY PLAN                                       \n---------------------------------------------------------------------------------------\n Finalize Aggregate  (cost=118.81..118.83 rows=1 width=8)\n   -&gt;  Remote Subquery Scan on all (dn001,dn002)  (cost=118.80..118.81 rows=1 width=0)\n         -&gt;  Partial Aggregate  (cost=18.80..18.81 rows=1 width=8)\n               -&gt;  Seq Scan on opentenbase_1  (cost=0.00..18.80 rows=880 width=0)\n(4 rows)\n</code></pre> <pre><code>postgres=# analyze opentenbase_1;\nANALYZE\npostgres=# explain select count(1) from opentenbase_1;\n                                             QUERY PLAN                                             \n----------------------------------------------------------------------------------------------------\n Parallel Finalize Aggregate  (cost=14728.45..14728.46 rows=1 width=8)\n   -&gt;  Parallel Remote Subquery Scan on all (dn001,dn002)  (cost=14728.33..14728.45 rows=1 width=0)\n         -&gt;  Gather  (cost=14628.33..14628.44 rows=1 width=8)\n               Workers Planned: 2\n               -&gt;  Partial Aggregate  (cost=13628.33..13628.34 rows=1 width=8)\n                     -&gt;  Parallel Seq Scan on opentenbase_1  (cost=0.00..12586.67 rows=416667 width=0)\n(6 rows)\n</code></pre> <p>\u4e0a\u9762\u7b2c\u4e00\u4e2a\u67e5\u8be2\u6ca1\u8d70\u5e76\u884c\uff0canalyze\u540e\u8d70\u5e76\u884c\u624d\u662f\u6b63\u786e\u7684\uff0c\u5efa\u8bae\u5927\u6570\u636e\u91cf\u66f4\u65b0\u518d\u6267\u884canalyze\u3002</p>"},{"location":"guide/09-problem-performance/#_10","title":"\u68c0\u67e5\u5404\u4e2a\u8282\u70b9\u7684\u6267\u884c\u8ba1\u5212\u662f\u5426\u4e00\u81f4","text":"<pre><code>./opentenbase_run_sql_dn_master.sh \"explain select * from opentenbase_2 where f2=1\"  \ndn006 --- psql -h 172.16.0.13 -p 11227 -d postgres -U opentenbase -c \"explain select * from opentenbase_2 where f2=1\"\n                                 QUERY PLAN                                  \n-----------------------------------------------------------------------------\n Bitmap Heap Scan on opentenbase_2  (cost=2.18..7.70 rows=4 width=40)\n   Recheck Cond: (f2 = 1)\n   -&gt;  Bitmap Index Scan on opentenbase_2_f2_idx  (cost=0.00..2.18 rows=4 width=0)\n         Index Cond: (f2 = 1)\n(4 rows)\n\ndn002 --- psql -h 172.16.0.42 -p 11012 -d postgres -U opentenbase -c \"explain select * from opentenbase_2 where f2=1\"\n                                  QUERY PLAN                                   \n-------------------------------------------------------------------------------\n Index Scan using opentenbase_2_f2_idx on opentenbase_2  (cost=0.42..4.44 rows=1 width=14)\n   Index Cond: (f2 = 1)\n(2 rows)\n</code></pre> <p>\u8fd9\u4e24\u4e2adn\u7684\u6267\u884c\u8ba1\u5212\u4e0d\u4e00\u81f4\uff0c\u6700\u5927\u53ef\u80fd\u53ef\u4ee5\u662f\u6570\u636e\u503e\u659c\u6216\u8005\u662f\u6267\u884c\u8ba1\u5212\u7ed9\u7981\u7528\u5bfc\u81f4\u7684\u3002</p> <p>\u5982\u679c\u6709\u53ef\u80fd\u7684\u8bdd\uff0cDBA\u53ef\u4ee5\u914d\u7f6e\u5728\u7cfb\u7edf\u7a7a\u95f2\u65f6\u6267\u884c\u5168\u5e93analyze\u548cvacuum\u3002  </p>"},{"location":"guide/09-problem-performance/#_11","title":"\u4f18\u5316\u5b9e\u4f8b","text":""},{"location":"guide/09-problem-performance/#countdistinct-xx","title":"count(distinct xx)\u4f18\u5316","text":"<pre><code>postgres=# CREATE TABLE t1(f1 serial not null unique,f2 text,f3 text,f4 text,f5 text,f6 text,f7 text,f8 text,f9 text,f10 text,f11 text,f12 text) distribute by shard(f1);\nNOTICE:  Replica identity is needed for shard table, please add to this table through \"alter table\" command.\nCREATE TABLE\nTime: 89.938 ms\n\npostgres=# insert into t1 select t,md5(t::text),md5(t::text),md5(t::text),md5(t::text),md5(t::text),md5(t::text),md5(t::text),md5(t::text),md5(t::text),md5(t::text),md5(t::text) from generate_series(1,1000000) as t;\nINSERT 0 1000000\nTime: 14849.045 ms (00:14.849)\n\npostgres=# analyze t1;\nANALYZE\nTime: 1340.387 ms (00:01.340)\n\npostgres=# explain (verbose)  select count(distinct f2) from t1;  \n                                                              QUERY PLAN                                                               \n---------------------------------------------------------------------------------------------------------------------------------------\n Aggregate  (cost=103320.00..103320.01 rows=1 width=8)\n   Output: count(DISTINCT f2)\n   -&gt;  Remote Subquery Scan on all (dn01,dn02,dn03,dn04,dn05,dn06,dn07,dn08,dn09,dn10)  (cost=100.00..100820.00 rows=1000000 width=33)\n         Output: f2\n         -&gt;  Seq Scan on public.t1  (cost=0.00..62720.00 rows=1000000 width=33)\n               Output: f2\n(6 rows)\n\nTime: 0.748 ms\npostgres=# select count(distinct f2) from t1;  \n  count  \n---------\n 1000000\n(1 row)\n\nTime: 6274.684 ms (00:06.275)\n\npostgres=# select count(distinct f2) from t1 where f1 &lt;10;       \n count \n-------\n     9\n(1 row)\n\nTime: 19.261 ms\n</code></pre> <p>\u4e0a\u9762\u53d1\u73b0count(distinct f2)\u662f\u53d1\u751f\u5728cn\u8282\u70b9\uff0c\u5bf9\u4e8eTP\u7c7b\u4e1a\u52a1\uff0c\u9700\u8981\u64cd\u4f5c\u7684\u6570\u636e\u91cf\u5c11\u7684\u60c5\u51b5\u4e0b\uff0c\u6027\u80fd\u5f00\u9500\u662f\u6ca1\u6709\u95ee\u9898\u7684\uff0c\u800c\u4e14\u5f80\u5f80\u6bd4\u4e0b\u63a8\u6267\u884c\u7684\u6027\u80fd\u5f00\u9500\u8fd8\u8981\u5c0f\u3002\u4f46\u5982\u679c\u4e00\u6b21\u8981\u64cd\u4f5c\u7684\u6570\u636e\u91cf\u6bd4\u8f83\u5927\u7684ap\u7c7b\u4e1a\u52a1\uff0c\u5219\u7f51\u7edc\u4f20\u8f93\u5c31\u4f1a\u6210\u529f\u74f6\u9888\uff0c\u4e0b\u9762\u770b\u770b\u6539\u5199\u540e\u7684\u6267\u884c\u8ba1\u5212  </p> <pre><code>postgres=# explain (verbose)  select count(1) from (select f2 from t1 group by f2) as t ; \n                                                                           QUERY PLAN                                                                            \n-----------------------------------------------------------------------------------------------------------------------------------------------------------------\n Finalize Aggregate  (cost=355600.70..355600.71 rows=1 width=8)\n   Output: count(1)\n   -&gt;  Remote Subquery Scan on all (dn01,dn02,dn03,dn04,dn05,dn06,dn07,dn08,dn09,dn10)  (cost=355600.69..355600.70 rows=1 width=0)\n         Output: PARTIAL count(1)\n         -&gt;  Partial Aggregate  (cost=355500.69..355500.70 rows=1 width=8)\n               Output: PARTIAL count(1)\n               -&gt;  Group  (cost=340500.69..345500.69 rows=1000000 width=33)\n                     Output: t1.f2\n                     Group Key: t1.f2\n                     -&gt;  Sort  (cost=340500.69..343000.69 rows=1000000 width=0)\n                           Output: t1.f2\n                           Sort Key: t1.f2\n                           -&gt;  Remote Subquery Scan on all (dn01,dn02,dn03,dn04,dn05,dn06,dn07,dn08,dn09,dn10)  (cost=216192.84..226192.84 rows=1000000 width=0)\n                                 Output: t1.f2\n                                 Distribute results by S: f2\n                                 -&gt;  Group  (cost=216092.84..221092.84 rows=1000000 width=33)\n                                       Output: t1.f2\n                                       Group Key: t1.f2\n                                       -&gt;  Sort  (cost=216092.84..218592.84 rows=1000000 width=33)\n                                             Output: t1.f2\n                                             Sort Key: t1.f2\n                                             -&gt;  Seq Scan on public.t1  (cost=0.00..62720.00 rows=1000000 width=33)\n                                                   Output: t1.f2\n(23 rows)\n\n</code></pre> <p>\u6539\u5199\u540e\uff0c\u5e76\u884c\u63a8\u5230dn\u53bb\u6267\u884c\uff0c\u73b0\u5728\u770b\u770b\u6267\u884c\u7684\u6548\u679c</p> <pre><code>postgres=# select count(1) from (select f2 from t1 group by f2) as t ; \n  count  \n---------\n 1000000\n(1 row)\n\nTime: 1328.431 ms (00:01.328)\npostgres=# select count(1) from (select f2 from t1 where f1&lt;10 group by f2) as t ; \n count \n-------\n     9\n(1 row)\n\nTime: 24.991 ms\npostgres=# \n</code></pre> <p>\u6211\u4eec\u53ef\u4ee5\u770b\u5230\u5bf9\u4e8e\u5927\u91cf\u6570\u636e\u8ba1\u7b97\u7684AP\u7c7b\u4e1a\u52a1\uff0c\u6027\u80fd\u63d0\u9ad8\u4e865\u500d</p>"},{"location":"guide/09-problem-performance/#work_memio","title":"\u589e\u5927work_mem\u51cf\u5c11io\u8bbf\u95ee","text":"<pre><code>postgres=# CREATE TABLE t1(f1 serial not null unique,f2 text,f3 text,f4 text,f5 text,f6 text,f7 text,f8 text,f9 text,f10 text,f11 text,f12 text) distribute by shard(f1);\nNOTICE:  Replica identity is needed for shard table, please add to this table through \"alter table\" command.\nCREATE TABLE\nTime: 70.545 ms\n\npostgres=# CREATE TABLE t2(f1 serial not null unique,f2 text,f3 text,f4 text,f5 text,f6 text,f7 text,f8 text,f9 text,f10 text,f11 text,f12 text) distribute by shard(f1); \nNOTICE:  Replica identity is needed for shard table, please add to this table through \"alter table\" command.\nCREATE TABLE\nTime: 61.913 ms\n\npostgres=# insert into t1 select t,md5(t::text),md5(t::text),md5(t::text),md5(t::text),md5(t::text),md5(t::text),md5(t::text),md5(t::text),md5(t::text),md5(t::text),md5(t::text) from generate_series(1,1000) as t;   \nINSERT 0 1000\nTime: 48.866 ms\n\npostgres=# insert into t2 select t,md5(t::text),md5(t::text),md5(t::text),md5(t::text),md5(t::text),md5(t::text),md5(t::text),md5(t::text),md5(t::text),md5(t::text),md5(t::text) from generate_series(1,50000) as t;     \nINSERT 0 50000\nTime: 792.858 ms\n\npostgres=# analyze t1;\nANALYZE\nTime: 175.946 ms\n\npostgres=# analyze t2;\nANALYZE\nTime: 318.802 ms\npostgres=# \n\npostgres=# explain  select * from t1 where f2 not in (select f2 from t2);                \n                                                                  QUERY PLAN                                                                   \n-----------------------------------------------------------------------------------------------------------------------------------------------\n Remote Subquery Scan on all (dn01,dn02,dn03,dn04,dn05,dn06,dn07,dn08,dn09,dn10)  (cost=0.00..2076712.50 rows=500 width=367)\n   -&gt;  Seq Scan on t1  (cost=0.00..2076712.50 rows=500 width=367)\n         Filter: (NOT (SubPlan 1))\n         SubPlan 1\n           -&gt;  Materialize  (cost=0.00..4028.00 rows=50000 width=33)\n                 -&gt;  Remote Subquery Scan on all (dn01,dn02,dn03,dn04,dn05,dn06,dn07,dn08,dn09,dn10)  (cost=0.00..3240.00 rows=50000 width=33)\n                       -&gt;  Seq Scan on t2  (cost=0.00..3240.00 rows=50000 width=33)\n(7 rows)\n\nTime: 0.916 ms\npostgres=# select * from t1 where f2 not in (select f2 from t2);                \n f1 | f2 | f3 | f4 | f5 | f6 | f7 | f8 | f9 | f10 | f11 | f12 \n----+----+----+----+----+----+----+----+----+-----+-----+-----\n(0 rows)\n\nTime: 4226.825 ms (00:04.227)\n</code></pre> <pre><code>postgres=# set work_mem to '8MB';\nSET\nTime: 0.289 ms\npostgres=# explain  select * from t1 where f2 not in (select f2 from t2);                \n                                                               QUERY PLAN                                                                \n-----------------------------------------------------------------------------------------------------------------------------------------\n Remote Subquery Scan on all (dn01,dn02,dn03,dn04,dn05,dn06,dn07,dn08,dn09,dn10)  (cost=3365.00..3577.50 rows=500 width=367)\n   -&gt;  Seq Scan on t1  (cost=3365.00..3577.50 rows=500 width=367)\n         Filter: (NOT (hashed SubPlan 1))\n         SubPlan 1\n           -&gt;  Remote Subquery Scan on all (dn01,dn02,dn03,dn04,dn05,dn06,dn07,dn08,dn09,dn10)  (cost=0.00..3240.00 rows=50000 width=33)\n                 -&gt;  Seq Scan on t2  (cost=0.00..3240.00 rows=50000 width=33)\n(6 rows)\n\nTime: 0.890 ms\npostgres=# select * from t1 where f2 not in (select f2 from t2);           \n f1 | f2 | f3 | f4 | f5 | f6 | f7 | f8 | f9 | f10 | f11 | f12 \n----+----+----+----+----+----+----+----+----+-----+-----+-----\n(0 rows)\n\nTime: 105.249 ms\n</code></pre> <p>\u589e\u5927work_mem\u540e\uff0c\u6027\u80fd\u63d0\u9ad8\u4e8640\u500d\uff0c\u56e0\u4e3awork_mem\u8db3\u591f\u653e\u4e0bfilter\u7684\u6570\u636e\uff0c\u4e0d\u9700\u8981\u518d\u505a Materialize\u7269\u5316\uff0cfilter\u7531\u539f\u6765\u7684subplan\u53d8\u6210\u4e86hash subplan\uff0c\u76f4\u63a5\u5728\u5185\u5b58hash\u8868\u4e2dfilter\uff0c\u6027\u80fd\u5c31\u4e0a\u53bb\u4e86</p> <p>\u6ce8\u610f\uff0cwork_mem\u9ed8\u8ba4\u4e0d\u5b9c\u8fc7\u5927\uff0c\u5efa\u8bae\u5728\u67d0\u4e2a\u5177\u4f53\u7684\u67e5\u8be2\u8bed\u53e5\u4e2d\u518d\u6839\u636e\u9700\u8981\u8fdb\u884c\u8c03\u6574\u5373\u53ef\u3002</p>"},{"location":"guide/09-problem-performance/#not-inanti-join","title":"not in\u6539\u5199\u4e3aanti join","text":"<p>\u4e0a\u9762\u901a\u8fc7\u589e\u5927\u8ba1\u7b97\u5185\u5b58\u8fbe\u5230\u63d0\u9ad8\u6027\u80fd\uff0c\u4f46\u5185\u5b58\u4e0d\u53ef\u80fd\u65e0\u9650\u6269\u5927\uff0c\u4e0b\u9762\u901a\u8fc7\u6539\u5199\u8bed\u53e5\u4e5f\u53ef\u4ee5\u8fbe\u5230\u63d0\u9ad8\u67e5\u8be2\u7684\u6027\u80fd\u3002</p> <pre><code>postgres=#  explain select * from t1 left outer join t2 on t1.f2 = t2.f2 where t2.f2 is null; \n                                                                   QUERY PLAN                                                                    \n-------------------------------------------------------------------------------------------------------------------------------------------------\n Remote Subquery Scan on all (dn01,dn02,dn03,dn04,dn05,dn06,dn07,dn08,dn09,dn10)  (cost=6405.00..9260.75 rows=1 width=734)\n   -&gt;  Hash Anti Join  (cost=6405.00..9260.75 rows=1 width=734)\n         Hash Cond: (t1.f2 = t2.f2)\n         -&gt;  Remote Subquery Scan on all (dn01,dn02,dn03,dn04,dn05,dn06,dn07,dn08,dn09,dn10)  (cost=100.00..682.00 rows=1000 width=367)\n               Distribute results by S: f2\n               -&gt;  Seq Scan on t1  (cost=0.00..210.00 rows=1000 width=367)\n         -&gt;  Hash  (cost=21940.00..21940.00 rows=50000 width=367)\n               -&gt;  Remote Subquery Scan on all (dn01,dn02,dn03,dn04,dn05,dn06,dn07,dn08,dn09,dn10)  (cost=100.00..21940.00 rows=50000 width=367)\n                     Distribute results by S: f2\n                     -&gt;  Seq Scan on t2  (cost=0.00..3240.00 rows=50000 width=367)\n(10 rows)\n\nTime: 1.047 ms\npostgres=# select * from t1 left outer join t2 on t1.f2 = t2.f2 where t2.f2 is null; \n f1 | f2 | f3 | f4 | f5 | f6 | f7 | f8 | f9 | f10 | f11 | f12 | f1 | f2 | f3 | f4 | f5 | f6 | f7 | f8 | f9 | f10 | f11 | f12 \n----+----+----+----+----+----+----+----+----+-----+-----+-----+----+----+----+----+----+----+----+----+----+-----+-----+-----\n(0 rows)\n\nTime: 107.233 ms\npostgres=# \n</code></pre> <p>\u4e5f\u53ef\u4ee5\u4fee\u6539not exists </p> <pre><code>postgres=# explain select * from t1 where not exists( select 1 from t2 where t1.f2=t2.f2);\n                                                                  QUERY PLAN                                                                   \n-----------------------------------------------------------------------------------------------------------------------------------------------\n Remote Subquery Scan on all (dn01,dn02,dn03,dn04,dn05,dn06,dn07,dn08,dn09,dn10)  (cost=3865.00..4078.75 rows=1 width=367)\n   -&gt;  Hash Anti Join  (cost=3865.00..4078.75 rows=1 width=367)\n         Hash Cond: (t1.f2 = t2.f2)\n         -&gt;  Remote Subquery Scan on all (dn01,dn02,dn03,dn04,dn05,dn06,dn07,dn08,dn09,dn10)  (cost=100.00..682.00 rows=1000 width=367)\n               Distribute results by S: f2\n               -&gt;  Seq Scan on t1  (cost=0.00..210.00 rows=1000 width=367)\n         -&gt;  Hash  (cost=5240.00..5240.00 rows=50000 width=33)\n               -&gt;  Remote Subquery Scan on all (dn01,dn02,dn03,dn04,dn05,dn06,dn07,dn08,dn09,dn10)  (cost=100.00..5240.00 rows=50000 width=33)\n                     Distribute results by S: f2\n                     -&gt;  Seq Scan on t2  (cost=0.00..3240.00 rows=50000 width=33)\n(10 rows)\n\nTime: 0.974 ms\npostgres=# select * from t1 where not exists( select 1 from t2 where t1.f2=t2.f2);        \n f1 | f2 | f3 | f4 | f5 | f6 | f7 | f8 | f9 | f10 | f11 | f12 \n----+----+----+----+----+----+----+----+----+-----+-----+-----\n(0 rows)\n\nTime: 42.944 ms\n</code></pre>"},{"location":"guide/09-problem-performance/#key-jonlimit","title":"\u5206\u5e03key jon+limit\u4f18\u5316","text":"<pre><code>--\u6570\u636e\u51c6\u5907  \npostgres=# CREATE TABLE t1(f1 serial not null unique,f2 text,f3 text,f4 text,f5 text,f6 text,f7 text,f8 text,f9 text,f10 text,f11 text,f12 text) distribute by shard(f1); \nNOTICE:  Replica identity is needed for shard table, please add to this table through \"alter table\" command.\nCREATE TABLE\npostgres=# CREATE TABLE t2(f1 serial not null unique,f2 text,f3 text,f4 text,f5 text,f6 text,f7 text,f8 text,f9 text,f10 text,f11 text,f12 text) distribute by shard(f1); \nNOTICE:  Replica identity is needed for shard table, please add to this table through \"alter table\" command.\nCREATE TABLE\npostgres=# insert into t1 select t,md5(t::text),md5(t::text),md5(t::text),md5(t::text),md5(t::text),md5(t::text),md5(t::text),md5(t::text),md5(t::text),md5(t::text),md5(t::text) from generate_series(1,1000000) as t;\nINSERT 0 1000000\npostgres=# insert into t2 select t,md5(t::text),md5(t::text),md5(t::text),md5(t::text),md5(t::text),md5(t::text),md5(t::text),md5(t::text),md5(t::text),md5(t::text),md5(t::text) from generate_series(1,1000000) as t; \nINSERT 0 1000000\npostgres=# analyze t1;\nANALYZE\npostgres=# analyze t2;\nANALYZE\npostgres=# \n\npostgres=# \\timing \nTiming is on.\npostgres=# explain  select t1.* from t1,t2 where t1.f1=t2.f1 limit 10;\n                                                                  QUERY PLAN                                                                  \n----------------------------------------------------------------------------------------------------------------------------------------------\n Limit  (cost=0.25..1.65 rows=10 width=367)\n   -&gt;  Merge Join  (cost=0.25..140446.26 rows=1000000 width=367)\n         Merge Cond: (t1.f1 = t2.f1)\n         -&gt;  Remote Subquery Scan on all (dn01,dn02,dn03,dn04,dn05,dn06,dn07,dn08,dn09,dn10)  (cost=100.12..434823.13 rows=1000000 width=367)\n               -&gt;  Index Scan using t1_f1_key on t1  (cost=0.12..62723.13 rows=1000000 width=367)\n         -&gt;  Remote Subquery Scan on all (dn01,dn02,dn03,dn04,dn05,dn06,dn07,dn08,dn09,dn10)  (cost=100.12..71823.13 rows=1000000 width=4)\n               -&gt;  Index Only Scan using t2_f1_key on t2  (cost=0.12..62723.13 rows=1000000 width=4)\n(7 rows)\n\nTime: 1.372 ms\n\npostgres=# explain analyze  select t1.* from t1,t2 where t1.f1=t2.f1 limit 10;       \n                                                                                         QUERY PLAN                                                                                         \n--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n Limit  (cost=0.25..1.65 rows=10 width=367) (actual time=2675.437..2948.199 rows=10 loops=1)\n   -&gt;  Merge Join  (cost=0.25..140446.26 rows=1000000 width=367) (actual time=2675.431..2675.508 rows=10 loops=1)\n         Merge Cond: (t1.f1 = t2.f1)\n         -&gt;  Remote Subquery Scan on all (dn01,dn02,dn03,dn04,dn05,dn06,dn07,dn08,dn09,dn10)  (cost=100.12..434823.13 rows=1000000 width=367) (actual time=1.661..1.704 rows=10 loops=1)\n         -&gt;  Remote Subquery Scan on all (dn01,dn02,dn03,dn04,dn05,dn06,dn07,dn08,dn09,dn10)  (cost=100.12..71823.13 rows=1000000 width=4) (actual time=2673.761..2673.783 rows=10 loops=1)\n Planning time: 0.358 ms\n Execution time: 2973.948 ms\n(7 rows)\n\nTime: 2976.008 ms (00:02.976)\npostgres=# \n</code></pre> <p>\u770b\u6267\u884c\u8ba1\u5212\u662f\u5728cn\u4e0a\u9762\u6267\u884c\uff0cmerge join\u9700\u8981\u628a\u8981join\u7684\u6570\u636e\u62c9\u56decn\u518d\u6392\u5e8f\uff0c\u7136\u540e\u518djoin\uff0c\u8fd9\u91cc\u4e3b\u5207\u7684\u5f00\u9500\u5728\u4e8e\u7f51\u7edc\uff0c\u4f18\u5316\u7684\u8bdd\u65b9\u6cd5\u5c31\u662f\u8ba9\u8bed\u53e5\u5176\u63a8\u4e0b\u53bb\u8ba1\u7b97</p> <pre><code>postgres=# set prefer_olap to on;\nSET\nTime: 0.291 ms\npostgres=#  explain  select t1.* from t1,t2 where t1.f1=t2.f1 limit 10;\n                                                           QUERY PLAN                                                           \n--------------------------------------------------------------------------------------------------------------------------------\n Limit  (cost=100.25..101.70 rows=10 width=367)\n   -&gt;  Remote Subquery Scan on all (dn01,dn02,dn03,dn04,dn05,dn06,dn07,dn08,dn09,dn10)  (cost=100.25..101.70 rows=10 width=367)\n         -&gt;  Limit  (cost=0.25..1.65 rows=10 width=367)\n               -&gt;  Merge Join  (cost=0.25..140446.26 rows=1000000 width=367)\n                     Merge Cond: (t1.f1 = t2.f1)\n                     -&gt;  Index Scan using t1_f1_key on t1  (cost=0.12..62723.13 rows=1000000 width=367)\n                     -&gt;  Index Only Scan using t2_f1_key on t2  (cost=0.12..62723.13 rows=1000000 width=4)\n(7 rows)\n\nTime: 1.061 ms\n\npostgres=# explain analyze  select t1.* from t1,t2 where t1.f1=t2.f1 limit 10;   \n                                                                                QUERY PLAN                                                                                 \n---------------------------------------------------------------------------------------------------------------------------------------------------------------------------\n Limit  (cost=100.25..101.70 rows=10 width=367) (actual time=1.527..3.899 rows=10 loops=1)\n   -&gt;  Remote Subquery Scan on all (dn01,dn02,dn03,dn04,dn05,dn06,dn07,dn08,dn09,dn10)  (cost=100.25..101.70 rows=10 width=367) (actual time=1.525..1.529 rows=10 loops=1)\n Planning time: 0.360 ms\n Execution time: 18.193 ms\n(4 rows)\n\nTime: 19.921 ms\n</code></pre> <p>\u76f8\u5dee150\u500d\u7684\u6027\u80fd\uff0c\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u5982\u679c\u9700\u8981\u62c9\u5927\u91cf\u7684\u6570\u636e\u56decn\u8ba1\u7b97\uff0c\u5219\u4e0b\u63a8\u6267\u884c\u7684\u6548\u7387\u4f1a\u66f4\u597d</p>"},{"location":"guide/09-problem-performance/#key-joinhash-join","title":"\u975e\u5206\u5e03key join\u4f7f\u7528hash join\u6027\u80fd\u4e00\u822c\u6700\u597d","text":"<p>\u4e3a\u4e86\u63d0\u9ad8tp\u7c7b\u4e1a\u52a1\u67e5\u8be2\u7684\u6027\u80fd\uff0c\u6211\u4eec\u7ecf\u5e38\u9700\u8981\u5bf9\u4e00\u4e9b\u5b57\u6bb5\u5efa\u7acb\u7d22\u5f15\uff0c\u4f7f\u7528\u6709\u7d22\u5f15\u5b57\u6bb5join\u65f6\u7cfb\u7edf\u5f80\u5f80\u4e5f\u4f1a\u4f7f\u7528Merge Cond\u548cnestloop</p> <pre><code>--\u51c6\u5907\u6570\u636e\nmydb=# CREATE TABLE t1(f1 serial not null,f2 text,f3 text,f4 text,f5 text,f6 text,f7 text,f8 text,f9 text,f10 text,f11 text,f12 text) distribute by shard(f1); \nNOTICE:  Replica identity is needed for shard table, please add to this table through \"alter table\" command.\nCREATE TABLE\nTime: 481.042 ms\n\nmydb=# create index t1_f1_idx on t1(f2); \nCREATE INDEX\nTime: 85.521 ms\n\nmydb=# CREATE TABLE t2(f1 serial not null,f2 text,f3 text,f4 text,f5 text,f6 text,f7 text,f8 text,f9 text,f10 text,f11 text,f12 text) distribute by shard(f1); \nNOTICE:  Replica identity is needed for shard table, please add to this table through \"alter table\" command.\nCREATE TABLE\nTime: 75.973 ms\n\nmydb=# create index t2_f1_idx on t2(f2);  \nCREATE INDEX\nTime: 29.890 ms\n\nmydb=# insert into t1 select t,md5(t::text),md5(t::text),md5(t::text),md5(t::text),md5(t::text),md5(t::text),md5(t::text),md5(t::text),md5(t::text),md5(t::text),md5(t::text) from generate_series(1,1000000) as t;\nINSERT 0 1000000\nTime: 16450.623 ms (00:16.451)\n\nmydb=# insert into t2 select t,md5(t::text),md5(t::text),md5(t::text),md5(t::text),md5(t::text),md5(t::text),md5(t::text),md5(t::text),md5(t::text),md5(t::text),md5(t::text) from generate_series(1,1000000) as t; \nINSERT 0 1000000\nTime: 17218.738 ms (00:17.219)\n\nmydb=# analyze t1;\nANALYZE\n\nTime: 2219.341 ms (00:02.219)\nmydb=# analyze t2;\nANALYZE\n\nTime: 1649.506 ms (00:01.650)\nmydb=# \n</code></pre> <pre><code>--merge join\n\nmydb=# explain select t1.* from t1,t2 where t1.f2=t2.f2 limit 10;\n                                                       QUERY PLAN                                                        \n-------------------------------------------------------------------------------------------------------------------------\n Limit  (cost=100.25..102.78 rows=10 width=367)\n   -&gt;  Remote Subquery Scan on all (dn001,dn002)  (cost=100.25..102.78 rows=10 width=367)\n         -&gt;  Limit  (cost=0.25..2.73 rows=10 width=367)\n               -&gt;  Merge Join  (cost=0.25..248056.80 rows=1000000 width=367)\n                     Merge Cond: (t1.f2 = t2.f2)\n                     -&gt;  Remote Subquery Scan on all (dn001,dn002)  (cost=100.12..487380.85 rows=1000000 width=367)\n                           Distribute results by S: f2\n                           -&gt;  Index Scan using t1_f1_idx on t1  (cost=0.12..115280.85 rows=1000000 width=367)\n                     -&gt;  Materialize  (cost=100.12..155875.95 rows=1000000 width=33)\n                           -&gt;  Remote Subquery Scan on all (dn001,dn002)  (cost=100.12..153375.95 rows=1000000 width=33)\n                                 Distribute results by S: f2\n                                 -&gt;  Index Only Scan using t2_f1_idx on t2  (cost=0.12..115275.95 rows=1000000 width=33)\n(12 rows)\n\nTime: 4.183 ms\n\nmydb=# explain analyze select t1.* from t1,t2 where t1.f2=t2.f2 limit 10;\n                                                                QUERY PLAN                                                                 \n-------------------------------------------------------------------------------------------------------------------------------------------\n Limit  (cost=100.25..102.78 rows=10 width=367) (actual time=6555.346..6556.296 rows=10 loops=1)\n   -&gt;  Remote Subquery Scan on all (dn001,dn002)  (cost=100.25..102.78 rows=10 width=367) (actual time=6555.343..6555.349 rows=10 loops=1)\n Planning time: 0.473 ms\n Execution time: 6569.828 ms\n(4 rows)\n\nTime: 6614.439 ms (00:06.614)\n</code></pre> <pre><code>--nested loop  \n\nmydb=# set enable_mergejoin to off;\nSET\nTime: 0.422 ms\nmydb=# explain select t1.* from t1,t2 where t1.f2=t2.f2 limit 10;\n                                                     QUERY PLAN                                                     \n--------------------------------------------------------------------------------------------------------------------\n Limit  (cost=100.12..103.57 rows=10 width=367)\n   -&gt;  Remote Subquery Scan on all (dn001,dn002)  (cost=100.12..103.57 rows=10 width=367)\n         -&gt;  Limit  (cost=0.12..3.52 rows=10 width=367)\n               -&gt;  Nested Loop  (cost=0.12..339232.00 rows=1000000 width=367)\n                     -&gt;  Remote Subquery Scan on all (dn001,dn002)  (cost=100.00..434740.00 rows=1000000 width=367)\n                           Distribute results by S: f2\n                           -&gt;  Seq Scan on t1  (cost=0.00..62640.00 rows=1000000 width=367)\n                     -&gt;  Materialize  (cost=100.12..100.31 rows=1 width=33)\n                           -&gt;  Remote Subquery Scan on all (dn001,dn002)  (cost=100.12..100.30 rows=1 width=33)\n                                 Distribute results by S: f2\n                                 -&gt;  Index Only Scan using t2_f1_idx on t2  (cost=0.12..0.27 rows=1 width=33)\n                                       Index Cond: (f2 = t1.f2)\n(12 rows)\n\nTime: 1.033 ms\n\nmydb=# explain analyze select t1.* from t1,t2 where t1.f2=t2.f2 limit 10;\n                                                                QUERY PLAN                                                                 \n-------------------------------------------------------------------------------------------------------------------------------------------\n Limit  (cost=100.12..103.57 rows=10 width=367) (actual time=5608.326..5609.571 rows=10 loops=1)\n   -&gt;  Remote Subquery Scan on all (dn001,dn002)  (cost=100.12..103.57 rows=10 width=367) (actual time=5608.323..5608.349 rows=10 loops=1)\n Planning time: 0.347 ms\n Execution time: 5669.901 ms\n(4 rows)\n\nTime: 5672.584 ms (00:05.673)\n</code></pre> <pre><code>--hash join\n\nmydb=# set enable_nestloop to off;\nSET\nTime: 0.436 ms\nmydb=#  explain select t1.* from t1,t2 where t1.f2=t2.f2 limit 10;\n                                                       QUERY PLAN                                                        \n-------------------------------------------------------------------------------------------------------------------------\n Limit  (cost=85983.00..85984.94 rows=10 width=367)\n   -&gt;  Remote Subquery Scan on all (dn001,dn002)  (cost=85983.00..85984.94 rows=10 width=367)\n         -&gt;  Limit  (cost=85883.00..85884.89 rows=10 width=367)\n               -&gt;  Hash Join  (cost=85883.00..274580.00 rows=1000000 width=367)\n                     Hash Cond: (t1.f2 = t2.f2)\n                     -&gt;  Remote Subquery Scan on all (dn001,dn002)  (cost=100.00..434740.00 rows=1000000 width=367)\n                           Distribute results by S: f2\n                           -&gt;  Seq Scan on t1  (cost=0.00..62640.00 rows=1000000 width=367)\n                     -&gt;  Hash  (cost=100740.00..100740.00 rows=1000000 width=33)\n                           -&gt;  Remote Subquery Scan on all (dn001,dn002)  (cost=100.00..100740.00 rows=1000000 width=33)\n                                 Distribute results by S: f2\n                                 -&gt;  Seq Scan on t2  (cost=0.00..62640.00 rows=1000000 width=33)\n(12 rows)\n\nTime: 1.141 ms\n\nmydb=#  explain analyze select t1.* from t1,t2 where t1.f2=t2.f2 limit 10;\n                                                                  QUERY PLAN                                                                   \n-----------------------------------------------------------------------------------------------------------------------------------------------\n Limit  (cost=85983.00..85984.94 rows=10 width=367) (actual time=1083.691..1085.962 rows=10 loops=1)\n   -&gt;  Remote Subquery Scan on all (dn001,dn002)  (cost=85983.00..85984.94 rows=10 width=367) (actual time=1083.688..1083.699 rows=10 loops=1)\n Planning time: 0.530 ms\n Execution time: 1108.830 ms\n(4 rows)\n\nTime: 1117.713 ms (00:01.118)\n</code></pre>"},{"location":"guide/09-problem-performance/#exists","title":"exists\u7684\u4f18\u5316","text":"<p>exists\u5728\u6570\u636e\u91cf\u6bd4\u8f83\u5927\u60c5\u51b5\u4e0b\uff0c\u4e00\u822c\u4f7f\u7528\u7684\u662fSemi Join \uff0c\u5728work_mem\u8db3\u591f\u5927\u7684\u60c5\u51b5\u4e0b\u8d70\u7684\u662fhash join\uff0c\u6027\u80fd\u4f1a\u66f4\u597d</p> <pre><code>postgres=# show work_mem;\n work_mem \n----------\n 4MB\n(1 row)\n\nTime: 0.298 ms\npostgres=# explain  select count(1) from t1 where exists(select 1 from t2 where t2.t1_f1=t1.f1);\n                                                      QUERY PLAN                                                       \n-----------------------------------------------------------------------------------------------------------------------\n Finalize Aggregate  (cost=242218.32..242218.33 rows=1 width=8)\n   -&gt;  Remote Subquery Scan on all (dn001,dn002)  (cost=242218.30..242218.32 rows=1 width=0)\n         -&gt;  Partial Aggregate  (cost=242118.30..242118.31 rows=1 width=8)\n               -&gt;  Hash Semi Join  (cost=110248.00..242118.30 rows=505421 width=0)\n                     Hash Cond: (t1.f1 = t2.t1_f1)\n                     -&gt;  Seq Scan on t1  (cost=0.00..17420.00 rows=1000000 width=4)\n                     -&gt;  Hash  (cost=79340.00..79340.00 rows=3000000 width=4)\n                           -&gt;  Remote Subquery Scan on all (dn001,dn002)  (cost=100.00..79340.00 rows=3000000 width=4)\n                                 Distribute results by S: t1_f1\n                                 -&gt;  Seq Scan on t2  (cost=0.00..52240.00 rows=3000000 width=4)\n(10 rows)\n\nTime: 1.091 ms\npostgres=# select count(1) from t1 where exists(select 1 from t2 where t2.t1_f1=t1.f1);         \n count  \n--------\n 500000\n(1 row)\n\nTime: 3779.401 ms (00:03.779)\n</code></pre> <pre><code>postgres=# set work_mem to '128MB';\nSET\nTime: 0.368 ms\npostgres=# explain  select count(1) from t1 where exists(select 1 from t2 where t2.t1_f1=t1.f1);\n                                                    QUERY PLAN                                                    \n------------------------------------------------------------------------------------------------------------------\n Finalize Aggregate  (cost=101763.76..101763.77 rows=1 width=8)\n   -&gt;  Remote Subquery Scan on all (dn001,dn002)  (cost=101763.75..101763.76 rows=1 width=0)\n         -&gt;  Partial Aggregate  (cost=101663.75..101663.76 rows=1 width=8)\n               -&gt;  Hash Join  (cost=89660.00..101663.75 rows=505421 width=0)\n                     Hash Cond: (t2.t1_f1 = t1.f1)\n                     -&gt;  Remote Subquery Scan on all (dn001,dn002)  (cost=59840.00..69443.00 rows=505421 width=4)\n                           Distribute results by S: t1_f1\n                           -&gt;  HashAggregate  (cost=59740.00..64794.21 rows=505421 width=4)\n                                 Group Key: t2.t1_f1\n                                 -&gt;  Seq Scan on t2  (cost=0.00..52240.00 rows=3000000 width=4)\n                     -&gt;  Hash  (cost=17420.00..17420.00 rows=1000000 width=4)\n                           -&gt;  Seq Scan on t1  (cost=0.00..17420.00 rows=1000000 width=4)\n(12 rows)\n\nTime: 4.739 ms\npostgres=# select count(1) from t1 where exists(select 1 from t2 where t2.t1_f1=t1.f1);         \n count  \n--------\n 500000\n(1 row)\n\nTime: 1942.037 ms (00:01.942)\npostgres=# \n</code></pre> <p>\u5927\u7ea6\u6709\u4e00\u500d\u6027\u80fd\u7684\u63d0\u5347</p>"},{"location":"guide/10-pg_clean/","title":"V2.3.0\u5347\u7ea7\u7279\u6027pg_clean\u4f7f\u7528\u8bf4\u660e","text":""},{"location":"guide/10-pg_clean/#1-pg_clean","title":"1. \u5b89\u88c5 pg_clean \u5de5\u5177\uff1a","text":"<p>\u8fde\u63a5\u4efb\u610f\u4e3bCN\uff1a</p> <pre><code>CREATE EXTENSION pg_clean;\n</code></pre>"},{"location":"guide/10-pg_clean/#2","title":"2. \u6784\u9020\u4e24\u9636\u6bb5\u4e8b\u52a1\u6b8b\u7559\u7528\u4f8b\uff1a","text":"<p>session1\u2014cn1 </p> <pre><code>begin; \ncreate table a (id int); \nprepare transaction 'create_a';\nset xc_maintenance_mode = on;\nexecute direct on (dn002) 'rollback prepared ''create_a''';\nset xc_maintenance_mode = off;\n\\q\n</code></pre> <p>\u8be5\u7528\u4f8b\u4e2d\u6211\u4eec\u521b\u5efa\u4e86\u4e00\u4e2agid\u4e3a 'create_a' \u7684\u4e24\u9636\u6bb5\u4e8b\u52a1\uff0c\u7136\u540e\u5c06 xc_maintenance_mode \u6253\u5f00\uff0c\u4f7f\u5f97\u8be5\u4e8b\u52a1\u4ec5\u5728dn002\u4e2d\u6267\u884crollback\u3002</p>"},{"location":"guide/10-pg_clean/#3","title":"3. \u67e5\u627e\u96c6\u7fa4\u4e2d\u4e24\u9636\u6bb5\u4e8b\u52a1\u6b8b\u7559\uff1a","text":"<p>session2\u2014cn2  </p> <pre><code>select * from pg_clean_check_txn();\n</code></pre> <p></p> <p>\u4e0a\u56fe\u6253\u5370\u51fa\u4e86\u96c6\u7fa4\u4e2d\u6b8b\u7559\u7684\u4e24\u9636\u6bb5\u4e8b\u52a1\u3002\u5176\u4e2dgid\u8868\u793a\u8be5\u4e8b\u52a1\u7684\u5168\u5c40\u6807\u8bc6\uff0cglobal_transaction_status\u8868\u793a\u8be5\u4e8b\u52a1\u5728\u5168\u5c40\u7684\u72b6\u6001\uff0ctransaction_status_on_allnodes\u8868\u793a\u8be5\u4e8b\u52a1\u5728\u6240\u6709\u8282\u70b9\u4e2d\u7684\u72b6\u6001\u3002</p>"},{"location":"guide/10-pg_clean/#4-2pc","title":"4. \u67e5\u770b2PC\u6b8b\u7559\u6587\u4ef6\u540d","text":"<p>\u67e5\u8be2\u8282\u70b9cn1\u4e2d\u6570\u636e\u76ee\u5f55pg_2pc\u4e0b\u6240\u6709\u76842PC\u6b8b\u7559\u6587\u4ef6\u540d  </p> <p>session1\u2014cn1 </p> <pre><code>    postgres=# select * from pgxc_get_record_list();\n     pgxc_get_record_list \n    ----------------------\n     create_a\n    (1 row)\n</code></pre>"},{"location":"guide/10-pg_clean/#5","title":"5. \u6e05\u7406\u96c6\u7fa4\u4e2d\u4e24\u9636\u6bb5\u4e8b\u52a1\u6b8b\u7559\uff1a","text":"<p>session2\u2014cn2</p> <pre><code>select * from pg_clean_execute();\n</code></pre> <p></p> <p>\u4e0a\u56fe\u6253\u5370\u4e86\u6240\u6709\u6b8b\u7559\u7684\u4e24\u9636\u6bb5\u4e8b\u52a1\uff0c\u4ee5\u53ca\u5bf9\u5b83\u4eec\u6267\u884c\u7684\u64cd\u4f5c\u3002\u5176\u4e2doperation\u8868\u793a\u5bf9\u4e8b\u52a1\u5728\u6bcf\u4e2a\u8282\u70b9\u6267\u884c\u7684\u64cd\u4f5c\uff0coperation_status\u8868\u793a\u8be5\u64cd\u4f5c\u662f\u5426\u6267\u884c\u6210\u529f\u3002\u7531\u4e8e\u8be5\u4e8b\u52a1\u7684\u5168\u5c40\u4e8b\u52a1\u72b6\u6001\u4e3aABORT\u56e0\u6b64\uff0c\u6211\u4eec\u53bb\u5230\u6bcf\u4e2a\u72b6\u6001\u4e3aprepare\u7684\u8282\u70b9\u4e2d\u5bf9\u8be5\u4e8b\u52a1\u6267\u884crollback\u64cd\u4f5c\u3002</p>"},{"location":"guide/10-pg_clean/#6","title":"6. \u68c0\u67e5\u5df2\u6e05\u7406\u7684\u4e24\u9636\u6bb5\u4e8b\u52a1\u662f\u5426\u6b8b\u7559\u6587\u4ef6\u8bb0\u5f55\uff1a","text":"<p>session1\u2014cn1</p> <pre><code>    postgres=# select * from pgxc_get_record_list();\n     pgxc_get_record_list \n    ----------------------\n\n    (1 row)\n</code></pre> <p>\u7531\u4e8e\u5728\u4e0a\u4e2a\u6b65\u9aa4pg_clean_execute\u6267\u884c\u6210\u529f\uff0c\u56e0\u6b64\u5df2\u7ecf\u56de\u6eda\u7684\u4e8b\u52a1'create_a'\u5728\u6240\u6709\u8282\u70b9\u7684\u6587\u4ef6\u8bb0\u5f55\u5747\u5df2\u5220\u9664\uff0c\u8fd9\u91cc\u6211\u4eec\u5728cn1\u67e5\u770b\u6240\u67092pc\u6587\u4ef6\u8bb0\u5f55\uff0c\u663e\u793a\u4e3a\u7a7a\uff0c\u7ed3\u679c\u6b63\u786e\u3002</p>"},{"location":"guide/11-pg_unlock/","title":"V2.3.0\u5347\u7ea7\u7279\u6027pg_unlock\u4f7f\u7528\u8bf4\u660e","text":""},{"location":"guide/11-pg_unlock/#1-pg_unlock","title":"1. \u5b89\u88c5 pg_unlock \u5de5\u5177\uff1a","text":"<p>\u8fde\u63a5\u4efb\u610f\u4e3bCN\uff1a</p> <pre><code>CREATE EXTENSION pg_unlock;\n</code></pre>"},{"location":"guide/11-pg_unlock/#2","title":"2. \u6784\u9020\u5206\u5e03\u5f0f\u6b7b\u9501\u7528\u4f8b","text":"<p>session1\u2014cn1:</p> <pre><code>postgres=# begin; select * from a; \n</code></pre> <p>session2\u2014cn2:</p> <pre><code>postgres=# begin; select * from b; \n</code></pre> <p>session1\u2014cn1:</p> <pre><code>postgres=# drop table b;\n</code></pre> <p>session2\u2014cn2:</p> <pre><code>postgres=# drop table a;\n</code></pre>"},{"location":"guide/11-pg_unlock/#3","title":"3. \u67e5\u627e\u4e8b\u52a1\u95f4\u4f9d\u8d56\u5173\u7cfb(\u4e0d\u68c0\u6d4b\u6b7b\u9501)","text":"<p>session3\u2014cn1:</p> <pre><code>postgres=# select * from pg_unlock_check_dependency();\n dependencyid |      dependency       |    nodename     |              query              \n--------------+-----------------------+-----------------+---------------------------------\n            0 | 0:1998:5 --&gt; 1:1995:1 | cn001 --&gt; cn002 | drop table b; --&gt; drop table a;\n            1 | 1:1995:1 --&gt; 0:1998:5 | cn002 --&gt; cn001 | drop table a; --&gt; drop table b;\n(2 rows)\n\n</code></pre> <p>\u4e0a\u8ff0\u7528\u4f8b\u4e2d\u7684\u4e8b\u52a1\u95f4\u7b49\u5f85\u5173\u7cfb\u3002\u5176\u4e2d dependencyid \u8868\u793a\u8bb0\u5f55\u6570\uff0c dependency \u4e2d\u5c55\u793a\u4e86\u4e8b\u52a1\u95f4\u7b49\u5f85\u5173\u7cfb\uff0c\u5176\u4e2d\u6bcf\u4e2a\u4e8b\u52a1\u4f7f\u7528\u5176 global transactionid \u6765\u8868\u793a\u3002\"0:1998:5 --&gt; 1:1995:1\"\u8868\u793a\u8bb0\u5f550\u7684\u4e8b\u52a1\"1998:5\"\u7b49\u5f85\u8bb0\u5f551\u7684\u4e8b\u52a1\"1995:1\"\u3002</p>"},{"location":"guide/11-pg_unlock/#4","title":"4. \u67e5\u627e\u96c6\u7fa4\u4e2d\u7684\u6b7b\u9501(\u4e0d\u89e3\u5f00\u6b7b\u9501)","text":"<pre><code>postgres=# select * from pg_unlock_check_deadlock();\n deadlockid |                   deadlocks                   | nodename |     query     \n------------+-----------------------------------------------+----------+---------------\n          0 | 0:1998:5       (100.105.50.198 :30004       )+| cn001   +| drop table b;+\n            | 1:1995:1       (100.105.50.198 :30005       ) | cn002    | drop table a;\n(1 row)\n\n</code></pre> <p>\u4e0a\u8ff0\u7528\u4f8b\u4e2d\u5b58\u5728\u7684\u6240\u6709\u6b7b\u9501\u3002\u5176\u4e2d deadlockid \u8868\u793a\u6b7b\u9501\u7684\u8bb0\u5f55\u6570\uff0cdeadlocks \u4e2d\u5c55\u793a\u4e86\u6bcf\u4e2a\u6b7b\u9501\u4e2d\u5305\u542b\u7684\u6240\u6709\u4e8b\u52a1(\u8fd9\u4e9b\u4e8b\u52a1\u4e4b\u95f4\u7531\u201c+\u201d\u53f7\u8fde\u63a5)\uff0c\u5e76\u4e14\u8fd8\u6253\u5370\u51fa\u4e86\u6bcf\u4e2a\u4e8b\u52a1\u7684\u53d1\u8d77\u8282\u70b9\u7684 ip \u548c port\u3002</p>"},{"location":"guide/11-pg_unlock/#5","title":"5. \u68c0\u6d4b\u6b7b\u9501\u5e76\u89e3\u5f00\u6b7b\u9501","text":"<pre><code>postgres=# select * from pg_unlock_execute();\n executetime | txnindex |                  rollbacktxnifo                  | nodename | cancel_query  \n-------------+----------+--------------------------------------------------+----------+---------------\n           0 |        0 | 0:1998:5       (100.105.50.198 :30004          ) | cn001    | drop table b;\n(1 row)\n\n</code></pre> <p>\u4e0a\u8ff0\u7528\u4e86\u89e3\u5f00\u6b7b\u9501\u6240\u7ed3\u675f\u7684\u4e8b\u52a1\u3002\u5176\u4e2d executetime \u8868\u793a\u6267\u884c\u7ed3\u675f\u4e8b\u52a1\u7684\u6b21\u6570\uff0c\u56e0\u4e3a\u82e5\u96c6\u7fa4\u4e2d\u5728\u7b2c\u4e00\u6b21\u7ed3\u675f\u4e8b\u52a1\u89e3\u5f00\u6b7b\u9501\u4e4b\u540e\uff0c\u53ef\u80fd\u5f62\u6210\u65b0\u7684\u6b7b\u9501\u6216\u8005\u7b2c\u4e00\u6b21\u68c0\u6d4b\u8fc7\u7a0b\u4e2d\u6b7b\u9501\u6570\u76ee\u5927\u4e8e 50\uff0c\u53ea\u89e3\u5f00\u4e86\u90e8\u5206\u6b7b\u9501;txnindex \u8868\u793a\u7ed3\u675f\u4e8b\u52a1\u7684\u8bb0\u5f55\u6570;rollbacktxninfo \u8868\u793a\u7ed3\u675f\u4e8b\u52a1\u7684\u4fe1\u606f\uff0c\u540c\u6837\u8fd9\u4e2a\u4fe1\u606f\u91cc\u5305\u62ec\u4e8b\u52a1\u7684 global transactionid\uff0c ip \u548c port\u3002</p>"},{"location":"guide/11-pg_unlock/#6","title":"6. \u5206\u6790\u8fc7\u7a0b","text":"<p>1\uff09\u5728\u4e0a\u8ff0\u7528\u4f8b\u4e2d\uff0c\u5728 CN1 \u4e2d\u53d1\u8d77\u4e86\u4e8b\u52a1\u201c1998:5\u201d\uff0c\u5728 CN2 \u4e2d\u53d1\u8d77\u4e86\u4e8b\u52a1\u201c1995:1\u201d\u3002  2\uff09\u9996\u5148\uff0c\u5728\u4e24\u4e2a session \u4e2d\u6267\u884c\u201cselect\u201d\u8bed\u53e5\uff0c\u4e8b\u52a1\u201c1998:5\u201d\u83b7\u53d6\u4e86\u8868 a \u7684 ACCESS SHARE \u9501\uff0c\u4e8b\u52a1\u201c1995:1\u201d\u83b7\u53d6\u4e86\u8868 b \u7684 ACCESS SHARE \u9501\u3002 3\uff09\u7136\u540e\uff0c\u4e24\u4e2a session \u4e2d\u5206\u522b\u6267\u884c\u201cdrop table\u201d\u8bed\u53e5\uff0c\u4e8b\u52a1\u201c1998:5\u201d\u7533\u8bf7\u8868 b \u7684 ACCESS EXCLUSIVE \u9501\uff0c\u8fd9\u4e0e\u201c1995:1\u201d\u6301\u6709\u7684\u8868 b \u7684 ACCESS SHARE \u9501\u51b2\u7a81\uff0c\u56e0\u6b64 \u201c1998:5 --&gt; 1995:1\u201d\u3002\u540c\u7406\uff0c\u4e5f\u6709\u201c1995:1 --&gt; 1998:5\u201d\u3002 4) \u81f3\u6b64\u4e24\u4e2a\u4e8b\u52a1\u95f4\u6b7b\u9501\u5f62\u6210\u3002\u7531\u4e0a\u8ff0\u53ef\u77e5\uff0c\u68c0\u6d4b\u5230\u6b7b\u9501\u4e4b\u540e\uff0c\u7a0b\u5e8f\u7ed3\u675f\u4e86\u4e8b\u52a1 \u201c1998:5\u201d\u3002</p>"},{"location":"guide/12-opentenbase_subscription/","title":"V2.3.0\u5347\u7ea7\u7279\u6027opentenbase_subscription\u4f7f\u7528\u8bf4\u660e","text":""},{"location":"guide/12-opentenbase_subscription/#1-wal_level","title":"1. \u4fee\u6539wal_level","text":"<p>\u56e0\u4e3a\u591a\u6d3b\u4f7f\u7528\u7684\u662f\u903b\u8f91\u590d\u5236\u6765\u5b9e\u73b0\uff0c\u56e0\u6b64\u9700\u8981\u914d\u7f6e\u591a\u6d3b\u7684\u6240\u6709\u96c6\u7fa4\u4e2d\uff0c\u6240\u6709CN/DN\u8282\u70b9\u7684 wal_level \u5168\u90e8\u8bbe\u7f6e\u4e3a logical</p> <pre><code>vim postgres.comf\nwal_level = logical\n:wq\n</code></pre>"},{"location":"guide/12-opentenbase_subscription/#2-opentenbase_subscription","title":"2. \u5b89\u88c5 opentenbase_subscription \u5de5\u5177\uff1a","text":"<p>\u8fde\u63a5\u914d\u7f6e\u591a\u6d3b\u76842\u4e2a\u96c6\u7fa4\u5206\u522b\u5404\u81ea\u7684CN\uff08\u9488\u5bf9\u4efb\u610f\u96c6\u7fa4\uff0c\u9009\u62e9\u4efb\u610f\u4e00\u4e2aCN\u6267\u884c\u5373\u53ef\uff0c\u4f46\u662f2\u4e2a\u96c6\u7fa4\u90fd\u9700\u8981\u5b89\u88c5\uff09\u6267\u884c\uff1a</p> <pre><code>CREATE EXTENSION opentenbase_subscription;\n</code></pre>"},{"location":"guide/12-opentenbase_subscription/#3","title":"3. \u5355\u5411\u540c\u6b65\u914d\u7f6e","text":"<p>\u8fd9\u91cc\u4ee5\u53d1\u5e03\u7aef1CN+2DN\uff0c\u8ba2\u9605\u7aef1CN+2DN\u4e3a\u4f8b\uff0c\u5176\u4ed6\u96c6\u7fa4\u89c4\u6a21\u914d\u7f6e\u6b65\u9aa4\u76f8\u4f3c</p>"},{"location":"guide/12-opentenbase_subscription/#31-cn","title":"3.1 \u8fde\u63a5\u53d1\u5e03\u7aef\u4efb\u610fCN\u5efa\u8868","text":"<pre><code>postgres=# create table users(id int,name varchar(30),f3 int,PRIMARY KEY(id));\npostgres=# insert into users select i, 'a', i+1 from generate_series(1, 399999) i;\nINSERT 0 399999\n</code></pre>"},{"location":"guide/12-opentenbase_subscription/#32-dn","title":"3.2 \u5728\u53d1\u5e03\u7aef DN\u4e0a\u8fdb\u884c\u6570\u636e\u53d1\u5e03","text":"<p>\u6ce8\u610f\uff1a\u5982\u679c\u6709\u53d1\u5e03\u7aef\u96c6\u7fa4\u6709\u591a\u4e2aDN\uff0c\u5219\u6bcf\u4e2aDN\u90fd\u9700\u8981\u8fdb\u884c\u914d\u7f6e\u53d1\u5e03 </p> <p>\u53d1\u5e03\u7aefDN1:</p> <pre><code>CREATE PUBLICATION mypub_dn001 FOR ALL TABLES;\n</code></pre> <p>\u53d1\u5e03\u7aefDN2:</p> <pre><code>CREATE PUBLICATION mypub_dn002 FOR ALL TABLES;\n</code></pre>"},{"location":"guide/12-opentenbase_subscription/#33-cn","title":"3.3 \u5728\u8ba2\u9605\u7aef CN\u4e0a\u8fdb\u884c\u6570\u636e\u8ba2\u9605","text":"<p>\u8ba2\u9605\u7aefCN\uff1a</p> <pre><code>create table users(id int,name varchar(30),f3 int,PRIMARY KEY(id)) ;\n\nCREATE OPENTENBASE SUBSCRIPTION sub_dn001 CONNECTION 'host=100.105.39.157 port=20008 user=jennyer dbname=postgres' PUBLICATION mypub_dn001 WITH (connect=true, enabled=true, create_slot=true, copy_data=true, synchronous_commit=on, ignore_pk_conflict = true, parallel_number=4);\n\nCREATE OPENTENBASE SUBSCRIPTION sub_dn002 CONNECTION 'host=100.105.39.157 port=20009 user=jennyer dbname=postgres' PUBLICATION mypub_dn002 WITH (connect=true, enabled=true, create_slot=true, copy_data=true, synchronous_commit=on, ignore_pk_conflict = true, parallel_number=4);\n\n</code></pre> <p>\u67e5\u8be2\u9a8c\u8bc1\u4ece\u53d1\u5e03\u7aef\u540c\u6b65\u8fc7\u6765\u7684\u5b58\u91cf\u6570\u636e</p> <p>\u8ba2\u9605\u7aefCN\uff1a</p> <pre><code>select count(*) from users;\n count  \n--------\n 399999\n(1 row)\n\n</code></pre>"},{"location":"guide/12-opentenbase_subscription/#34","title":"3.4 \u9a8c\u8bc1\u589e\u91cf\u6570\u636e\u540c\u6b65","text":"<p>\u8fde\u63a5\u53d1\u5e03\u7aefCN\u63d2\u5165\u589e\u91cf\u6570\u636e\uff1a</p> <pre><code>insert into users select i, 'a', i+1 from generate_series(400000, 500000) i;\nINSERT 0 100001\n</code></pre> <p>\u67e5\u8be2\u9a8c\u8bc1\u4ece\u53d1\u5e03\u7aef\u540c\u6b65\u8fc7\u6765\u7684\u589e\u91cf\u6570\u636e \u8ba2\u9605\u7aefCN\uff1a</p> <pre><code>select count(*) from users;\n count  \n--------\n 500000\n(1 row)\n</code></pre>"},{"location":"guide/12-opentenbase_subscription/#4","title":"4. \u53cc\u5411\u540c\u6b65\u914d\u7f6e","text":""},{"location":"guide/12-opentenbase_subscription/#41","title":"4.1 \u53cc\u6d3b\u96c6\u7fa4\u5404\u81ea\u5efa\u8868","text":"<p>\u96c6\u7fa41-CN\uff1a</p> <pre><code>create table test(id int,name varchar(30),PRIMARY KEY(id));\n</code></pre> <p>\u96c6\u7fa42-CN\uff1a </p> <pre><code>create table test(id int,name varchar(30),PRIMARY KEY(id));\n</code></pre>"},{"location":"guide/12-opentenbase_subscription/#42-1dn","title":"4.2 \u96c6\u7fa41\u6700\u4e3a\u53d1\u5e03\u7aef\uff0c\u5728\u6240\u6709DN\u4e0a\u8fdb\u884c\u6570\u636e\u53d1\u5e03","text":"<p>\u96c6\u7fa41-DN1:</p> <pre><code>CREATE PUBLICATION cluster1_dn001 FOR ALL TABLES;\n</code></pre> <p>\u96c6\u7fa41-DN2\uff1a</p> <pre><code>CREATE PUBLICATION cluster1_dn002 FOR ALL TABLES;\n</code></pre>"},{"location":"guide/12-opentenbase_subscription/#43-2dn","title":"4.3 \u96c6\u7fa42\u6700\u4e3a\u53d1\u5e03\u7aef\uff0c\u5728\u6240\u6709DN\u4e0a\u8fdb\u884c\u6570\u636e\u53d1\u5e03","text":"<p>\u96c6\u7fa42-DN1:</p> <pre><code>CREATE PUBLICATION cluster2_dn001 FOR ALL TABLES;\n</code></pre> <p>\u96c6\u7fa42-DN2\uff1a</p> <pre><code>CREATE PUBLICATION cluster2_dn002 FOR ALL TABLES;\n</code></pre>"},{"location":"guide/12-opentenbase_subscription/#44-1-cn","title":"4.4 \u96c6\u7fa41\u6700\u4e3a\u8ba2\u9605\u7aef, \u5728\u4efb\u610fCN\u4e0a\u8fdb\u884c\u6570\u636e\u8ba2\u9605","text":"<p>\u96c6\u7fa41-CN\uff1a</p> <pre><code>CREATE OPENTENBASE SUBSCRIPTION sub_cluster2_dn001 CONNECTION 'host=100.105.50.198 port=20008 user=jennyer dbname=postgres' PUBLICATION cluster2_dn001 WITH (connect=true, enabled=true, create_slot=true, copy_data=true, synchronous_commit=on, ignore_pk_conflict = true, parallel_number=4);\nCREATE OPENTENBASE SUBSCRIPTION sub_cluster2_dn002 CONNECTION 'host=100.105.50.198 port=20009 user=jennyer dbname=postgres' PUBLICATION cluster2_dn002 WITH (connect=true, enabled=true, create_slot=true, copy_data=true, synchronous_commit=on, ignore_pk_conflict = true, parallel_number=4);\n</code></pre>"},{"location":"guide/12-opentenbase_subscription/#45-2-cn","title":"4.5 \u96c6\u7fa42\u6700\u4e3a\u8ba2\u9605\u7aef, \u5728\u4efb\u610fCN\u4e0a\u8fdb\u884c\u6570\u636e\u8ba2\u9605","text":"<p>\u96c6\u7fa42-CN\uff1a</p> <pre><code>CREATE OPENTENBASE SUBSCRIPTION sub_cluster1_dn001 CONNECTION 'host=100.105.39.157 port=20008 user=jennyer dbname=postgres' PUBLICATION cluster1_dn001 WITH (connect=true, enabled=true, create_slot=true, copy_data=true, synchronous_commit=on, ignore_pk_conflict = true, parallel_number=4);\nCREATE OPENTENBASE SUBSCRIPTION sub_cluster1_dn002 CONNECTION 'host=100.105.39.157 port=20009 user=jennyer dbname=postgres' PUBLICATION cluster1_dn002 WITH (connect=true, enabled=true, create_slot=true, copy_data=true, synchronous_commit=on, ignore_pk_conflict = true, parallel_number=4);\n</code></pre>"},{"location":"guide/12-opentenbase_subscription/#46-1","title":"4.6 \u96c6\u7fa41\u4e2d\u8fdb\u884c\u5199\u5165\u90e8\u5206\u6570\u636e","text":"<p>\u96c6\u7fa41-CN\uff1a</p> <pre><code>insert into test values(1,'a'),(3,'a'),(5,'a'),(7,'a'),(9,'a'),(11,'a'),(13,'a'),(15,'a');\n</code></pre>"},{"location":"guide/12-opentenbase_subscription/#47-2","title":"4.7 \u96c6\u7fa42\u4e2d\u8fdb\u884c\u5199\u5165\u90e8\u5206\u6570\u636e","text":"<p>\u96c6\u7fa42-CN\uff1a </p> <pre><code>insert into test values(2,'b'),(4,'b'),(6,'b'),(8,'b'),(10,'b'),(12,'b'),(14,'b'),(16,'b');\n</code></pre>"},{"location":"guide/12-opentenbase_subscription/#48-1","title":"4.8 \u9a8c\u8bc1\u96c6\u7fa41\u540c\u6b65\u7684\u7ed3\u679c\uff08\u6570\u636e\u6765\u6e90\u672c\u7aef\u5199\u5165\u548c\u8fdc\u7aef\u540c\u6b65\uff09","text":"<p>\u96c6\u7fa41-CN\uff1a</p> <pre><code>select  * from test;\npostgres=# select  * from test order by 1;\n id | name \n----+------\n  1 | a\n  2 | b\n  3 | a\n  4 | b\n  5 | a\n  6 | b\n  7 | a\n  8 | b\n  9 | a\n 10 | b\n 11 | a\n 12 | b\n 13 | a\n 14 | b\n 15 | a\n 16 | b\n(16 rows)\n</code></pre>"},{"location":"guide/12-opentenbase_subscription/#49-2","title":"4.9 \u9a8c\u8bc1\u96c6\u7fa42\u540c\u6b65\u7684\u5168\u91cf\u7ed3\u679c\uff08\u6570\u636e\u6765\u6e90\u672c\u7aef\u5199\u5165\u548c\u8fdc\u7aef\u540c\u6b65\uff09","text":"<p>\u96c6\u7fa42-CN\uff1a</p> <pre><code>postgres=# select  * from test order by 1;\n id | name \n----+------\n  1 | a\n  2 | b\n  3 | a\n  4 | b\n  5 | a\n  6 | b\n  7 | a\n  8 | b\n  9 | a\n 10 | b\n 11 | a\n 12 | b\n 13 | a\n 14 | b\n 15 | a\n 16 | b\n(16 rows)\n</code></pre> <p>\u53ef\u4ee5\u5728\u96c6\u7fa41\u6216\u80052\u4e0a\u4efb\u610f\u4e00\u65b9\u8fdb\u884c\u5199\u5165\uff0c\u6700\u7ec8\u96c6\u7fa41\u548c2\u90fd\u6709\u7740\u5168\u91cf\u6570\u636e\u3002</p>"},{"location":"guide/13-opentenbase_monitoring/","title":"Prometheus/Grafana\u53ef\u89c6\u5316\u76d1\u63a7","text":"<p>\u672c\u6b21\u76d1\u63a7\u5c06\u91c7\u7528Prometheus\u3001Grafana\u53ef\u89c6\u5316\u5de5\u5177\u4ee5\u53capostgres_exporter\u5bf9OpenTenBase\u8fdb\u884c\u5168\u9762\u76d1\u63a7\u548c\u4f18\u5316\u3002</p>"},{"location":"guide/13-opentenbase_monitoring/#_1","title":"\u5b89\u88c5\u76d1\u63a7","text":"<p>\u4f9d\u8d56\u73af\u5883\uff1aDocker</p>"},{"location":"guide/13-opentenbase_monitoring/#prometheus","title":"\u4e0b\u8f7dPrometheus","text":"<p>\u5728\u8fdb\u884c\u76d1\u63a7\u4f18\u5316\u65f6\uff0c\u60a8\u53ef\u4ee5\u4ecePrometheus\u5b98\u65b9\u7f51\u7ad9\u4e0b\u8f7d\u6700\u65b0\u7248\uff1ahttps://prometheus.io/download/</p> <p>\u60a8\u53ef\u4ee5\u9009\u62e9\u4e0b\u8f7d\u6e90\u4ee3\u7801\u5e76\u89e3\u538b\u4f7f\u7528\uff0c\u4e5f\u53ef\u4ee5\u901a\u8fc7Docker\u76f4\u63a5\u542f\u52a8\u3002\u672c\u6559\u7a0b\u5c06\u91cd\u70b9\u4ecb\u7ecd\u4f7f\u7528Docker\u8fdb\u884c\u5feb\u901f\u90e8\u7f72\u3002</p> <p>\u6267\u884c\u547d\u4ee4\uff1a</p> <p><code>docker run -d -p 9090:9090 -v /etc/prometheus:/etc/prometheus prom/prometheus</code></p> <p>\u5b8c\u6210\u6302\u8f7d\u540e\uff0c\u8bf7\u5bf9\u914d\u7f6e\u6587\u4ef6\u8fdb\u884c\u5fc5\u8981\u7684\u4fee\u6539\u4ee5\u786e\u4fdd\u7cfb\u7edf\u6b63\u5e38\u76d1\u63a7\u3002</p> <p><code>vim prometheus.yml</code></p> <pre><code># my global config\nglobal:\n  scrape_interval: 15s # Set the scrape interval to every 15 seconds. Default is every 1 minute.\n  evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute.\n  # scrape_timeout is set to the global default (10s).\n\n# Alertmanager configuration\nalerting:\n  alertmanagers:\n    - static_configs:\n        - targets:\n          # - alertmanager:9093\n\n# Load rules once and periodically evaluate them according to the global 'evaluation_interval'.\nrule_files:\n  # - \"first_rules.yml\"\n  # - \"second_rules.yml\"\n\n# A scrape configuration containing exactly one endpoint to scrape:\n# Here it's Prometheus itself.\nscrape_configs:\n  # The job name is added as a label `job=&lt;job_name&gt;` to any timeseries scraped from this config.\n  - job_name: \"prometheus\"\n\n    # metrics_path defaults to '/metrics'\n    # scheme defaults to 'http'.\n\n    static_configs:\n      - targets: [\"192.168.56.10:9090\"]\n  # \u4e3b\u8981\u4fee\u6539\u8fd9\u91cc\uff0c\u6dfb\u52a0\u6587\u4ef6\u5f62\u5f0f\u7684\u626b\u63cf\n  - job_name: \"node\"\n    file_sd_configs:\n    - refresh_interval: 10s\n      files:\n      - \"/etc/prometheus/conf/node*.yaml\"\n</code></pre> <p>\u5f53\u524dPrometheus\u7684\u914d\u7f6e\u91c7\u7528\u6587\u4ef6\u5f62\u5f0f\u8fdb\u884c\u670d\u52a1\u53d1\u73b0\u3002\u5728\u4fee\u6539\u914d\u7f6e\u65f6\uff0c\u65e0\u9700\u91cd\u65b0\u542f\u52a8\uff0c\u7cfb\u7edf\u5c06\u81ea\u52a8\u66f4\u65b0\u5e76\u751f\u6548\uff0c\u66f4\u65b0\u95f4\u9694\u4e3a10\u79d2\u3002</p> <p>\u4e3a\u4e86\u4fee\u6539\u76f8\u5173\u914d\u7f6e\u6587\u4ef6\uff0c\u9996\u5148\u521b\u5efa\u4e00\u4e2a\u540d\u4e3aconf\u7684\u76ee\u5f55\uff08<code>mkdir conf</code>\uff09\u7136\u540e\u901a\u8fc7cd\u547d\u4ee4\u8fdb\u5165\u76ee\u5f55\uff08<code>cd /etc/prometheus/conf</code>\uff09\u63a5\u7740\u4f7f\u7528vim\u7f16\u8f91\u5668\u6765\u4fee\u6539\u6587\u4ef6\uff08<code>vim node-ms.yaml</code>\uff09</p> <pre><code>- targets:\n  - \"ip:port\"\n  labels:\n    hostname: pg\n</code></pre> <p>\u4e3a\u4e86\u81ea\u5b9a\u4e49\u914d\u7f6e\u4fe1\u606f\uff0c\u8bf7\u5c06\u76f8\u5e94\u7684IP\u5730\u5740\u548c\u4e3b\u673a\u540d\u4fee\u6539\u4e3a\u60a8\u81ea\u5df1\u7684\u4fe1\u606f\u3002\u5b8c\u6210\u4fee\u6539\u540e\uff0c\u542f\u52a8Prometheus\u670d\u52a1\uff0c\u7136\u540e\u60a8\u53ef\u4ee5\u901a\u8fc7\u8bbf\u95eehttp://\u60a8\u7684IP\u5730\u5740:9090/ \u6765\u67e5\u770bPrometheus\u7684\u76d1\u63a7\u6570\u636e\u3002</p>"},{"location":"guide/13-opentenbase_monitoring/#grafana","title":"\u4e0b\u8f7dGrafana","text":"<p>\u4e3a\u4e86\u786e\u4fdd\u914d\u7f6e\u7684\u6301\u4e45\u6027\uff0c\u6211\u4eec\u53ef\u4ee5\u901a\u8fc7Docker\u5bb9\u5668\u4ee5\u6301\u4e45\u5316\u5f62\u5f0f\u542f\u52a8Grafana\u3002\u60a8\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\u6765\u542f\u52a8Grafana\u5bb9\u5668\uff0c\u5e76\u5728\u5bb9\u5668\u91cd\u542f\u540e\u4fdd\u7559\u914d\u7f6e\u4fe1\u606f\uff1a</p> <p><code>docker run -d -p 3000:3000 --name=grafana   --volume grafana-storage:/var/lib/grafana  grafana/grafana-enterprise</code></p> <p>\u542f\u52a8\u540e\uff0c\u60a8\u53ef\u4ee5\u5728\u6d4f\u89c8\u5668\u4e2d\u8f93\u5165http://\u60a8\u7684IP\u5730\u5740:3000/</p> <p>\u4f7f\u7528\u9ed8\u8ba4\u7684\u7528\u6237\u540d\u548c\u5bc6\u7801admin/admin\u767b\u5f55\uff0c\u4ee5\u67e5\u770bGrafana\u76d1\u63a7\u754c\u9762\u3002</p>"},{"location":"guide/13-opentenbase_monitoring/#_2","title":"\u914d\u7f6e\u6570\u636e\u6e90","text":"<p>\u5728\u8fd9\u91cc\uff0c\u60a8\u53ea\u9700\u586b\u5199URL\uff08http://ip:9090/ \uff09\u5373\u53ef\u4fdd\u5b58\u914d\u7f6e\u3002\u8fd9\u4e2aURL\u6307\u5411Prometheus\u7684\u5730\u5740\uff0cGrafana\u5c06\u901a\u8fc7\u8be5\u5730\u5740\u4e0ePrometheus\u5efa\u7acb\u8fde\u63a5\uff0c\u4ece\u800c\u83b7\u53d6\u6570\u636e\u7528\u4e8e\u5c55\u793a\u76d1\u63a7\u9762\u677f\u3002</p> <p></p>"},{"location":"guide/13-opentenbase_monitoring/#exporter","title":"\u4e0b\u8f7dExporter","text":"<p>Prometheus\u5b98\u65b9\u63d0\u4f9b\u4e86\u4e30\u5bcc\u7684Exporter\uff0c\u60a8\u53ef\u4ee5\u5728https://prometheus.io/docs/instrumenting/exporters/ \u627e\u5230\u76f8\u5173\u4fe1\u606f\u3002</p> <p>\u6211\u4eec\u53ef\u4ee5\u5b89\u88c5postgres_exporter\u6765\u76d1\u63a7\u6570\u636e\u5e93\uff0c\u5b98\u65b9\u5730\u5740\u4e3ahttps://github.com/prometheus-community/postgres_exporter\u3002</p> <p>\u540c\u6837\u53ef\u4ee5\u4ee5Docker\u542f\u52a8\uff1a</p> <p><code>docker run  --net=host  -e DATA_SOURCE_NAME=\"postgresql://opentenbase:@ip:port/postgres?sslmode=disable\"  quay.io/prometheuscommunity/postgres-exporter</code></p> <p>ip\u548chost\u4fee\u6539\u4e3a\u81ea\u5df1\u7684\u4fe1\u606f\u5373\u53ef\uff0c\u5b98\u65b9\u793a\u4f8b\u4e2d\u5bf9opentenbase\u7528\u6237\u5e76\u6ca1\u6709\u8bbe\u7f6e\u767b\u5f55\u5bc6\u7801\uff0c\u6211\u4eec\u4e5f\u4e0d\u8bbe\u7f6e\u5bc6\u7801\u8fdb\u884c\u767b\u5f55\u3002</p> <p>\u542f\u52a8\u540e\uff0c\u6211\u4eec\u9996\u5148\u767b\u5f55\u5230\u6570\u636e\u5e93\u4e2d\uff0c\u7136\u540e\u8fdb\u884c\u6570\u636e\u5e93\u7528\u6237\u7684\u76f8\u5173\u8bbe\u7f6e\u3002</p> <pre><code>CREATE OR REPLACE FUNCTION __tmp_create_user() returns void as $$\nBEGIN\n  IF NOT EXISTS (\n          SELECT                       -- SELECT list can stay empty for this\n          FROM   pg_catalog.pg_user\n          WHERE  usename = 'postgres_exporter') THEN\n    CREATE USER postgres_exporter;\n  END IF;\nEND;\n$$ language plpgsql;\n</code></pre> <pre><code>SELECT __tmp_create_user();\n\nDROP FUNCTION __tmp_create_user();\n\nALTER USER postgres_exporter WITH PASSWORD 'password';\n\nALTER USER postgres_exporter SET SEARCH_PATH TO postgres_exporter,pg_catalog;\n\nGRANT CONNECT ON DATABASE postgres TO postgres_exporter;\n\n-- OpenTenBase\u4e2d\u96c6\u6210\u7684PostgreSQL\u7248\u672c\u662f10\uff0c\u6240\u4ee5\u53ef\u4ee5\u6267\u884c\u4ee5\u4e0b\u8bed\u53e5\uff0c\u5386\u53f2\u7248\u672c\u53ef\u524d\u5f80\u5f00\u6e90\u5730\u5740\u8fdb\u884c\u67e5\u770b\u3002\nGRANT pg_monitor to postgres_exporter;\n</code></pre>"},{"location":"guide/13-opentenbase_monitoring/#_3","title":"\u914d\u7f6e\u76d1\u63a7\u9762\u677f","text":"<p>\u4e00\u65e6\u6240\u6709\u7ec4\u4ef6\u90fd\u6210\u529f\u542f\u52a8\uff0c\u63a5\u4e0b\u6765\u6211\u4eec\u9700\u8981\u524d\u5f80\u5e02\u573a\u5bfb\u627e\u6211\u4eec\u60f3\u8981\u7684\u76d1\u63a7\u9762\u677f\u3002\u4f60\u53ef\u4ee5\u8bbf\u95eeGrafana\u7684\u5b98\u65b9\u4eea\u8868\u677f\u5e02\u573a\uff1ahttps://grafana.com/grafana/dashboards/?search=postgresql</p> <p></p> <p>\u4e00\u65e6\u627e\u5230\u60a8\u559c\u6b22\u7684\u9762\u677f\uff0c\u8bf7\u70b9\u51fb\u6b64\u5904\u8fdb\u884c\u5bfc\u5165\u3002\u4ee5\u4e0b\u4ee5ID\uff1a9628\u4e3a\u793a\u4f8b\u8fdb\u884c\u5bfc\u5165\u64cd\u4f5c\u3002</p> <p>\u8fd9\u91cc\u9009\u62e9\u6211\u4eec\u7684\u6570\u636e\u6e90\u3002</p> <p></p> <p>\u8ba9\u6211\u4eec\u6765\u770b\u4e00\u4e0b\u6548\u679c\u5982\u4f55\uff1a</p> <p></p>"},{"location":"guide/14-kubeblocks-support/","title":"OpenTenBase KubeBlocks \u63d2\u4ef6","text":"<p>\u6b64\u6587\u4ef6\u5939\u5305\u542b\u4e24\u4e2a Helm \u56fe\u8868\uff0c\u7528\u4e8e\u5728 Kubernetes \u96c6\u7fa4\u4e0a\u90e8\u7f72 OpenTenBase KubeBlocks \u63d2\u4ef6\u3002\u4f7f\u7528\u6b64\u63d2\u4ef6\uff0c\u60a8\u53ef\u4ee5\u5728 Kubernetes \u4e0a\u90e8\u7f72\u548c\u7ba1\u7406 OpenTenBase \u96c6\u7fa4\u3002</p> <p>\u76ee\u524d\uff0c\u5df2\u7ecf\u652f\u6301\u64cd\u4f5c\u7cfb\u7edf\u67b6\u6784 <code>amd64</code> \u548c <code>arm64</code>\u3002\u60a8\u53ef\u4ee5\u6309\u7167\u4ee5\u4e0b\u6b65\u9aa4\u5728\u60a8\u7684\u7b14\u8bb0\u672c\u7535\u8111\uff08\u5305\u62ec Mac M1\uff09\u4e0a\u90e8\u7f72 OpenTenBase \u96c6\u7fa4\u3002\u8fd9\u663e\u8457\u964d\u4f4e\u4e86\u7528\u6237\u4f53\u9a8c OpenTenBase \u7684\u95e8\u69db\u548c\u96be\u5ea6\u3002</p>"},{"location":"guide/14-kubeblocks-support/#kubeblocks","title":"\u4ec0\u4e48\u662f KubeBlocks\uff1f","text":"<p>KubeBlocks \u662f\u4e00\u4e2a\u5f00\u6e90\u7684\u63a7\u5236\u5e73\u9762\u8f6f\u4ef6\uff0c\u8fd0\u884c\u5e76\u7ba1\u7406\u6570\u636e\u5e93\u3001\u6d88\u606f\u961f\u5217\u548c\u5176\u4ed6\u6570\u636e\u57fa\u7840\u8bbe\u65bd\u5728 K8s \u4e0a\u3002KubeBlocks \u7684\u540d\u5b57\u7075\u611f\u6765\u81ea Kubernetes \u548c LEGO \u79ef\u6728\uff0c\u610f\u5473\u7740\u5728 K8s \u4e0a\u8fd0\u884c\u548c\u7ba1\u7406\u6570\u636e\u57fa\u7840\u8bbe\u65bd\u53ef\u4ee5\u50cf\u73a9 LEGO \u79ef\u6728\u4e00\u6837\u6807\u51c6\u5316\u548c\u9ad8\u6548\u3002</p> <p>\u5173\u4e8e KubeBlocks \u7684\u66f4\u591a\u4fe1\u606f\u53ef\u4ee5\u5728 KubeBlocks GitHub repository \u548c KubeBlocks website \u4e2d\u627e\u5230\u3002\u60a8\u53ef\u4ee5\u5728 KubeBlocks Add-ons GitHub repository \u4e2d\u627e\u5230\u6240\u6709\u652f\u6301\u7684\u63d2\u4ef6\u3002</p>"},{"location":"guide/14-kubeblocks-support/#_1","title":"\u524d\u63d0\u6761\u4ef6","text":"<p>\u5728\u60a8\u90e8\u7f72 OpenTenBase KubeBlocks \u63d2\u4ef6\u4e4b\u524d\uff0c\u60a8\u9700\u8981\u5177\u5907\u4ee5\u4e0b\u524d\u63d0\u6761\u4ef6\uff1a</p> <ul> <li>\u4e00\u4e2a Kubernetes \u96c6\u7fa4\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528 minikube \u521b\u5efa\u4e00\u4e2a\u672c\u5730\u96c6\u7fa4\u8fdb\u884c\u6d4b\u8bd5</li> <li>\u5728\u672c\u5730\u673a\u5668\u4e0a\u5b89\u88c5 <code>kubectl</code> \u547d\u4ee4\u884c\u5de5\u5177</li> <li>\u5728\u672c\u5730\u673a\u5668\u4e0a\u5b89\u88c5 <code>helm</code> \u547d\u4ee4\u884c\u5de5\u5177</li> <li>\u5b89\u88c5 <code>kbcli</code> \u547d\u4ee4\u884c\u5de5\u5177\u4ee5\u5b89\u88c5 KubeBlocks \u63a7\u5236\u5e73\u9762</li> </ul>"},{"location":"guide/14-kubeblocks-support/#kubeblocks_1","title":"\u5b89\u88c5 KubeBlocks","text":"<p>\u8bf7\u53c2\u8003 KubeBlocks installation guide \u5728\u60a8\u7684 Kubernetes \u96c6\u7fa4\u4e0a\u5b89\u88c5 <code>kbcli</code> \u548c KubeBlocks \u63a7\u5236\u5e73\u9762\u3002</p>"},{"location":"guide/14-kubeblocks-support/#opentenbase","title":"\u90e8\u7f72 OpenTenBase \u63d2\u4ef6","text":"<p>\u8981\u5728\u60a8\u7684 Kubernetes \u96c6\u7fa4\u4e0a\u90e8\u7f72 OpenTenBase \u63d2\u4ef6\uff0c\u8bf7\u6309\u7167\u4ee5\u4e0b\u6b65\u9aa4\u64cd\u4f5c\uff1a</p> <pre><code>$ helm install opentenbase ./opentenbase\n</code></pre> <p>\u68c0\u67e5 ClusterDefinition \u548c ClusterVersion\uff1a</p> <pre><code>$ kubectl get cd opentenbase\nNAME          MAIN-COMPONENT-NAME   STATUS      AGE\nopentenbase   gtm                   Available   11m\n\n$ kubectl get cv |grep opentenbase\nopentenbase-2.5.0     opentenbase          Available   12m\n</code></pre>"},{"location":"guide/14-kubeblocks-support/#opentenbase_1","title":"\u521b\u5efa\u4e00\u4e2a OpenTenBase \u96c6\u7fa4","text":"<p>\u8fd0\u884c\u4e0b\u5217\u6307\u4ee4\u521b\u5efa\u4e00\u4e2a OpenTenBase \u96c6\u7fa4:</p> <pre><code>$ helm install otb ./opentenbase-cluster\n</code></pre> <p>\u6b64\u547d\u4ee4\u5c06\u521b\u5efa\u4e00\u4e2a\u5305\u542b\u4e00\u4e2a GTM\u3001\u4e00\u4e2a Coordinator \u548c\u4e24\u4e2a Datanode \u7684 OpenTenBase \u96c6\u7fa4\u3002\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u68c0\u67e5 OpenTenBase \u96c6\u7fa4\u7684\u72b6\u6001\uff1a</p> <pre><code>$ kubectl get cluster otb\nNAME   CLUSTER-DEFINITION   VERSION              TERMINATION-POLICY   STATUS     AGE\notb    opentenbase          opentenbase-2.5.0   Delete               Creating   12s\n</code></pre> <p>\u68c0\u67e5 OpenTenBase \u96c6\u7fa4\u7684 pods\uff1a</p> <pre><code>$ kubectl get pods -l app.kubernetes.io/instance=otb\nNAME         READY   STATUS    RESTARTS   AGE\notb-cn-0-0   1/1     Running   0          2m39s\notb-dn-0-0   2/2     Running   0          2m39s\notb-dn-1-0   2/2     Running   0          2m39s\notb-gtm-0    1/1     Running   0          2m39s\n</code></pre> <p>\u68c0\u67e5\u6240\u6709\u7ec4\u4ef6\u7684\u72b6\u6001\uff1a</p> <pre><code>$ kbcli cluster describe otb\nName: otb        Created Time: Apr 07,2024 15:28 UTC+0800\nNAMESPACE   CLUSTER-DEFINITION   VERSION              STATUS     TERMINATION-POLICY   \ndefault     opentenbase          opentenbase-2.5.0   Updating   Delete               \n\nEndpoints:\nCOMPONENT   MODE        INTERNAL                                  EXTERNAL   \ngtm         ReadWrite   otb-gtm.default.svc.cluster.local:50001   &lt;none&gt;     \ndn-0        ReadWrite   otb-dn-0.default.svc.cluster.local:5432   &lt;none&gt;     \ndn-1        ReadWrite   otb-dn-1.default.svc.cluster.local:5432   &lt;none&gt;     \ncn-0        ReadWrite   otb-cn-0.default.svc.cluster.local:5432   &lt;none&gt;     \n\nTopology:\nCOMPONENT   INSTANCE     ROLE     STATUS    AZ       NODE                            CREATED-TIME                 \ncn-0        otb-cn-0-0   &lt;none&gt;   Running   &lt;none&gt;   kind-control-plane/172.18.0.2   Apr 07,2024 15:28 UTC+0800   \ndn-0        otb-dn-0-0   &lt;none&gt;   Running   &lt;none&gt;   kind-control-plane/172.18.0.2   Apr 07,2024 15:28 UTC+0800   \ndn-1        otb-dn-1-0   &lt;none&gt;   Running   &lt;none&gt;   kind-control-plane/172.18.0.2   Apr 07,2024 15:28 UTC+0800   \ngtm         otb-gtm-0    &lt;none&gt;   Running   &lt;none&gt;   kind-control-plane/172.18.0.2   Apr 07,2024 15:28 UTC+0800   \n\nResources Allocation:\nCOMPONENT   DEDICATED   CPU(REQUEST/LIMIT)   MEMORY(REQUEST/LIMIT)   STORAGE-SIZE   STORAGE-CLASS   \ngtm         false       1 / 1                1Gi / 1Gi               data:20Gi      standard        \ndn-0        false       1 / 1                1Gi / 1Gi               data:20Gi      standard        \ndn-1        false       1 / 1                1Gi / 1Gi               data:20Gi      standard        \ncn-0        false       1 / 1                1Gi / 1Gi               data:20Gi      standard        \n\nImages:\nCOMPONENT   TYPE   IMAGE                                    \ngtm         gtm    docker.io/domainlau/opentenbase:v2.5.0   \ndn-0        dn     docker.io/domainlau/opentenbase:v2.5.0   \ndn-1        dn     docker.io/domainlau/opentenbase:v2.5.0   \ncn-0        cn     docker.io/domainlau/opentenbase:v2.5.0   \n\nShow cluster events: kbcli cluster list-events -n default otb\n</code></pre>"},{"location":"guide/14-kubeblocks-support/#opentenbase_2","title":"\u8fde\u63a5\u5230 OpenTenBase \u96c6\u7fa4","text":"<p>\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u8fde\u63a5\u5230 OpenTenBase \u96c6\u7fa4\uff1a</p> <pre><code>$ kubectl exec -it otb-cn-0-0 -- bash\n\nopentenbase@otb-cn-0-0:~$ psql postgres\npsql (PostgreSQL 10.0 OpenTenBase V2)\nType \"help\" for help.\n\npostgres=# select * from pgxc_node;\n node_name | node_type | node_port |     node_host     | nodeis_primary | nodeis_preferred |   node_id   |  node_cluster_name  \n-----------+-----------+-----------+-------------------+----------------+------------------+-------------+---------------------\n a_one     | G         |     50001 | otb-gtm           | t              | f                | -1343982441 | opentenbase_cluster\n dn_0      | D         |      5432 | otb-dn-0          | f              | f                |  1485981022 | opentenbase_cluster\n dn_1      | D         |      5432 | otb-dn-1          | f              | f                | -1300059100 | opentenbase_cluster\n cn_0      | C         |      5432 | otb-cn-0          | f              | f                | -1541982360 | opentenbase_cluster\n(4 rows)\n\npostgres=# create default node group default_group with(dn_0, dn_1);\nCREATE NODE GROUP\npostgres=# create sharding group to group default_group;\nCREATE SHARDING GROUP\npostgres=# clean sharding;\nCLEAN SHARDING\npostgres=# select * from pgxc_group;\n  group_name   | default_group | group_members \n---------------+---------------+---------------\n default_group |             1 | 16384 16385\n(1 row)\npostgres=# create table public.t1_pt(\nf1 int not null,\nf2 timestamp not null,\nf3 varchar(20),\nprimary key(f1)) \npartition by range (f2) \nbegin (timestamp without time zone '2019-01-01 0:0:0') \nstep (interval '1 month') partitions (3) \ndistribute by shard(f1) \nto group default_group;\nCREATE TABLE\npostgres=# \\d+ public.t1_pt\n                                             Table \"public.t1_pt\"\n Column |            Type             | Collation | Nullable | Default | Storage  | Stats target | Description \n--------+-----------------------------+-----------+----------+---------+----------+--------------+-------------\n f1     | integer                     |           | not null |         | plain    |              | \n f2     | timestamp without time zone |           | not null |         | plain    |              | \n f3     | character varying(20)       |           |          |         | extended |              | \nIndexes:\n    \"t1_pt_pkey\" PRIMARY KEY, btree (f1)\nDistribute By: SHARD(f1)\nLocation Nodes: ALL DATANODES\nPartition By: RANGE(f2)\n     Partitions number: 3\n     Start With: 2019-01-01\n     Interval Of Partition: 1 MONTH\n</code></pre> <p>\u6216\u8005\uff0c\u60a8\u53ef\u4ee5\u4f7f\u7528 <code>kubectl port-forward</code> \u4ece\u672c\u5730\u673a\u5668\u8fde\u63a5\u5230 OpenTenBase \u96c6\u7fa4\uff1a</p> <pre><code>$ kubectl port-forward svc/otb-cn-0 5432:5432\n</code></pre> <p>\u7136\u540e\uff0c\u60a8\u53ef\u4ee5\u8bf4\u4f7f\u7528 <code>psql</code> \u8fde\u63a5\u5230OpenTenBase \u96c6\u7fa4\uff1a</p> <pre><code>$ psql -h 127.0.0.1 -p 5432 -U opentenbase postgres\n</code></pre>"},{"location":"guide/14-kubeblocks-support/#opentenbase_3","title":"\u5220\u9664 OpenTenBase \u96c6\u7fa4","text":"<p>\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\u5220\u9664 OpenTenBase \u96c6\u7fa4\uff1a</p> <pre><code>$ helm uninstall otb\n</code></pre>"},{"location":"guide/15-docker-deploy/","title":"\u4f7f\u7528docker\u6784\u5efa\u4e00\u4e2a1C2D\u7684OpenTenbase\u96c6\u7fa4","text":"<p>\u5728\u8fd9\u4e2a\u4f8b\u5b50\u4e2d\uff0c\u6211\u4eec\u5c1d\u8bd5\u4f7f\u7528 Docker \u6280\u672f\u6784\u5efa\u4e00\u4e2a\u5305\u542b<code>1</code>\u4e2a\u534f\u8c03\u8282\u70b9\u548c<code>2</code>\u4e2a\u6570\u636e\u8282\u70b9\u7684\u96c6\u7fa4\u3002\u6211\u4eec\u7684\u76ee\u6807\u662f\u4e3a\u7528\u6237\u63d0\u4f9b\u4e00\u4e2a\u4f7f\u7528 Docker \u6784\u5efa OpenTenbase \u5206\u5e03\u5f0f\u96c6\u7fa4\u7684\u57fa\u672c\u793a\u4f8b\u3002\u8fd9\u5c06\u65b9\u4fbf\u7528\u6237\u5feb\u901f\u90e8\u7f72\uff0c\u5e76\u5141\u8bb8\u8fdb\u4e00\u6b65\u7684\u5b9a\u5236\u548c\u5f00\u53d1\u3002</p>"},{"location":"guide/15-docker-deploy/#1-docker","title":"1. \u6784\u5efadocker\u955c\u50cf","text":"<pre><code>export SOURCECODE_PATH=/path/to/your/otb/source/code\ncd ${SOURCECODE_PATH}/docker\n./buildImage.sh\n</code></pre> <p>\u4e0a\u8ff0\u6307\u4ee4\u4f1a\u6784\u5efa<code>opentenbasebase</code>\u548c <code>opentenbase</code>\u4e24\u4e2a\u955c\u50cf\u3002</p>"},{"location":"guide/15-docker-deploy/#2-example-opentenbasecn","title":"2.\u542f\u52a8 example \u670d\u52a1\uff0c\u8fdb\u5165 opentenbaseCN \u5bb9\u5668","text":"<pre><code>cd ${SOURCECODE_PATH}/example/1c_2d_cluster\ndocker-compose up -d\ndocker-compose exec opentenbaseCN /bin/bash\n\n</code></pre>"},{"location":"guide/15-docker-deploy/#3ssh","title":"3.SSH \u4e92\u4fe1\u914d\u7f6e","text":"<pre><code>su opentenbase\ncopy-ssh-keys\n</code></pre> <p>\u8f93\u5165 \"yes\"\uff0c\u7136\u540e\u56de\u8f66\u3002\u7136\u540e\u8f93\u5165\u5bc6\u7801 \"qwerty\"\u3002</p>"},{"location":"guide/15-docker-deploy/#4","title":"4. \u90e8\u7f72\u548c\u521d\u59cb\u5316","text":"<p>\u590d\u5236\u914d\u7f6e\u6587\u4ef6\u5230\u6307\u5b9a\u76ee\u5f55:</p> <pre><code>\nmkdir ~/pgxc_ctl\ncp ~/pgxc_conf/pgxc_ctl.conf ~/pgxc_ctl\n</code></pre> <p>\u4f7f\u7528 <code>pgxc_ctl</code>  \u8fdb\u884c\u90e8\u7f72\uff0c\u4f7f\u7528<code>pgxc_ctl</code>\u4e4b\u540e\uff0c\u4e0d\u8981\u6572 <code>ls</code> ,<code>echo</code> \u8fd9\u79cd\u547d\u4ee4\u3002</p> <pre><code>pgxc_ctl                                # \u8fd9\u4e00\u6b65\u4f1a\u8fdb\u5165 --home \u4f4d\u7f6e\uff0c\u9ed8\u8ba4\u662f/home/$USER/pgxc_ctl, \u4f7f\u7528exit\u9000\u51fa\uff0c\u6216\u8005ctrl + D\ndeploy all                              # \u4f1a\u4f7f\u7528/home/$USER/pgxc_ctl/pgxc.conf \u8fd9\u4e2a\u914d\u7f6e\u6587\u4ef6\ninit all\n\nexit\n</code></pre>"},{"location":"guide/15-docker-deploy/#5psqlopentenbase","title":"5.\u4f7f\u7528psql\u8fde\u63a5OpenTenbase","text":"<pre><code>psql -h 172.16.200.10 -p 30004 -d postgres -U opentenbase\n</code></pre> <p>\u8fd9\u4e00\u6bb5sql\u8bed\u53e5\u5728Quick Start\u6709\u8be6\u7ec6\u7684\u89e3\u91ca:</p> <pre><code>-- \u4f7f\u7528 dn001, dn002 \u5b58\u50a8\u8282\u70b9\u7ec4\u6210\u9ed8\u8ba4\u5b58\u50a8\u7ec4\ncreate default node group default_group  with (dn001,dn002); \ncreate sharding group to group default_group;      -- \u8bbe\u7f6e shard \u7c7b\u578b\u7684\u8868\u4f7f\u7528\u7684\u5b58\u50a8\u7ec4\ncreate database test;                              -- \u521b\u5efa test \u6570\u636e\u5e93\ncreate user test with password 'test';             -- \u521b\u5efa\u4e00\u4e2a test \u7528\u6237\u5bc6\u7801\u4e3a test\nalter database test owner to test;                 -- \u4fee\u6539 test \u6570\u636e\u5e93 owner \u4e3a test \u7528\u6237\n\\c test test                                       -- \u5207\u6362\u5230 test \u6570\u636e\u5e93\n-- \u521b\u5efa\u4e00\u4e2a shard \u8868 foo, \u4f7f\u7528 id \u4f5c\u4e3a\u5206\u5e03\u952e\ncreate table foo(id bigint, str text) distribute by shard(id);\ninsert into foo values(1, 'tencent'), (2, 'shenzhen');\nselect * from foo;\n</code></pre> <p>\u90e8\u7f72\u6210\u529f\u540e, \u7528\u6237\u53ef\u4ee5\u7ee7\u7eed\u9605\u8bfb\u5b98\u65b9\u6587\u6863\u7684\u5176\u4ed6\u7684\u5185\u5bb9\u3002</p>"},{"location":"guide/16-txsql_quickstart/","title":"TXSQL\u6982\u8ff0","text":"<p>TXSQL \u662f\u817e\u8baf\u6570\u636e\u5e93\u56e2\u961f\u57fa\u4e8e\u793e\u533aMySQL\u5b9a\u5236\u7684\u4f01\u4e1a\u7ea7MySQL\u5185\u6838\uff0c100%\u517c\u5bb9\u539f\u751f MySQL \u7248\u672c\uff0c\u5e76\u63d0\u4f9b\u4e86\u7c7b\u4f3c\u4e8e MySQL \u4f01\u4e1a\u7248\u7684\u8bf8\u591a\u529f\u80fd\uff0c\u5982\u5ba1\u8ba1\u3001\u7ebf\u7a0b\u6c60\u3001\u5907\u4efd\u6062\u590d\u7b49\u529f\u80fd\u3002</p> <p>TXSQL \u4e0d\u4ec5\u5bf9 InnoDB \u5b58\u50a8\u5f15\u64ce\u3001\u67e5\u8be2\u4f18\u5316\u3001\u590d\u5236\u6027\u80fd\u7b49\u65b9\u9762\u8fdb\u884c\u4e86\u5927\u91cf\u4f18\u5316\uff0c\u540c\u65f6\u63d0\u5347\u4e86\u4e91\u6570\u636e\u5e93 MySQL \u7684\u6613\u7528\u6027\u548c\u53ef\u7ef4\u62a4\u6027\uff0c\u5728\u4e3a\u7528\u6237\u63d0\u4f9b MySQL \u5168\u90e8\u529f\u80fd\u7684\u540c\u65f6\uff0c\u8fd8\u63d0\u4f9b\u4e86\u4f01\u4e1a\u7ea7\u7684\u6027\u80fd\u4f18\u5316\u3001\u6570\u636e\u538b\u7f29\u3001\u52a0\u5bc6\u3001\u5f3a\u540c\u6b65\u3001\u5168\u5c40\u4e00\u81f4\u6027\u7b49\u9ad8\u7ea7\u7279\u6027\u3002</p> <p>\u5f53\u524dTXSQL\u5185\u6838\u5e7f\u6cdb\u5e94\u7528\u4e8e\u91d1\u878d\u3001\u6e38\u620f\u3001\u7535\u5546\u3001\u65b0\u80fd\u6e90\u7b49\u5404\u884c\u5404\u4e1a\u7684\u6838\u5fc3\u4e1a\u52a1\u573a\u666f\u4e2d\u3002</p>"},{"location":"guide/16-txsql_quickstart/#_1","title":"\u6838\u5fc3\u7279\u6027\u7b80\u4ecb","text":"<p>TXSQL\u57fa\u4e8e\u5e7f\u6cdb\u7684\u4e1a\u52a1\u9700\u6c42\uff0c\u81ea\u4e3b\u5b9e\u73b0\u5927\u91cf\u7684\u4f01\u4e1a\u7ea7\u7279\u6027\uff0c\u4e0b\u9762\u8fdb\u884c\u793a\u4f8b\u4ecb\u7ecd\u3002</p> <ol> <li> <p>\u5f3a\u540c\u6b65</p> <p>\u4f5c\u4e3a\u91d1\u878d\u7ea7\u5206\u5e03\u5f0f\u6570\u636e\u5e93\uff0c\u6570\u636e\u7684\u5f3a\u4e00\u81f4\u662f\u751f\u547d\u7ebf\u3002\u800c\u539f\u751f\u7684MySQL\u7684\u540c\u6b65\u590d\u5236\u662f\u534a\u540c\u6b65\u6216\u5f02\u6b65\uff0c\u65e0\u6cd5\u6ee1\u8db3\u91d1\u878d\u573a\u666f\u7684\u9700\u8981\uff0c\u56e0\u6b64TXSQL\u57fa\u4e8eraft\u534f\u8bae\u81ea\u7814\u5f3a\u540c\u6b65\u65b9\u6848\uff0c\u5728\u4fdd\u8bc1\u6570\u636e\u5f3a\u4e00\u81f4\u7684\u540c\u65f6\u5c3d\u53ef\u80fd\u63d0\u9ad8\u6027\u80fd\u3002</p> </li> <li> <p>\u7ebf\u7a0b\u6c60</p> <p>\u793e\u533a\u7248\u7684MySQL\u7684\u8fde\u63a5\u5904\u7406\u65b9\u6cd5\u9ed8\u8ba4\u662f\u4e3a\u6bcf\u4e2a\u8fde\u63a5\u521b\u5efa\u4e00\u4e2a\u5de5\u4f5c\u7ebf\u7a0b\u7684one-thread-per-connection\uff08Per_thread\uff09\u6a21\u5f0f\u3002\u8fd9\u79cd\u6a21\u5f0f\u4e0b\uff0c\u7531\u4e8e\u7cfb\u7edf\u7684\u8d44\u6e90\u662f\u6709\u9650\u7684\uff0c\u968f\u7740\u8fde\u63a5\u6570\u7684\u589e\u52a0\uff0c\u8d44\u6e90\u7684\u7ade\u4e89\u4e5f\u589e\u52a0\uff0c\u8fde\u63a5\u7684\u54cd\u5e94\u65f6\u95f4\u4e5f\u968f\u4e4b\u589e\u52a0\uff0c\u5982response time\u56fe\u6240\u793a\u3002\u5bf9\u4e8e\u6570\u636e\u5e93\u6574\u4f53\u541e\u5410\u800c\u8a00\uff0c\u5219\u662f\u5728\u8d44\u6e90\u672a\u8017\u5c3d\u65f6\u968f\u7740\u8fde\u63a5\u6570\u589e\u52a0\uff0c\u4e00\u65e6\u8fde\u63a5\u6570\u8d85\u8fc7\u4e86\u67d0\u4e2a\u8017\u5c3d\u7cfb\u7edf\u8d44\u6e90\u7684\u4e34\u754c\u70b9\uff0c\u6570\u636e\u5e93\u6574\u4f53\u541e\u5410\u5c31\u4f1a\u5404\u8fde\u63a5\u7684\u8d44\u6e90\u4e89\u62a2\u800c\u4e0b\u964d\u3002</p> <p>TXSQL\u901a\u8fc7\u5b9e\u73b0\u7ebf\u7a0b\u6c60\uff0c\u6765\u907f\u514d\u56e0\u8d44\u6e90\u7ade\u4e89\u800c\u5bfc\u81f4\u7cfb\u7edf\u541e\u5410\u4e0b\u964d\u7684\u95ee\u9898\u3002</p> <p>\u7ebf\u7a0b\u6c60\u7684\u601d\u8def\u5373\u4e3a\u9650\u5236\u540c\u65f6\u8fd0\u884c\u7684\u7ebf\u7a0b\u6570\uff0c\u51cf\u5c11\u7ebf\u7a0b\u6c60\u95f4\u4e0a\u4e0b\u6587\u5207\u6362\u548c\u70ed\u9501\u4e89\u7528\uff0c\u4ece\u800c\u5bf9OLTP\u5de5\u4f5c\u8d1f\u8f7d\uff08CPU\u6d88\u8017\u8f83\u5c11\u7684\u67e5\u8be2\uff09\u4ea7\u751f\u79ef\u6781\u5f71\u54cd\u3002\u5f53\u8fde\u63a5\u6570\u4e0a\u5347\u65f6\uff0c\u5728\u7ebf\u7a0b\u6c60\u7684\u5e2e\u52a9\u4e0b\u6570\u636e\u5e93\u6574\u4f53\u541e\u5410\u7ef4\u6301\u5728\u4e00\u4e2a\u8f83\u9ad8\u6c34\u51c6\u3002</p> </li> <li> <p>\u5ba1\u8ba1</p> <p>TXSQL\u63d0\u4f9b\u6570\u636e\u5e93\u5ba1\u8ba1\u80fd\u529b\uff0c\u8bb0\u5f55\u5bf9\u6570\u636e\u5e93\u7684\u8bbf\u95ee\u53ca SQL \u8bed\u53e5\u6267\u884c\u60c5\u51b5\uff08\u5305\u62ec\u8bed\u53e5\u5f00\u542f\u65f6\u95f4\u3001\u626b\u63cf\u884c\u6570\u3001\u9501\u7b49\u5f85\u65f6\u95f4\u3001 CPU \u4f7f\u7528\u65f6\u95f4\u3001\u5ba2\u6237\u7aef IP\u3001\u7528\u6237\u540d\u3001SQL \u5185\u5bb9\u7b49\uff09\uff0c\u5e2e\u52a9\u4f01\u4e1a\u8fdb\u884c\u98ce\u9669\u63a7\u5236\uff0c\u63d0\u9ad8\u6570\u636e\u5b89\u5168\u7b49\u7ea7\u3002\u4e3b\u8981\u9002\u7528\u4e8e\u9700\u8981\u5bf9\u6570\u636e\u5e93\u906d\u53d7\u5230\u7684\u98ce\u9669\u884c\u4e3a\u8fdb\u884c\u544a\u8b66\uff0c\u9488\u5bf9\u6570\u636e\u5e93 SQL \u6ce8\u5165\u3001\u5f02\u5e38\u64cd\u4f5c\u7b49\u6570\u636e\u5e93\u98ce\u9669\u884c\u4e3a\u8fdb\u884c\u8bb0\u5f55\u4e0e\u544a\u8b66\u7684\u573a\u666f\u3002</p> </li> <li> <p>\u5217\u538b\u7f29</p> <p>\u5f53\u524d\u6709\u9488\u5bf9\u884c\u683c\u5f0f\u7684\u538b\u7f29\u548c\u9488\u5bf9\u6570\u636e\u9875\u9762\u7684\u538b\u7f29\uff0c\u4f46\u662f\u8fd9\u4e24\u79cd\u538b\u7f29\u65b9\u5f0f\u5728\u5904\u7406\u4e00\u4e2a\u8868\u4e2d\u7684\u67d0\u4e9b\u5927\u5b57\u6bb5\u548c\u5176\u4ed6\u5f88\u591a\u5c0f\u5b57\u6bb5\uff0c\u540c\u65f6\u5bf9\u5c0f\u5b57\u6bb5\u7684\u8bfb\u5199\u5f88\u9891\u7e41\uff0c\u5bf9\u5927\u5b57\u6bb5\u8bbf\u95ee\u4e0d\u9891\u7e41\u7684\u60c5\u5f62\u4e2d\uff0c\u5728\u8bfb\u5199\u8bbf\u95ee\u65f6\u90fd\u4f1a\u9020\u6210\u5f88\u591a\u4e0d\u5fc5\u8981\u7684\u8ba1\u7b97\u8d44\u6e90\u7684\u6d6a\u8d39\u3002</p> <p>\u5217\u538b\u7f29\u529f\u80fd\u53ef\u4ee5\u538b\u7f29\u90a3\u4e9b\u8bbf\u95ee\u4e0d\u9891\u7e41\u7684\u5927\u5b57\u6bb5\u800c\u4e0d\u538b\u7f29\u90a3\u4e9b\u8bbf\u95ee\u9891\u7e41\u7684\u5c0f\u5b57\u6bb5\uff0c\u8fd9\u6837\u4e0d\u4ec5\u80fd\u591f\u51cf\u5c11\u6574\u884c\u5b57\u6bb5\u7684\u5b58\u50a8\u7a7a\u95f4\uff0c\u800c\u4e14\u53ef\u4ee5\u63d0\u9ad8\u8bfb\u5199\u8bbf\u95ee\u7684\u6548\u7387\u3002</p> <p>\u4f8b\u5982\uff0c\u4e00\u5f20\u5458\u5de5\u8868\uff1a<code>create table employee(id int, age int, gender boolean, other varchar(1000) primary key (id))</code>\uff0c\u5f53\u5bf9 id,age,gender \u5c0f\u5b57\u6bb5\u8bbf\u95ee\u6bd4\u8f83\u9891\u7e41\uff0c\u800c\u5bf9 other \u5927\u5b57\u6bb5\u7684\u8bbf\u95ee\u9891\u7387\u6bd4\u8f83\u4f4e\u65f6\uff0c\u53ef\u4ee5\u5c06 other \u5217\u521b\u5efa\u4e3a\u538b\u7f29\u5217\u3002\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u53ea\u6709\u5bf9 other \u7684\u8bfb\u5199\u624d\u4f1a\u89e6\u53d1\u5bf9\u8be5\u5217\u7684\u538b\u7f29\u548c\u89e3\u538b\uff0c\u5bf9\u5176\u4ed6\u5217\u7684\u8bbf\u95ee\u5e76\u4e0d\u4f1a\u89e6\u53d1\u8be5\u5217\u7684\u538b\u7f29\u548c\u89e3\u538b\u3002\u7531\u6b64\u8fdb\u4e00\u6b65\u964d\u4f4e\u4e86\u884c\u6570\u636e\u5b58\u50a8\u7684\u5927\u5c0f\uff0c\u4f7f\u5f97\u5bf9\u8bbf\u95ee\u9891\u7e41\u7684\u5c0f\u5b57\u6bb5\u80fd\u591f\u5b9e\u73b0\u66f4\u5feb\u8bbf\u95ee\uff0c\u5bf9\u8bbf\u95ee\u9891\u7387\u6bd4\u8f83\u4f4e\u7684\u5927\u5b57\u6bb5\u7684\u5b58\u50a8\u7a7a\u95f4\u80fd\u591f\u5b9e\u73b0\u8fdb\u4e00\u6b65\u964d\u4f4e\u3002</p> </li> <li> <p>XA\u4e8b\u52a1\u589e\u5f3a</p> <p>TXSQL\u5e94\u7528\u5728\u91d1\u878d\u573a\u666f\uff0c\u5bf9XA\u4e8b\u52a1\u6570\u636e\u4e00\u81f4\u6027\u8981\u6c42\u6781\u9ad8\u3002\u901a\u8fc7\u6301\u7eed\u6253\u78e8XA\u4e8b\u52a1\uff0c\u63d0\u4f9bXA\u4e8b\u52a1\u6027\u80fd\uff0c\u5176\u4e2d10+\u7279\u6027\u5df2\u56de\u9988\u793e\u533a\u3002</p> </li> <li> <p>\u7a7a\u95f2\u4e8b\u52a1\u4e3b\u52a8\u65ad\u8fde</p> <p>TXSQL\u5bf9\u4e8e\u5904\u4e8e\u5f00\u542f\u4e8b\u52a1\u72b6\u6001\u7684\u8fde\u63a5\uff08\u663e\u793a\u4f7f\u7528 begin\u3001start transaction \u6216\u8005\u9690\u5f0f\u5f00\u542f\u4e8b\u52a1\uff09\uff0c\u5982\u679c\u8d85\u65f6\u65f6\u95f4\u5185\u6ca1\u6709\u4e0b\u4e00\u6761\u8bed\u53e5\u6267\u884c\uff0c\u4f1akill \u8fde\u63a5\uff0c\u4ee5\u91ca\u653e\u8d44\u6e90\u63d0\u5347\u6027\u80fd\u3002</p> </li> <li> <p>returning\u652f\u6301</p> <p>\u5728\u67d0\u4e9b\u4f7f\u7528\u573a\u666f\u4e0b\uff0c\u9700\u8981\u5728 DML \u64cd\u4f5c\u540e\u8fd4\u56de\u521a\u64cd\u4f5c\u7684\u6570\u636e\u884c\u3002\u5b9e\u73b0\u8fd9\u4e2a\u9700\u6c42\u4e00\u822c\u6709\u4e24\u79cd\u529e\u6cd5\uff1a</p> <p>\u4e00\u662f\u5728\u5f00\u542f\u4e8b\u52a1\u540e\u5728 DML \u8bed\u53e5\u540e\u7d27\u8ddf\u4e00\u6761 SELECT \u8bed\u53e5\u3002</p> <p>\u4e8c\u662f\u4f7f\u7528\u89e6\u53d1\u5668\u7b49\u8f83\u4e3a\u590d\u6742\u7684\u64cd\u4f5c\u5b9e\u73b0\u3002</p> <p>\u524d\u8005\u4e3b\u8981\u4f1a\u589e\u52a0\u4e00\u6761 SELECT \u8bed\u53e5\u7684\u5f00\u9500\uff0c\u540e\u8005\u5219\u4f1a\u4ee4 SQL \u7684\u5b9e\u73b0\u53d8\u5f97\u66f4\u52a0\u590d\u6742\u5e76\u4e14\u4e0d\u591f\u7075\u6d3b\uff08\u9700\u8981\u521b\u5efa\u89e6\u53d1\u5668\uff09\u3002 \u56e0\u6b64\uff0cRETURNING \u8bed\u6cd5\u7684\u8bbe\u8ba1\u4e3b\u8981\u9488\u5bf9\u8be5\u573a\u666f\u7684\u4f18\u5316\uff0c\u901a\u8fc7\u5728 DML \u8bed\u53e5\u540e\u589e\u52a0 RETURNING \u5173\u952e\u5b57\u53ef\u4ee5\u7075\u6d3b\u9ad8\u6548\u5730\u5b9e\u73b0\u4e0a\u8ff0\u7684\u9700\u6c42\u3002</p> </li> </ol>"},{"location":"guide/17-txsql_architecture/","title":"\u4e00\u3001\u603b\u4f53\u67b6\u6784","text":"<p>TXSQL\u5185\u6838\u57fa\u4e8eMySQL 8.0\u5f00\u6e90\u7248\u672c\u8fdb\u884c\u5f00\u53d1\uff0cTXSQL\u603b\u4f53\u67b6\u6784\u4e0eMySQL\u4fdd\u6301\u4e00\u81f4\uff0c\u603b\u4f53\u4e0a\u5206\u4e3a\u4e09\u5c42\uff1a\u8fde\u63a5\u5c42\u3001\u670d\u52a1\u5c42\u548c\u5b58\u50a8\u5f15\u64ce\u5c42\u3002 </p> <ul> <li> <p>\u8fde\u63a5\u5c42\u4e3b\u8981\u8d1f\u8d23\u4e0e\u5ba2\u6237\u7aef\u7684\u8fde\u63a5\u5efa\u7acb\u4e0e\u8bf7\u6c42\u63a5\u6536\u3002\u540c\u65f6\u8d1f\u8d23\u5b89\u5168\u6743\u9650\u8ba4\u8bc1\uff0c\u8fde\u63a5\u8d44\u6e90\u7ba1\u7406\u3001\u7ebf\u7a0b\u7ba1\u7406\u7b49\u6a21\u5757\u529f\u80fd\u3002</p> </li> <li> <p>\u670d\u52a1\u5c42\u4e3b\u8981\u5305\u62ec\u4ee5\u4e0b\u6838\u5fc3\u6a21\u5757\uff1a</p> </li> </ul> \u6a21\u5757 \u4f5c\u7528 \u67e5\u8be2\u7f13\u5b58 \u547d\u4e2d\u7f13\u5b58\u5219\u76f4\u63a5\u8fd4\u56de\u7ed3\u679c SQL\u89e3\u6790\u5668 \u5bf9\u5ba2\u6237\u7aef\u53d1\u9001\u7684SQL\u8fdb\u884c\u8bcd\u6cd5\u5206\u6790\uff0c\u8bed\u6cd5\u5206\u6790 \u67e5\u8be2\u4f18\u5316\u5668 \u8d1f\u8d23\u751f\u6210\u6267\u884c\u8ba1\u5212\u3001\u7d22\u5f15\u9009\u62e9 \u6267\u884c\u5668 \u64cd\u4f5c\u5b58\u50a8\u5f15\u64ce\uff0c\u8fd4\u56de\u7ed3\u679c <ul> <li> <p>\u5b58\u50a8\u5f15\u64ce\u5c42\u8d1f\u8d23\u6570\u636e\u7684\u5b58\u50a8\u548c\u63d0\u53d6\u3002\u652f\u6301\u591a\u79cd\u5b58\u50a8\u5f15\u64ce\uff0c\u5982InnoDB\u3001MyiSam\u3001Memory\u7b49\uff0c\u7528\u6237\u53ef\u6839\u636e\u5b9e\u9645\u9700\u6c42\u8fdb\u884c\u9009\u62e9\u3002\u9ed8\u8ba4\u5b58\u50a8\u5f15\u64ce\u4e3a\u80fd\u591f\u652f\u6301\u4e8b\u52a1ACID\u3001\u652f\u6301\u884c\u9501\u3001\u652f\u6301\u5916\u68c0\u7ea6\u675f\u7684InnoDB\u5f15\u64ce\u3002\u5b58\u50a8\u5f15\u64ce\u5bf9\u4e0a\u8d1f\u8d23\u6267\u884c\u670d\u52a1\u5c42\u53d1\u9001\u7684\u6570\u636e\u67e5\u627e\u548c\u6570\u636e\u4fee\u6539\u64cd\u4f5c\uff0c\u5411\u4e0b\u4e0e\u7269\u7406\u6587\u4ef6\u8fdb\u884c\u4ea4\u4e92\uff0c\u5b9e\u73b0\u6570\u636e\u7684\u5b58\u50a8\u4e0e\u4fee\u6539\u9700\u6c42\u3002</p> </li> <li> <p>\u7269\u7406\u7cfb\u7edf\u662f\u6307 TXSQL \u5982\u4f55\u5c06\u903b\u8f91\u5b58\u50a8\u7ed3\u6784\u6620\u5c04\u5230\u78c1\u76d8\u4e0a\u7684\u6587\u4ef6\u7cfb\u7edf\u3002</p> </li> </ul>"},{"location":"guide/17-txsql_architecture/#_2","title":"\u4e8c\u3001\u6a21\u5757\u8bbe\u8ba1","text":""},{"location":"guide/17-txsql_architecture/#1","title":"1. \u8fde\u63a5\u5c42","text":"<p>\u8fde\u63a5\u5c42\u8d1f\u8d23\u8ddf\u5ba2\u6237\u7aef\u5efa\u7acb\u8fde\u63a5\u3001\u83b7\u53d6\u6743\u9650\u3001\u7ef4\u6301\u548c\u7ba1\u7406\u8fde\u63a5\u3002</p> <ul> <li> <p>\u8fde\u63a5\u5efa\u7acb\u4e0e\u5904\u7406\uff1a \u8fde\u63a5\u547d\u4ee4\u4e2d\u7684 TXSQL \u662f\u5ba2\u6237\u7aef\u5de5\u5177\uff0c\u7528\u6765\u8ddf\u670d\u52a1\u7aef\u5efa\u7acb\u8fde\u63a5\u3002\u5728\u5b8c\u6210\u7ecf\u5178\u7684 TCP \u63e1\u624b\u540e\uff0c\u8fde\u63a5\u5668\u5c31\u8981\u5f00\u59cb\u8ba4\u8bc1\u4f60\u7684\u8eab\u4efd\uff0c\u8fd9\u4e2a\u65f6\u5019\u7528\u7684\u5c31\u662f\u4f60\u8f93\u5165\u7684\u7528\u6237\u540d\u548c\u5bc6\u7801\u3002 \u82e5\u8d26\u6237\u9a8c\u8bc1\u5931\u8d25\uff0c\u8fd4\u56de\u201cAccess denied for user\u201d\uff1b\u5982\u679c\u9a8c\u8bc1\u6210\u529f\uff0c\u8fde\u63a5\u5668\u4f1a\u5230\u6743\u9650\u8868\u91cc\u9762\u67e5\u51fa\u4f60\u62e5\u6709\u7684\u6743\u9650\u3002\uff08\u4fee\u6539\u6743\u9650\u4e0d\u4f1a\u5f71\u54cd\u5df2\u7ecf\u5b58\u5728\u7684\u8fde\u63a5\uff09\u3002</p> </li> <li> <p>\u8fde\u63a5\u8d44\u6e90\u7ba1\u7406\uff1a TXSQL\u652f\u6301\u914d\u7f6e\u6700\u5927\u8fde\u63a5\u6570\uff0c\u5f53\u8fde\u63a5\u6570\u91cf\u5230\u8fbe\u6700\u5927\u503c\u65f6\uff0c\u65b0\u7684\u8fde\u63a5\u8bf7\u6c42\u4f1a\u88ab\u62d2\u7edd\u3002\u5ba2\u6237\u7aef\u5982\u679c\u592a\u957f\u65f6\u95f4\u6ca1\u64cd\u4f5c\uff0c\u8fde\u63a5\u5668\u5c31\u4f1a\u81ea\u52a8\u5c06\u5b83\u65ad\u5f00\u3002\u8fd9\u4e2a\u65f6\u95f4\u662f\u7531\u53c2\u6570 wait_timeout \u63a7\u5236\u7684\uff0c\u9ed8\u8ba4\u503c\u662f 8 \u5c0f\u65f6\u3002</p> </li> <li> <p>\u7ebf\u7a0b\u7ba1\u7406\uff1a \u5728\u4e0d\u4f7f\u7528\u7ebf\u7a0b\u6c60\u7684\u60c5\u51b5\u4e0b\uff0cTXSQL\u4f1a\u4e3a\u6bcf\u4e00\u4e2a\u8fde\u63a5\u521b\u5efa\u4e00\u4e2a\u7ebf\u7a0b\uff0c\u7528\u4e8e\u5904\u7406\u8be5\u8fde\u63a5\u5728\u6570\u636e\u5e93\u4e2d\u7684\u64cd\u4f5c\uff0c\u4ee5\u53ca\u7ba1\u7406\u8be5\u8fde\u63a5\u7684\u4e0a\u4e0b\u6587\u4fe1\u606f\uff0c\u5305\u62ec\u4e8b\u52a1\u3001\u53c2\u6570\u4ee5\u53ca\u4e34\u65f6\u8868\u7b49\u4fe1\u606f\u3002\u5728\u4f7f\u7528\u7ebf\u7a0b\u6c60\u7684\u60c5\u51b5\u4e0b\uff0c\u4f1a\u6709\u56fa\u5b9a\u6570\u91cf\u7684\u7ebf\u7a0b\u7528\u6765\u88ab\u8c03\u5ea6\u5904\u7406\u4e0d\u540c\u8fde\u63a5\u5230\u6765\u7684\u8bf7\u6c42\uff0c\u7ebf\u7a0b\u6c60\u80fd\u591f\u907f\u514d\u5927\u91cf\u5e76\u53d1\u7ebf\u7a0b\u7684\u521b\u5efa\u3001\u5207\u6362\u4e0e\u9500\u6bc1\u5e26\u6765\u7684\u5f00\u9500\u3002</p> </li> </ul>"},{"location":"guide/17-txsql_architecture/#2","title":"2. \u670d\u52a1\u5c42","text":""},{"location":"guide/17-txsql_architecture/#_3","title":"\u67e5\u8be2\u7f13\u5b58","text":"<p>\u8fde\u63a5\u5efa\u7acb\u5b8c\u6210\u540e\uff0c\u4f60\u5c31\u53ef\u4ee5\u6267\u884c SQL\u8bed\u53e5\u4e86\u3002\u6b64\u65f6\u6267\u884c\u903b\u8f91\u5c31\u4f1a\u6765\u5230\u7b2c\u4e8c\u6b65\uff1a\u67e5\u8be2\u7f13\u5b58\u3002</p> <p>TXSQL \u62ff\u5230\u4e00\u4e2a\u67e5\u8be2\u8bf7\u6c42\u540e\uff0c\u4f1a\u5148\u5230\u67e5\u8be2\u7f13\u5b58\u770b\u770b\uff0c\u4e4b\u524d\u662f\u4e0d\u662f\u6267\u884c\u8fc7\u8fd9\u6761\u8bed\u53e5\u3002\u4e4b\u524d\u6267\u884c\u8fc7\u7684\u8bed\u53e5\u53ca\u5176\u7ed3\u679c\u53ef\u80fd\u4f1a\u4ee5 key-value \u5bf9\u7684\u5f62\u5f0f\uff0c\u88ab\u76f4\u63a5\u7f13\u5b58\u5728\u5185\u5b58\u4e2d\u3002key \u662f\u67e5\u8be2\u7684\u8bed\u53e5\uff0cvalue \u662f\u67e5\u8be2\u7684\u7ed3\u679c\u3002\u5982\u679c\u4f60\u7684\u67e5\u8be2\u80fd\u591f\u76f4\u63a5\u5728\u8fd9\u4e2a\u7f13\u5b58\u4e2d\u627e\u5230 key\uff0c\u90a3\u4e48\u8fd9\u4e2a value \u5c31\u4f1a\u88ab\u76f4\u63a5\u8fd4\u56de\u7ed9\u5ba2\u6237\u7aef\u3002\u5982\u679c\u8bed\u53e5\u4e0d\u5728\u67e5\u8be2\u7f13\u5b58\u4e2d\uff0c\u5c31\u4f1a\u7ee7\u7eed\u540e\u9762\u7684\u6267\u884c\u9636\u6bb5\u3002\u6267\u884c\u5b8c\u6210\u540e\uff0c\u6267\u884c\u7ed3\u679c\u4f1a\u88ab\u5b58\u5165\u67e5\u8be2\u7f13\u5b58\u4e2d\u3002</p> <p>\u4f46\u662f\u5927\u591a\u6570\u60c5\u51b5\u4e0d\u63a8\u8350\u4f7f\u7528\u67e5\u8be2\u7f13\u5b58\uff0c\u56e0\u4e3a\u67e5\u8be2\u7f13\u5b58\u5f80\u5f80\u5f0a\u5927\u4e8e\u5229\u3002\u67e5\u8be2\u7f13\u5b58\u7684\u5931\u6548\u975e\u5e38\u9891\u7e41\uff0c\u53ea\u8981\u6709\u5bf9\u4e00\u4e2a\u8868\u7684\u66f4\u65b0\uff0c\u8fd9\u4e2a\u8868\u4e0a\u6240\u6709\u7684\u67e5\u8be2\u7f13\u5b58\u90fd\u4f1a\u88ab\u6e05\u7a7a\u3002 \u5bf9\u4e8e\u66f4\u65b0\u538b\u529b\u5927\u7684\u6570\u636e\u5e93\u6765\u8bf4\uff0c\u67e5\u8be2\u7f13\u5b58\u7684\u547d\u4e2d\u7387\u4f1a\u975e\u5e38\u4f4e\u3002</p> <p>TXSQL \u4e5f\u63d0\u4f9b\u4e86\u8fd9\u79cd\u201c\u6309\u9700\u4f7f\u7528\u201d\u7684\u65b9\u5f0f\u3002\u4f60\u53ef\u4ee5\u5c06\u53c2\u6570 query_cache_type \u8bbe\u7f6e\u6210 DEMAND(\u4fee\u6539my.cnf\u5e76\u91cd\u542f)\uff0c\u8fd9\u6837\u5bf9\u4e8e\u9ed8\u8ba4\u7684 SQL \u8bed\u53e5\u90fd\u4e0d\u4f7f\u7528\u67e5\u8be2\u7f13\u5b58\u3002</p>"},{"location":"guide/17-txsql_architecture/#sql","title":"SQL\u89e3\u6790\u5668","text":"<p>\u5982\u679c\u6ca1\u6709\u547d\u4e2d\u67e5\u8be2\u7f13\u5b58\uff0c\u5c31\u8981\u5f00\u59cb\u771f\u6b63\u6267\u884c\u8bed\u53e5\u4e86\u3002\u9996\u5148\uff0cTXSQL \u9700\u8981\u77e5\u9053\u4f60\u8981\u505a\u4ec0\u4e48\uff0c\u56e0\u6b64\u9700\u8981\u5bf9 SQL \u8bed\u53e5\u505a\u89e3\u6790\u3002</p> <p>\u89e3\u6790\u5668\u5148\u4f1a\u505a\u201c\u8bcd\u6cd5\u5206\u6790\u201d\u3002\u4f60\u8f93\u5165\u7684\u662f\u7531\u591a\u4e2a\u5b57\u7b26\u4e32\u548c\u7a7a\u683c\u7ec4\u6210\u7684\u4e00\u6761 SQL \u8bed\u53e5\uff0cTXSQL \u9700\u8981\u8bc6\u522b\u51fa\u91cc\u9762\u7684\u5b57\u7b26\u4e32\u5206\u522b\u4ee3\u8868\u4ec0\u4e48\u542b\u4e49\uff1b</p> <p>\u4f8b\u5982\uff1aTXSQL \u4ece\u4f60\u8f93\u5165\u7684\"select\"\u8fd9\u4e2a\u5173\u952e\u5b57\u8bc6\u522b\u51fa\u6765\uff0c\u8fd9\u662f\u4e00\u4e2a\u67e5\u8be2\u8bed\u53e5\u3002\u5b83\u4e5f\u8981\u628a\u5b57\u7b26\u4e32\u201cTable\u201d\u8bc6\u522b\u6210\u201c\u8868\u540d T\u201d\uff0c\u628a\u5b57\u7b26\u4e32\u201cID\u201d\u8bc6\u522b\u6210\u201c\u5217 ID\u201d\u3002</p> <p>\u505a\u5b8c\u4e86\u8fd9\u4e9b\u8bc6\u522b\u4ee5\u540e\uff0c\u5c31\u8981\u505a\u201c\u8bed\u6cd5\u5206\u6790\u201d\u3002\u6839\u636e\u8bcd\u6cd5\u5206\u6790\u7684\u7ed3\u679c\uff0c\u8bed\u6cd5\u5206\u6790\u5668\u4f1a\u6839\u636e\u8bed\u6cd5\u89c4\u5219\uff0c\u5224\u65ad\u4f60\u8f93\u5165\u7684\u8fd9\u4e2a SQL \u8bed\u53e5\u662f\u5426\u6ee1\u8db3 TXSQL \u8bed\u6cd5\u3002</p> <p>\u5982\u679c\u4f60\u7684\u8bed\u53e5\u4e0d\u5bf9\uff0c\u5c31\u4f1a\u6536\u5230\u7c7b\u4f3c\u201cYou have an error in your SQL syntax; xxxxxx\u201d\u7684\u9519\u8bef\u63d0\u9192;</p> <pre><code>TXSQL&gt; seelect * from p_nic where Id = 1;ERROR 1064 (42000): You have an error in your SQL syntax; check the manual that corresponds to your sql server version for the right syntax to use near 'seelect * from p_nic where Id = 1' at line 1\n</code></pre> <p>\u4e00\u822c\u8bed\u6cd5\u9519\u8bef\u4f1a\u63d0\u793a\u7b2c\u4e00\u4e2a\u51fa\u73b0\u9519\u8bef\u7684\u4f4d\u7f6e\uff0c\u6240\u4ee5\u4f60\u8981\u5173\u6ce8\u7684\u662f\u7d27\u63a5\u201cuse near\u201d\u7684\u5185\u5bb9\u3002</p>"},{"location":"guide/17-txsql_architecture/#_4","title":"\u67e5\u8be2\u4f18\u5316\u5668","text":"<p>\u7ecf\u8fc7\u4e86\u89e3\u6790\u5668\uff0cTXSQL \u5c31\u77e5\u9053\u4f60\u8981\u505a\u4ec0\u4e48\u4e86\u3002\u5728\u5f00\u59cb\u6267\u884c\u4e4b\u524d\uff0c\u8fd8\u8981\u5148\u7ecf\u8fc7\u4f18\u5316\u5668\u7684\u5904\u7406\u3002</p> <p>\u4f18\u5316\u5668\u662f\u5728\u8868\u91cc\u9762\u6709\u591a\u4e2a\u7d22\u5f15\u7684\u65f6\u5019\uff0c\u51b3\u5b9a\u4f7f\u7528\u54ea\u4e2a\u7d22\u5f15\uff1b\u6216\u8005\u5728\u4e00\u4e2a\u8bed\u53e5\u6709\u591a\u8868\u5173\u8054\uff08join\uff09\u7684\u65f6\u5019\uff0c\u51b3\u5b9a\u5404\u4e2a\u8868\u7684\u8fde\u63a5\u987a\u5e8f\u3002</p> <p>\u6bd4\u5982\u4f60\u6267\u884c\u4e0b\u9762\u8fd9\u6837\u7684\u8bed\u53e5\uff1a</p> <pre><code>select * from p_cpu join server_physical_info using(SvrAssetId) where p_cpu.SN = 'sn1' and server_physical_info.SvrIsSpecial=1;\n</code></pre> <p>\u65e2\u53ef\u4ee5\u5148\u4ece\u8868 p_cpu \u91cc\u9762\u53d6\u51fa SN='sn1'\u7684\u8bb0\u5f55\u7684 SvrAssetId\uff0c\u518d\u6839\u636e SvrAssetId \u503c\u5173\u8054\u5230\u8868 server_physical_info\uff0c \u518d\u5224\u65ad server_physical_info \u91cc\u9762 SvrIsSpecial \u7684\u503c\u662f\u5426\u7b49\u4e8e 1\u3002\u4e5f\u53ef\u4ee5\u5148\u4ece\u8868 server_physical_info\u91cc\u9762\u53d6\u51faSvrIsSpecial=1\u7684\u8bb0\u5f55\u7684SvrAssetId\u503c\uff0c\u518d\u6839\u636e SvrAssetId \u503c\u5173\u8054 p_cpu\uff0c\u518d\u5224\u65ad p_cpu\u91cc\u9762sn\u7684\u503c\u662f\u5426\u7b49\u4e8esn1\u3002\u8fd9\u4e24\u79cd\u6267\u884c\u65b9\u6cd5\u7684\u903b\u8f91\u7ed3\u679c\u662f\u4e00\u6837\u7684\uff0c\u4f46\u662f\u6267\u884c\u7684\u6548\u7387\u4f1a\u6709\u4e0d\u540c\uff0c\u800c\u4f18\u5316\u5668\u7684\u4f5c\u7528\u5c31\u662f\u6839\u636e\u4ee3\u4ef7\u4f30\u8ba1\u6765\u51b3\u5b9a\u9009\u62e9\u4f7f\u7528\u54ea\u4e00\u4e2a\u65b9\u6848\u3002</p>"},{"location":"guide/17-txsql_architecture/#_5","title":"\u6267\u884c\u5668","text":"<p>TXSQL \u901a\u8fc7SQL\u89e3\u6790\u5668\u77e5\u9053\u4e86\u4f60\u8981\u505a\u4ec0\u4e48\uff0c\u901a\u8fc7\u67e5\u8be2\u4f18\u5316\u5668\u77e5\u9053\u4e86\u8be5\u600e\u4e48\u505a\uff0c\u4e8e\u662f\u5c31\u8fdb\u5165\u4e86\u6267\u884c\u5668\u9636\u6bb5\uff0c\u5f00\u59cb\u6267\u884c\u8bed\u53e5\u3002</p> <p>\u5f00\u59cb\u6267\u884c\u7684\u65f6\u5019\uff0c\u8981\u5148\u5224\u65ad\u4e00\u4e0b\u4f60\u5bf9\u8fd9\u4e2a\u8868 T \u6709\u6ca1\u6709\u6267\u884c\u67e5\u8be2\u7684\u6743\u9650\uff0c\u5982\u679c\u6ca1\u6709\uff0c\u5c31\u4f1a\u8fd4\u56de\u6ca1\u6709\u6743\u9650\u7684\u9519\u8bef\u3002\u5982\u679c\u6709\u6743\u9650\uff0c\u5c31\u6253\u5f00\u8868\u7ee7\u7eed\u6267\u884c\u3002\u6253\u5f00\u8868\u7684\u65f6\u5019\uff0c\u6267\u884c\u5668\u5c31\u4f1a\u6839\u636e\u8868\u7684\u5f15\u64ce\u5b9a\u4e49\uff0c\u53bb\u4f7f\u7528\u8fd9\u4e2a\u5f15\u64ce\u63d0\u4f9b\u7684\u63a5\u53e3\u3002 \u5bf9\u4e8e\u67e5\u8be2\u6761\u4ef6 sn \u82e5\u6ca1\u6709\u7d22\u5f15\uff0c\u6267\u884c\u5668\u7684\u6267\u884c\u6d41\u7a0b\u5927\u6982\u662f\u8fd9\u6837\uff1a 1\u3001\u8c03\u7528\u5f15\u64ce\u63a5\u53e3\u8868\u7684\u7b2c\u4e00\u884c\uff0c\u5224\u65ad sn \u662f\u5426\u5339\u914d\uff0c\u4e0d\u5339\u914d\u5219\u8df3\u8fc7\uff0c\u5339\u914d\u5219\u5c06\u8be5\u884c\u5b58\u5728\u7ed3\u679c\u96c6\u4e2d\uff1b 2\u3001\u8c03\u7528\u5f15\u64ce\u63a5\u53e3\u53d6\u4e0b\u4e00\u884c\uff0c\u91cd\u590d\u76f4\u5230\u53d6\u5230\u8868\u7684\u6700\u540e\u4e00\u884c\uff1b 3\u3001\u5c06\u7ed3\u679c\u96c6\u8fd4\u56de\u5ba2\u6237\u7aef\uff1b \u5bf9\u4e8e\u67e5\u8be2\u6761\u4ef6 sn \u82e5\u6709\u7d22\u5f15\uff0c\u6267\u884c\u903b\u8f91\u7c7b\u4f3c\uff0c\u53ea\u662f\u7b2c\u4e00\u6b21\u8c03\u7528\u7684\u662f\u201c\u53d6\u6ee1\u8db3\u6761\u4ef6\u7684\u7b2c\u4e00\u884c\u201d\u8fd9\u4e2a\u63a5\u53e3\uff0c\u4e4b\u540e\u5faa\u73af\u53d6\u201c\u6ee1\u8db3\u6761\u4ef6\u7684\u4e0b\u4e00\u884c\u201d\u8fd9\u4e2a\u63a5\u53e3\uff0c\u8fd9\u4e9b\u63a5\u53e3\u90fd\u662f\u5f15\u64ce\u4e2d\u5df2\u7ecf\u5b9a\u4e49\u597d\u7684\uff1b</p>"},{"location":"guide/17-txsql_architecture/#3","title":"3. \u5b58\u50a8\u5f15\u64ce\u5c42","text":"<p>\u5b58\u50a8\u5f15\u64ce\u5c42\u8d1f\u8d23\u5b58\u50a8\u6570\u636e\u548c\u6267\u884c\u670d\u52a1\u5c42\u7684\u8bf7\u6c42\u3002TXSQL\u9ed8\u8ba4\u4f7f\u7528InnoDB\u5b58\u50a8\u5f15\u64ce\u3002InnoDB\u5f15\u64ce\u662f\u4e00\u4e2a\u4e8b\u52a1\u578b\u5b58\u50a8\u5f15\u64ce\uff0c\u63d0\u4f9b\u4e86\u5bf9\u6570\u636e\u5e93 ACID \u4e8b\u52a1\u7684\u652f\u6301\uff0c\u5e76\u5b9e\u73b0\u4e86 SQL \u6807\u51c6\u7684\u56db\u79cd\u9694\u79bb\u7ea7\u522b\uff0c\u5177\u6709\u884c\u7ea7\u9501\u5b9a\uff08\u8fd9\u4e00\u70b9\u8bf4\u660e\u9501\u7684\u7c92\u5ea6\u5c0f\uff0c\u5728\u5199\u6570\u636e\u65f6\uff0c\u4e0d\u9700\u8981\u9501\u4f4f\u6574\u4e2a\u8868\uff0c\u56e0\u6b64\u9002\u7528\u4e8e\u9ad8\u5e76\u53d1\u60c5\u5f62\uff09\u53ca\u5916\u952e\u652f\u6301\uff08\u6240\u6709\u6570\u636e\u5e93\u5f15\u64ce\u4e2d\u72ec\u4e00\u4efd\uff0c\u4ec5\u6709\u5b83\u652f\u6301\u5916\u952e\uff09\u8be5\u5f15\u64ce\u7684\u8bbe\u8ba1\u76ee\u6807\u4fbf\u662f\u5904\u7406\u5927\u5bb9\u91cf\u6570\u636e\u7684\u6570\u636e\u5e93\u7cfb\u7edf\u3002</p> <p>InnoDB\u7684\u5e95\u5c42\u7ed3\u6784\u4e3b\u8981\u7531\u4e24\u90e8\u5206\u7ec4\u6210\uff1a\u5185\u5b58\u7ed3\u6784\u548c\u7269\u7406\u6587\u4ef6\u3002</p>"},{"location":"guide/17-txsql_architecture/#_6","title":"\u5185\u5b58\u7ed3\u6784","text":"<ul> <li>\u7f13\u51b2\u6c60\uff08Buffer Pool\uff09\uff1a\u5728\u5185\u5b58\u4e2d\u7f13\u5b58\u6570\u636e\u9875\u53ca\u7d22\u5f15\u9875\uff0c\u7528\u4e8e\u52a0\u5feb\u8bbf\u95ee\u901f\u5ea6\u3002\u5f53\u7f13\u51b2\u6c60\u4e0d\u80fd\u5b58\u4e0b\u6240\u6709\u7684\u6570\u636e\u9875\u65f6\uff0c\u9875\u9762\u6dd8\u6c70\u7b97\u6cd5\u5c31\u663e\u5f97\u5c24\u4e3a\u91cd\u8981\u3002</li> <li>\u66f4\u6539\u7f13\u51b2\u533a\uff08Change Buffer\uff09\uff1a\u7528\u4e8e\u7f13\u5b58\u975e\u805a\u96c6\u7d22\u5f15\u7684\u4fee\u6539\u64cd\u4f5c\uff0c\u51cf\u5c11\u78c1\u76d8IO\u3002\u5bf9\u975e\u805a\u96c6\u7d22\u5f15\u7684\u4fee\u6539\u7531\u4e8e\u4e0d\u9700\u8981\u68c0\u67e5\u552f\u4e00\u6027\uff0c\u56e0\u6b64\u53ef\u4ee5\u5148\u7f13\u5b58\u5728\u5185\u5b58\u4e2d\uff0c\u5f53\u9700\u8981\u8bfb\u53d6\u7684\u65f6\u5019\u6216\u8005\u66f4\u6539\u7f13\u51b2\u533a\u5230\u8fbe\u4e00\u5b9a\u5927\u5c0f\u65f6\u6216\u8005\u7f13\u51b2\u6c60\u4e2d\u7684\u6570\u636e\u9700\u8981\u88ab\u5237\u65b0\u5230\u78c1\u76d8\u4e2d\u65f6\uff0c\u518d\u5c06\u6570\u636e\u8fdb\u884c\u5408\u5e76\u64cd\u4f5c\u3002</li> <li>\u81ea\u9002\u5e94\u54c8\u5e0c\u7d22\u5f15\uff08Adaptive Hash Index\uff09\uff1a\u4e3b\u8981\u7528\u4e8e\u52a0\u901f\u7d22\u5f15\u67e5\u8be2\u6548\u7387\u3002InnoDB\u6839\u636e\u67e5\u8be2\u9891\u7387\u548c\u67e5\u8be2\u7684\u6a21\u5f0f\u5efa\u7acb\u7684\u54c8\u5e0c\u7d22\u5f15\uff0c\u53ef\u4ee5\u6839\u636e\u54c8\u5e0c\u51fd\u6570\u5feb\u901f\u5b9a\u4f4d\u5230\u6570\u636e\u9875\u7684\u4f4d\u7f6e\u3002\u7531\u4e8e\u54c8\u5e0c\u8868\u7684\u67e5\u627e\u6548\u7387\u6bd4btree\u9ad8\uff0c\u6240\u4ee5\u80fd\u591f\u63d0\u9ad8\u6570\u636e\u67e5\u627e\u7684\u6548\u7387\u3002</li> <li>\u65e5\u5fd7\u7f13\u51b2\u533a\uff08Log Buffer\uff09\uff1a\u4e3b\u8981\u7528\u4e8e\u7f13\u5b58\u4e8b\u52a1\u7684redo log\uff0c\u4fdd\u8bc1\u4e8b\u52a1\u7684\u6301\u4e45\u6027\u3002\u65e5\u5fd7\u7f13\u51b2\u533a\u7684\u5927\u5c0f\u53d7\u53c2\u6570innodb_log_buffer_size\u63a7\u5236\u3002\u5f53\u4e8b\u52a1\u63d0\u4ea4\u65f6\uff0c\u4f1a\u5c06\u65e5\u5fd7\u7f13\u51b2\u533a\u7684\u65e5\u5fd7\u5237\u5230\u65e5\u5fd7\u6587\u4ef6\u4e2d\u53bb\uff0c\u5237\u65b0\u7b56\u7565\u53d7innodb_flush_log_at_trx_commit\u63a7\u5236\u3002</li> </ul>"},{"location":"guide/17-txsql_architecture/#_7","title":"\u7269\u7406\u6587\u4ef6","text":"<p>TXSQL\u7684\u7269\u7406\u6587\u4ef6\u4e3b\u8981\u6709\u5982\u4e0b\u96c6\u4e2d\u7c7b\u578b\uff1a - \u6570\u636e\u6587\u4ef6\uff08data file\uff09\u662f\u5b58\u50a8\u5f15\u64ce\u5b58\u50a8\u6570\u636e\u7684\u4e3b\u8981\u6587\u4ef6\uff0c\u5b83\u662f\u7531\u4e00\u4e2a\u6216\u591a\u4e2a\u56fa\u5b9a\u5927\u5c0f\u7684\u6570\u636e\u9875\uff08data page\uff09\u7ec4\u6210\u7684\u6587\u4ef6\uff0c\u6bcf\u4e2a\u6570\u636e\u9875\u7684\u5927\u5c0f\u9ed8\u8ba4\u4e3a16KB\u3002\u6570\u636e\u6587\u4ef6\u53ef\u4ee5\u662f\u5355\u4e2a\u6587\u4ef6\uff08ibdata1\uff09\u6216\u591a\u4e2a\u6587\u4ef6\uff08ibdata1, ibdata2, \u2026\uff09\uff0c\u4e5f\u53ef\u4ee5\u662f\u6309\u8868\u5206\u5272\u7684\u6587\u4ef6\uff08table_name.ibd\uff09\u3002\u6570\u636e\u6587\u4ef6\u4e2d\u5b58\u50a8\u4e86\u8868\u7684\u6570\u636e\u3001\u7d22\u5f15\u3001\u5143\u6570\u636e\u7b49\u4fe1\u606f\u3002 - \u65e5\u5fd7\u6587\u4ef6\uff08log file\uff09\u662f\u5b58\u50a8\u65e5\u5fd7\u7684\u4e3b\u8981\u6587\u4ef6\uff0c\u5b83\u662f\u7531\u4e24\u4e2a\u6216\u591a\u4e2a\u56fa\u5b9a\u5927\u5c0f\u7684\u65e5\u5fd7\u6bb5\uff08log segment\uff09\u7ec4\u6210\u7684\u5faa\u73af\u6587\u4ef6\uff0c\u6bcf\u4e2a\u65e5\u5fd7\u6bb5\u7684\u5927\u5c0f\u9ed8\u8ba4\u4e3a48MB\u3002\u65e5\u5fd7\u6587\u4ef6\u53ef\u4ee5\u662f\u5355\u4e2a\u6587\u4ef6\uff08ib_logfile0\uff09\u6216\u591a\u4e2a\u6587\u4ef6\uff08ib_logfile0, ib_logfile1, \u2026\uff09\u3002\u65e5\u5fd7\u6587\u4ef6\u4e2d\u5b58\u50a8\u4e86\u4e8b\u52a1\u7684\u4fee\u6539\u8bb0\u5f55\uff0c\u7528\u4e8e\u4fdd\u8bc1\u4e8b\u52a1\u7684\u6301\u4e45\u6027\u548c\u539f\u5b50\u6027\u3002 - \u7d22\u5f15\u6587\u4ef6\uff08index file\uff09\u662f\u5b58\u50a8\u7d22\u5f15\u7684\u8f85\u52a9\u6587\u4ef6\uff0c\u5b83\u662f\u7531\u4e00\u4e2a\u6216\u591a\u4e2a\u56fa\u5b9a\u5927\u5c0f\u7684\u7d22\u5f15\u9875\uff08index page\uff09\u7ec4\u6210\u7684\u6587\u4ef6\uff0c\u6bcf\u4e2a\u7d22\u5f15\u9875\u7684\u5927\u5c0f\u9ed8\u8ba4\u4e3a16KB\u3002\u7d22\u5f15\u6587\u4ef6\u53ef\u4ee5\u662f\u5355\u4e2a\u6587\u4ef6\uff08table_name.MYI\uff09\u6216\u591a\u4e2a\u6587\u4ef6\uff08table_name.MYI, table_name.MYI.1, \u2026\uff09\u3002\u7d22\u5f15\u6587\u4ef6\u4e2d\u5b58\u50a8\u4e86\u8868\u7684\u8f85\u52a9\u7d22\u5f15\uff0c\u7528\u4e8e\u52a0\u901f\u6570\u636e\u67e5\u8be2\u548c\u6392\u5e8f\u7b49\u64cd\u4f5c\u3002 - \u4e34\u65f6\u6587\u4ef6\uff08temp file\uff09\u662f\u5b58\u50a8\u4e34\u65f6\u6570\u636e\u7684\u8f85\u52a9\u6587\u4ef6\uff0c\u5b83\u662f\u7531\u4e00\u4e2a\u6216\u591a\u4e2a\u56fa\u5b9a\u5927\u5c0f\u7684\u4e34\u65f6\u9875\uff08temp page\uff09\u7ec4\u6210\u7684\u6587\u4ef6\uff0c\u6bcf\u4e2a\u4e34\u65f6\u9875\u7684\u5927\u5c0f\u9ed8\u8ba4\u4e3a16KB\u3002\u4e34\u65f6\u6587\u4ef6\u53ef\u4ee5\u662f\u5355\u4e2a\u6587\u4ef6\uff08ibtmp1\uff09\u6216\u591a\u4e2a\u6587\u4ef6\uff08ibtmp1, ibtmp2, \u2026\uff09\u3002\u4e34\u65f6\u6587\u4ef6\u4e2d\u5b58\u50a8\u4e86\u67e5\u8be2\u8fc7\u7a0b\u4e2d\u4ea7\u751f\u7684\u4e34\u65f6\u8868\u3001\u6392\u5e8f\u7ed3\u679c\u3001\u5206\u7ec4\u7ed3\u679c\u7b49\u4fe1\u606f\u3002</p>"},{"location":"guide/18-txsql_deploy/","title":"TXSQL \u5b89\u88c5\u6307\u5357","text":""},{"location":"guide/18-txsql_deploy/#_1","title":"\u90e8\u7f72\u65b9\u6848\u4ecb\u7ecd","text":"<p>\u672c\u6587\u6863\u9002\u7528\u4e8e\u57fa\u4e8eTXSQL\u5206\u522b\u5728\u57fa\u4e8ex86\uff0864\uff09\u82af\u7247\u3001\u57fa\u4e8eARM\uff08\u9cb2\u9e4f920\uff09\u7cfb\u5217\u82af\u7247\u4e0a\u7684CentOS7.8\u30017.9\uff0cTencentOS Server\uff0c\u94f6\u6cb3\u9e92\u9e9f\u64cd\u4f5c\u7cfb\u7edfV10\uff0c\u5982\u4e0b\u8868\u3002</p> CPU \u64cd\u4f5c\u7cfb\u7edf X86_64 CentOS 7.8\u30017.9\uff08\u542b\u8865\u4e01\uff09\uff0cTencentOS Server ARM\uff08aarch64\uff09\u9cb2\u9e4f920\u7cfb\u5217 \u94f6\u6cb3\u9e92\u9e9fV10\uff08\u542b\u8865\u4e01\uff09"},{"location":"guide/18-txsql_deploy/#txsql_1","title":"\u7f16\u8bd1TXSQL","text":""},{"location":"guide/18-txsql_deploy/#_2","title":"\u5b89\u88c5\u4f9d\u8d56","text":"<pre><code>yum install -y git ncurses-devel bison cmake3 libaio-devel openssl openssl-devel cyrus-sasl-devel openldap-devel gtest libtirpc-devel \n\n### gcc\nyum install centos-release-scl -y\nyum install devtoolset-7-gcc devtoolset-7-gcc-c++ devtoolset-7-binutils -y\n</code></pre>"},{"location":"guide/18-txsql_deploy/#_3","title":"\u7f16\u8bd1\u6d41\u7a0b","text":"<p>\u9009\u62e98.0\u5206\u652f</p> <pre><code>### -t \u53ef\u9009\u62e9debug\u548crelease\u6a21\u5f0f\nmkdir /tmp/txsql_extra &amp;&amp; curl -o /txsql_extra/boost_1_70_0.tar.gz https://archives.boost.io/release/1.70.0/source/boost_1_70_0.tar.gz \ntar xzf /tmp/txsql_extra/boost_1_70_0.tar.gz -C /txsql_extra\n./build.sh -b /tmp/txsql_extra/boost_1_70_0 -t release\n</code></pre> <p>\u7f16\u8bd1\u751f\u6210\u7684TXSQL\u4e8c\u8fdb\u5236\u5305\uff0c\u662f\u5b58\u5728\u4ee3\u7801\u5e93tdsql/mysql_install\u76ee\u5f55\u4e0b</p>"},{"location":"guide/18-txsql_deploy/#txsql_2","title":"\u4f53\u9a8cTXSQL","text":"<p>\u901a\u8fc7 mtr \u62c9\u8d77 mysqld \u6d4b\u8bd5\uff0c\u5728 mysql-test \u76ee\u5f55\u4e0b\uff0c\u6267\u884c ./mtr --start \u5373\u53ef</p> <pre><code>cd bld-release/mysql-test\n./mtr --start\n</code></pre> <p>\u5f85\u6570\u636e\u521d\u59cb\u5316\u597d\u540e\uff0c\u8fde\u63a5\u6570\u636e\u5e93</p> <pre><code>mysql -uroot -S bld-release/mysql-test/var/tmp/mysqld.1.sock\n</code></pre> <p>\u6267\u884c\u811a\u672c\u540e\uff0c\u6709\u5982\u4e0b\u4fe1\u606f\u8fd4\u56de\uff0c\u5219\u8868\u793a\u5b89\u88c5\u6210\u529f</p> <pre><code># Welcome to the MySQL monitor.  Commands end with ; or \\g.\nYour MySQL connection id is 8\nServer version: 8.0.22-txsql-v18-txsql-22.3.0-20240830 Source distribution\n\nCopyright (c) 2000, 2021, Oracle and/or its affiliates.\n\nOracle is a registered trademark of Oracle Corporation and/or its\naffiliates. Other names may be trademarks of their respective\nowners.\n\nType 'help;' or '\\h' for help. Type '\\c' to clear the current input statement.\n\nmysql&gt; show databases;\n+--------------------+\n| Database           |\n+--------------------+\n| information_schema |\n| mtr                |\n| mysql              |\n| performance_schema |\n| sys                |\n| test               |\n+--------------------+\n6 rows in set (0.00 sec)\n</code></pre>"},{"location":"guide/19-txsql_access/","title":"\u5e94\u7528\u63a5\u5165","text":""},{"location":"guide/19-txsql_access/#txsql","title":"\u4f7f\u7528\u547d\u4ee4\u884c\u8fde\u63a5 TXSQL","text":"<p>1.\u4ee5\u4e0b\u662f\u57fa\u4e8e linux \u73af\u5883 cenos \u7cfb\u7edf\uff0c\u4ecb\u7ecd\u5982\u4f55\u5b89\u88c5 mysql client\uff1a</p> <pre><code>yum install mysql\n</code></pre> <p>2.\u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u5982\u4e0b\u547d\u4ee4\u8fde\u63a5\u5230 TXSQL</p> <pre><code>mysql -h &lt;IP \u5730\u5740&gt; -u &lt;\u7528\u6237\u540d\uff0c\u9ed8\u8ba4 root&gt; -P &lt;\u7aef\u53e3\u53f7\uff0c\u9ed8\u8ba43306&gt; -p \n</code></pre>"},{"location":"guide/19-txsql_access/#gui-txsql","title":"\u4f7f\u7528 GUI \u5de5\u5177\u8fde\u63a5 TXSQL","text":"<ol> <li>\u5b89\u88c5 MySQL Workbench\uff0c\u5b98\u65b9\u4e0b\u8f7d\u5730\u5740\u8bf7\u53c2\u89c1 MySQL Workbench</li> <li>\u8fdb\u5165\u4e0b\u8f7d\u9875\u9762\u540e\u5355\u51fb MySQL Workbench\u3002</li> <li>\u8df3\u8f6c\u9875\u9762\u540e\u5728 Windows (x86, 64-bit), MSI Installer \u540e\u5355\u51fb Downloads\u3002</li> <li>\u5355\u51fb No thanks, just start my download\u3002</li> <li>\u5b89\u88c5\u5b8c\u6210\u540e\u6253\u5f00 MySQL Workbench\uff0c\u5728 MySQL Connections \u540e\u5355\u51fb\u52a0\u53f7\u6dfb\u52a0\u5f85\u8fde\u63a5\u7684\u5b9e\u4f8b\u4fe1\u606f\u3002</li> </ol> <ol> <li>\u5728\u5f39\u51fa\u7684\u7a97\u53e3\u4e0b\uff0c\u5b8c\u6210\u5982\u4e0b\u914d\u7f6e\u540e\uff0c\u5355\u51fbok\u3002</li> </ol>"},{"location":"guide/19-txsql_access/#txsql_1","title":"\u4f7f\u7528\u5e94\u7528\u7a0b\u5e8f\u8fde\u63a5 TXSQL","text":""},{"location":"guide/19-txsql_access/#c","title":"c++","text":"<pre><code>#include &lt;stdio.h&gt; \n#include &lt;mysql.h&gt; \n\nint main(void){\n    MYSQL mysql; // mysql \u8fde\u63a5\u53e5\u67c4\n    MYSQL_RES* res; // \u7ed3\u679c\u96c6\n    MYSQL_ROW row; // \u4e00\u884c\u8bb0\u5f55\n\n    // \u914d\u7f6e TXSQL \u8fde\u63a5\u53c2\u6570 \n    const char *host = '';\n    unsinged int port = ;\n    const char * user = '';\n    const char *password = '';\n    const char *db_name = '';\n    mysql_init(&amp;mysql);\n\n    if (mysql_real_connect(&amp;mysql, host, user, password, db_name, port, NULL, 0) == NULL) {\n        printf(\"\u8fde\u63a5\u5931\u8d25\uff01\uff1a %s\\n\", mysql_error(&amp;mysql));\n        exit(-1);\n    }\n    int ret = mysql_query(&amp;mysql, \"select * from student;\");\n\n    res = mysql_store_result(&amp;mysql);\n    int fields_num = mysql_num_fields(res);\n\n    while(row = mysql_fetch_row(res)){\n        for(int i=0;i&lt;fields_num;i++){\n            print(\"%s\\t\", row[i]);\n        }\n        print(\"\\n\");\n    }\n\n    mysql_close(&amp;mysql);\n    return 0;\n}\n</code></pre>"},{"location":"guide/19-txsql_access/#java","title":"java","text":"<p>\u524d\u7f6e\u51c6\u5907\uff1a\u4ee5maven\u9879\u76ee\u4e3a\u4f8b\uff0c\u5728 pom.xml \u6587\u4ef6\u4e2d\u6dfb\u52a0 jdbc \u4f9d\u8d56</p> <pre><code> &lt;dependencies&gt;\n     &lt;dependency&gt;\n         &lt;groupId&gt;mysql&lt;/groupId&gt;\n         &lt;artifactId&gt;mysql-connector-java&lt;/artifactId&gt;\n         &lt;version&gt;8.0.18&lt;/version&gt;\n     &lt;/dependency&gt;\n &lt;/dependencies&gt;\n</code></pre> <pre><code>import java.sql.Connection;\nimport java.sql.DriverManager;\nimport java.sql.PreparedStatement;\nimport java.sql.ResultSet;\nimport java.sql.SQLException;\n\npublic class SelectDemo {\n    public static void main(String[] args) throws ClassNotFoundException, SQLException {\n        String url= \"jdbc:mysql://&lt;Host&gt;:&lt;Port&gt;/&lt;Database&gt;\";  \n        String username = \"\";         \n        String password = \"\";\n        //1.\u6ce8\u518c\u6570\u636e\u5e93\u7684\u9a71\u52a8\n        Class.forName(\"com.mysql.jdbc.Driver\");\n        //2.\u83b7\u53d6\u6570\u636e\u5e93\u8fde\u63a5\n        Connection connection = DriverManager.getConnection(url,username,password);\n        //3.\u9700\u8981\u6267\u884c\u7684sql\u8bed\u53e5\uff08?\u662f\u5360\u4f4d\u7b26\uff0c\u4ee3\u8868\u4e00\u4e2a\u53c2\u6570\uff09\n        String sql = \"select * from student where name = ?\";\n        //4.\u83b7\u53d6\u9884\u5904\u7406\u5bf9\u8c61\uff0c\u5e76\u4f9d\u6b21\u7ed9\u53c2\u6570\u8d4b\u503c\n        PreparedStatement statement = connection.prepareStatement(sql);\n            statement.setString(1,\"Tom\"); \n        // 5. \u67e5\u8be2\u6570\u636e\n        ResultSet resultSet = statement.executeQuery();\n        System.out.println(resultSet.get(\"name\"));\n\n        //6.\u5173\u95edjdbc\u8fde\u63a5\n        statement.close();\n        connection.close();\n    }\n}\n\n</code></pre>"},{"location":"guide/19-txsql_access/#go","title":"go","text":"<p>\u524d\u7f6e\u51c6\u5907\uff1a\u5b89\u88c5 gorm</p> <pre><code>go get -u gorm.io/gorm\n</code></pre> <pre><code>package main\n\nimport (\n\"gorm.io/gorm\"\n\"gorm.io/driver/mysql\"\n)\n\ntype Student struct{\n    Name string\n    Age int\n}\n\nfunc main(){\n\n    // \u914d\u7f6e TXSQL \u8fde\u63a5\u53c2\u6570 \n    username := \"\"  // \u7528\u6237\u540d\n    password := \"\"  // \u5bc6\u7801\n    host := \"\"    // IP \u5730\u5740\n    port :=      // \u7aef\u53e3\n    dbname := \"\"  // \u5e93\u540d\n\n    dsn := fmt.Sprintf(\"%s:%s@tcp(%s:%d)/%s?charset=utf8&amp;parseTime=True&amp;loc=Local\", username, password, host, port, dbname)        \n    db, err := gorm.Open(mysql.Open(dsn), &amp;gorm.Config{}) \n    if err != nil { \n        panic(\"\u8fde\u63a5\u6570\u636e\u5e93\u5931\u8d25, error=\" + err.Error()) \n    }\n    defer db.close()\n\n    var stu Student\n    db.First(&amp;stu)\n}\n</code></pre>"},{"location":"guide/19-txsql_access/#python","title":"python","text":"<p>\u524d\u7f6e\u51c6\u5907\uff1a\u5b89\u88c5 pymysql</p> <pre><code>## python3 \npip3 install PyMySQL\n## python2\npip install pymysql\n</code></pre> <pre><code>import pymysql\n\n# \u6253\u5f00\u8fde\u63a5 \nconnection = pymysql.connect(host='', \n                     user='',  \n                     password='', \n                     database='') \n# \u83b7\u53d6\u4e00\u4e2a\u6e38\u6807\u5bf9\u8c61 cursor \ncursor = connection.cursor() \n# \u6267\u884c SQL \u67e5\u8be2  \ncursor.execute(\"SELECT * from student\") \n# \u83b7\u53d6\u5355\u6761\u6570\u636e\ndata = cursor.fetchone()\n\n# \u5173\u95ed\u8fde\u63a5 \nconnection.close()\n</code></pre>"},{"location":"guide/20-txsql_basic/","title":"\u57fa\u7840\u4f7f\u7528","text":""},{"location":"guide/20-txsql_basic/#txsql","title":"\u8fde\u63a5\u5230TXSQL","text":"<p>\u53ef\u4ee5\u901a\u8fc7\u547d\u4ee4\u884c\u5ba2\u6237\u7aef\u8fde\u63a5\u5230 TXSQL\u670d\u52a1\u5668:</p> <pre><code>mysql -h host  -P port -u user -p\n</code></pre> <ul> <li> <p>-h\uff1a\u6307\u5b9aTXSQL\u670d\u52a1\u5668\u7684\u4e3b\u673a\u540d\u6216IP\u5730\u5740\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0c\u5982\u679c\u672a\u6307\u5b9a\uff0c\u5219\u8fde\u63a5\u5230\u672c\u5730\u4e3b\u673a\u3002</p> </li> <li> <p>-P\uff1a\u6307\u5b9aTXSQL\u670d\u52a1\u5668\u7684\u7aef\u53e3\u53f7\u3002</p> </li> <li> <p>-u\uff1a\u6307\u5b9a\u8981\u8fde\u63a5\u7684\u7528\u6237\u540d\u3002</p> </li> <li> <p>-p\uff1a\u63d0\u793a\u8f93\u5165\u5bc6\u7801\u3002</p> </li> </ul> <p>\u5728\u63d0\u793a\u8f93\u5165\u5bc6\u7801\u65f6\uff0c\u7531\u4e8e\u5b89\u5168\u539f\u56e0\uff0c\u5bc6\u7801\u4e0d\u4f1a\u5728\u5c4f\u5e55\u4e0a\u663e\u793a\u3002\u8f93\u5165\u5bc6\u7801\u540e\uff0c\u6309\u56de\u8f66\u952e\u3002 \u6210\u529f\u5efa\u7acb\u8fde\u63a5\u540e, \u53ef\u4ee5\u770b\u5230txsql&gt; \u63d0\u793a\u7b26, \u8fd9\u65f6\u5c31\u53ef\u4ee5\u6267\u884cSQL \u8bed\u53e5\u64cd\u4f5cTXSQL\u3002</p>"},{"location":"guide/20-txsql_basic/#_1","title":"\u521b\u5efa\u548c\u7ba1\u7406\u6570\u636e\u5e93","text":"<p>\u6570\u636e\u5e93\u662f\u5b58\u50a8\u6570\u636e\u7684\u5bb9\u5668\uff0c\u5b83\u7531\u8868\u3001\u89c6\u56fe\u3001\u5b58\u50a8\u8fc7\u7a0b\u7b49\u7ec4\u6210\u3002\u4f60\u53ef\u4ee5\u4f7f\u7528SQL\u8bed\u53e5\u6765\u521b\u5efa\u548c\u7ba1\u7406\u6570\u636e\u5e93\u3002</p>"},{"location":"guide/20-txsql_basic/#_2","title":"\u521b\u5efa\u6570\u636e\u5e93","text":"<p>\u8981\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u6570\u636e\u5e93\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0bSQL\u8bed\u53e5\uff1a</p> <pre><code>CREATE DATABASE database_name;\n</code></pre> <ul> <li>database_name\uff1a\u6307\u5b9a\u4f60\u60f3\u8981\u521b\u5efa\u7684\u6570\u636e\u5e93\u7684\u540d\u79f0\u3002</li> </ul> <p>\u4f8b\u5982\uff0c\u521b\u5efa\u4e00\u4e2a\u540d\u4e3amydatabase\u7684\u6570\u636e\u5e93\uff1a</p> <pre><code>CREATE DATABASE mydatabase;\n</code></pre>"},{"location":"guide/20-txsql_basic/#_3","title":"\u9009\u62e9\u6570\u636e\u5e93","text":"<p>\u5728\u6267\u884c\u4efb\u4f55\u6570\u636e\u5e93\u64cd\u4f5c\u4e4b\u524d\uff0c\u4f60\u9700\u8981\u9009\u62e9\u4e00\u4e2a\u6570\u636e\u5e93\u3002\u4f7f\u7528\u4ee5\u4e0b\u8bed\u53e5\uff1a</p> <pre><code>USE database_name;\n</code></pre> <p>\u4f8b\u5982\uff0c\u9009\u62e9mydatabase\u6570\u636e\u5e93\uff1a</p> <pre><code>USE mydatabase;\n</code></pre>"},{"location":"guide/20-txsql_basic/#_4","title":"\u6570\u636e\u5e93\u7684\u547d\u540d\u89c4\u5219","text":"<ul> <li> <p>\u6570\u636e\u5e93\u540d\u79f0\u5fc5\u987b\u4ee5\u5b57\u6bcd\u5f00\u5934\uff0c\u53ef\u4ee5\u5305\u542b\u5b57\u6bcd\u3001\u6570\u5b57\u548c\u4e0b\u5212\u7ebf\u3002</p> </li> <li> <p>\u6570\u636e\u5e93\u540d\u79f0\u662f\u533a\u5206\u5927\u5c0f\u5199\u7684\uff08\u5728\u67d0\u4e9b\u914d\u7f6e\u4e2d\uff09\u3002</p> </li> <li> <p>\u6570\u636e\u5e93\u540d\u79f0\u7684\u957f\u5ea6\u9650\u5236\u53d6\u51b3\u4e8eMySQL\u7684\u914d\u7f6e\u3002</p> </li> </ul>"},{"location":"guide/20-txsql_basic/#_5","title":"\u4fee\u6539\u6570\u636e\u5e93","text":"<p>\u4e00\u65e6\u521b\u5efa\u4e86\u6570\u636e\u5e93\uff0c\u4f60\u53ef\u80fd\u9700\u8981\u4fee\u6539\u5176\u8bbe\u7f6e\uff0c\u4f8b\u5982\u66f4\u6539\u5b57\u7b26\u96c6\u6216\u6392\u5e8f\u89c4\u5219\u3002</p>"},{"location":"guide/20-txsql_basic/#_6","title":"\u4fee\u6539\u5b57\u7b26\u96c6\u548c\u6392\u5e8f\u89c4\u5219","text":"<pre><code>ALTER DATABASE database_name CHARACTER SET charset_name COLLATE collation_name;\n</code></pre> <ul> <li> <p>charset_name\uff1a\u6307\u5b9a\u65b0\u7684\u5b57\u7b26\u96c6\uff0c\u4f8b\u5982utf8mb4\u3002</p> </li> <li> <p>collation_name\uff1a\u6307\u5b9a\u65b0\u7684\u6392\u5e8f\u89c4\u5219\uff0c\u4f8b\u5982utf8mb4_unicode_ci\u3002</p> </li> </ul> <p>\u4f8b\u5982\uff0c\u5c06mydatabase\u6570\u636e\u5e93\u7684\u5b57\u7b26\u96c6\u6539\u4e3autf8mb4\uff0c\u6392\u5e8f\u89c4\u5219\u6539\u4e3autf8mb4_unicode_ci\uff1a</p> <pre><code>ALTER DATABASE mydatabase CHARACTER SET utf8mb4 COLLATE utf8mb4_unicode_ci;\n</code></pre>"},{"location":"guide/20-txsql_basic/#_7","title":"\u5220\u9664\u6570\u636e\u5e93","text":"<p>\u5982\u679c\u4f60\u4e0d\u518d\u9700\u8981\u67d0\u4e2a\u6570\u636e\u5e93\uff0c\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u8bed\u53e5\u5220\u9664\u5b83\uff1a</p> <pre><code>DROP DATABASE database_name;\n</code></pre> <p>\u4f8b\u5982\uff0c\u5220\u9664mydatabase\u6570\u636e\u5e93\uff1a</p> <pre><code>DROP DATABASE mydatabase;\n</code></pre>"},{"location":"guide/20-txsql_basic/#_8","title":"\u6570\u636e\u5e93\u7684\u547d\u540d\u89c4\u5219","text":"<ul> <li> <p>\u5220\u9664\u6570\u636e\u5e93\u662f\u4e00\u4e2a\u4e0d\u53ef\u9006\u7684\u64cd\u4f5c\uff0c\u6240\u4ee5\u5728\u6267\u884c\u6b64\u64cd\u4f5c\u4e4b\u524d\u8bf7\u786e\u4fdd\u6ca1\u6709\u8bef\u64cd\u4f5c\u3002</p> </li> <li> <p>\u5982\u679c\u6570\u636e\u5e93\u4e2d\u5305\u542b\u6570\u636e\uff0c\u5220\u9664\u6570\u636e\u5e93\u5c06\u540c\u65f6\u5220\u9664\u6240\u6709\u8868\u548c\u6570\u636e\u3002</p> </li> </ul>"},{"location":"guide/20-txsql_basic/#_9","title":"\u6570\u636e\u5e93\u7684\u5907\u4efd\u548c\u6062\u590d","text":""},{"location":"guide/20-txsql_basic/#_10","title":"\u5907\u4efd\u6570\u636e\u5e93","text":"<p>\u6709\u591a\u79cd\u5907\u4efd\u6570\u636e\u5e93\u7684\u65b9\u6cd5\uff0c\u5176\u4e2d\u6700\u5e38\u7528\u7684\u662f\u4f7f\u7528mysqldump\u5de5\u5177\u3002</p> <pre><code>mysqldump -u username -p database_name &gt; backup_file.sql\n</code></pre> <ul> <li> <p>username\uff1a\u4f60\u7684\u7528\u6237\u540d\u3002</p> </li> <li> <p>database_name\uff1a\u4f60\u60f3\u8981\u5907\u4efd\u7684\u6570\u636e\u5e93\u7684\u540d\u79f0\u3002</p> </li> <li> <p>backup_file.sql\uff1a\u5907\u4efd\u6587\u4ef6\u7684\u540d\u79f0\u3002</p> </li> </ul>"},{"location":"guide/20-txsql_basic/#_11","title":"\u6062\u590d\u6570\u636e\u5e93","text":"<p>\u8981\u6062\u590d\u6570\u636e\u5e93\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u547d\u4ee4\uff1a</p> <pre><code>mysql -u username -p database_name &lt; backup_file.sql\n</code></pre> <ul> <li> <p>database_name\uff1a\u4f60\u60f3\u8981\u6062\u590d\u7684\u6570\u636e\u5e93\u7684\u540d\u79f0\u3002</p> </li> <li> <p>backup_file.sql\uff1a\u5907\u4efd\u6587\u4ef6\u7684\u540d\u79f0\u3002</p> </li> </ul>"},{"location":"guide/20-txsql_basic/#_12","title":"\u6ce8\u610f\u4e8b\u9879","text":"<ul> <li> <p>\u5728\u751f\u4ea7\u73af\u5883\u4e2d\uff0c\u5b9a\u671f\u5907\u4efd\u6570\u636e\u5e93\u662f\u975e\u5e38\u91cd\u8981\u7684\uff0c\u4ee5\u9632\u6b62\u6570\u636e\u4e22\u5931\u3002</p> </li> <li> <p>\u5728\u6267\u884c\u5907\u4efd\u548c\u6062\u590d\u64cd\u4f5c\u65f6\uff0c\u786e\u4fdd\u4f60\u6709\u8db3\u591f\u7684\u6743\u9650\u3002</p> </li> <li> <p>\u5728\u5907\u4efd\u548c\u6062\u590d\u8fc7\u7a0b\u4e2d\uff0c\u53ef\u80fd\u9700\u8981\u8003\u8651\u6570\u636e\u5e93\u7684\u5e76\u53d1\u8bbf\u95ee\u548c\u6570\u636e\u4e00\u81f4\u6027\u3002</p> </li> <li> <p>\u901a\u8fc7\u8fd9\u4e9b\u6b65\u9aa4\uff0c\u4f60\u53ef\u4ee5\u6709\u6548\u5730\u521b\u5efa\u548c\u7ba1\u7406\u6570\u636e\u5e93\uff0c\u5305\u62ec\u521b\u5efa\u3001\u4fee\u6539\u3001\u5220\u9664\u6570\u636e\u5e93\uff0c\u4ee5\u53ca\u5907\u4efd\u6570\u636e\u548c\u6062\u590d\u6570\u636e\u3002</p> </li> </ul>"},{"location":"guide/20-txsql_basic/#_13","title":"\u521b\u5efa\u548c\u7ba1\u7406\u7528\u6237","text":"<p>MySQL\u6570\u636e\u5e93\u4e2d\u7684\u7528\u6237\u662f\u8bbf\u95ee\u6570\u636e\u5e93\u7684\u5b9e\u4f53\uff0c\u6bcf\u4e2a\u7528\u6237\u90fd\u53ef\u4ee5\u62e5\u6709\u4e0d\u540c\u7684\u6743\u9650\u3002\u4ee5\u4e0b\u662f\u5982\u4f55\u521b\u5efa\u548c\u7ba1\u7406\u7528\u6237\u7684\u6b65\u9aa4\u548c\u6307\u5357\u3002</p>"},{"location":"guide/20-txsql_basic/#_14","title":"\u521b\u5efa\u7528\u6237","text":"<p>\u8981\u521b\u5efa\u4e00\u4e2a\u65b0\u7684MySQL\u7528\u6237\uff0c\u4f60\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0bSQL\u8bed\u53e5\uff1a</p> <pre><code>CREATE USER 'username'@'host' IDENTIFIED BY 'password';\nusername\uff1a\u6307\u5b9a\u65b0\u7528\u6237\u7684\u7528\u6237\u540d\u3002\n</code></pre> <ul> <li>host\uff1a\u6307\u5b9a\u7528\u6237\u53ef\u4ee5\u8fde\u63a5\u5230MySQL\u670d\u52a1\u5668\u7684\u4e3b\u673a\u5730\u5740\u3002'%'\u8868\u793a\u4efb\u4f55\u4e3b\u673a\u90fd\u53ef\u4ee5\u8fde\u63a5\u3002</li> <li>password\uff1a\u6307\u5b9a\u7528\u6237\u7684\u5bc6\u7801\u3002 \u4f8b\u5982\uff0c\u521b\u5efa\u4e00\u4e2a\u540d\u4e3auser1\u7684\u7528\u6237\uff0c\u5141\u8bb8\u4ece\u4efb\u4f55\u4e3b\u673a\u8fde\u63a5\uff0c\u5e76\u8bbe\u7f6e\u5bc6\u7801\u4e3amypassword\uff1a</li> </ul> <pre><code>CREATE USER 'user1'@'%' IDENTIFIED BY 'mypassword';\n</code></pre>"},{"location":"guide/20-txsql_basic/#_15","title":"\u5206\u914d\u6743\u9650","text":"<p>\u521b\u5efa\u7528\u6237\u540e\uff0c\u4f60\u9700\u8981\u4e3a\u8be5\u7528\u6237\u5206\u914d\u9002\u5f53\u7684\u6743\u9650\u3002\u4f7f\u7528\u4ee5\u4e0b\u8bed\u53e5\uff1a</p> <pre><code>GRANT privileges ON databasename.* TO 'username'@'host';\n</code></pre> <p>privileges\uff1a\u6307\u5b9a\u7528\u6237\u62e5\u6709\u7684\u6743\u9650\uff0c\u5982SELECT\u3001INSERT\u3001UPDATE\u3001DELETE\u7b49\u3002 databasename\uff1a\u6307\u5b9a\u7528\u6237\u53ef\u4ee5\u8bbf\u95ee\u7684\u6570\u636e\u5e93\u540d\u3002 \u4f8b\u5982\uff0c\u7ed9user1\u7528\u6237\u6388\u4e88\u5bf9mydatabase\u6570\u636e\u5e93\u7684\u6240\u6709\u6743\u9650\uff1a</p> <pre><code>GRANT ALL PRIVILEGES ON mydatabase.* TO 'user1'@'%';\n</code></pre>"},{"location":"guide/20-txsql_basic/#_16","title":"\u7ba1\u7406\u7528\u6237","text":""},{"location":"guide/20-txsql_basic/#1","title":"1. \u4fee\u6539\u7528\u6237\u5bc6\u7801","text":"<p>\u8981\u4fee\u6539\u7528\u6237\u7684\u5bc6\u7801\uff0c\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u8bed\u53e5\uff1a</p> <pre><code>SET PASSWORD FOR 'username'@'host' = PASSWORD('newpassword');\n</code></pre> <p>\u4f8b\u5982\uff0c\u4fee\u6539user1\u7684\u5bc6\u7801\u4e3anewpassword123\uff1a</p> <pre><code>SET PASSWORD FOR 'user1'@'%' = PASSWORD('newpassword123');\n</code></pre>"},{"location":"guide/20-txsql_basic/#2","title":"2. \u4fee\u6539\u7528\u6237\u6743\u9650","text":"<p>\u5982\u679c\u9700\u8981\u4fee\u6539\u7528\u6237\u7684\u6743\u9650\uff0c\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u8bed\u53e5\uff1a</p> <pre><code>GRANT privileges ON databasename.* TO 'username'@'host';\n</code></pre> <p>\u4f8b\u5982\uff0c\u4eceuser1\u7528\u6237\u4e2d\u64a4\u9500\u5bf9mydatabase\u6570\u636e\u5e93\u7684\u6240\u6709\u6743\u9650\uff0c\u7136\u540e\u6388\u4e88SELECT\u6743\u9650\uff1a</p> <pre><code>GRANT SELECT ON mydatabase.* TO 'user1'@'%';\n</code></pre>"},{"location":"guide/20-txsql_basic/#3","title":"3. \u5220\u9664\u7528\u6237","text":"<p>\u8981\u5220\u9664\u4e00\u4e2a\u7528\u6237\uff0c\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0b\u8bed\u53e5\uff1a</p> <pre><code>DROP USER 'username'@'host';\n</code></pre> <p>\u4f8b\u5982\uff0c\u5220\u9664user1\u7528\u6237\uff1a</p> <pre><code>DROP USER 'user1'@'%';\n</code></pre>"},{"location":"guide/20-txsql_basic/#_17","title":"\u6ce8\u610f\u4e8b\u9879","text":"<p>\u5728\u521b\u5efa\u7528\u6237\u548c\u5206\u914d\u6743\u9650\u65f6\uff0c\u786e\u4fdd\u9075\u5faa\u6700\u4f73\u5b89\u5168\u5b9e\u8df5\uff0c\u6bd4\u5982\u4f7f\u7528\u590d\u6742\u7684\u5bc6\u7801\uff0c\u5e76\u9650\u5236\u7528\u6237\u53ea\u80fd\u8bbf\u95ee\u4ed6\u4eec\u9700\u8981\u8bbf\u95ee\u7684\u6570\u636e\u3002 \u5728\u751f\u4ea7\u73af\u5883\u4e2d\uff0c\u907f\u514d\u4f7f\u7528'%'\u4f5c\u4e3a\u4e3b\u673a\u5730\u5740\uff0c\u56e0\u4e3a\u8fd9\u5141\u8bb8\u7528\u6237\u4ece\u4efb\u4f55\u4e3b\u673a\u8fde\u63a5\u5230MySQL\u670d\u52a1\u5668\u3002\u8003\u8651\u4f7f\u7528\u5177\u4f53\u7684IP\u5730\u5740\u6216\u5b50\u7f51\u3002</p>"},{"location":"guide/20-txsql_basic/#sql","title":"\u4f7f\u7528SQL\u8bed\u53e5","text":"<p>\u4f7f\u7528SQL\uff08Structured Query Language\uff0c\u7ed3\u6784\u5316\u67e5\u8be2\u8bed\u8a00\uff09\u662f\u6570\u636e\u5e93\u7ba1\u7406\u7684\u57fa\u7840\u3002SQL\u8bed\u53e5\u7528\u4e8e\u6267\u884c\u5404\u79cd\u6570\u636e\u5e93\u64cd\u4f5c\uff0c\u5305\u62ec\u6570\u636e\u67e5\u8be2\u3001\u6570\u636e\u63d2\u5165\u3001\u6570\u636e\u66f4\u65b0\u3001\u6570\u636e\u5220\u9664\u7b49\u3002\u4ee5\u4e0b\u662f\u5bf9\u51e0\u79cd\u5e38\u89c1SQL\u8bed\u53e5\u7684\u8be6\u7ec6\u8bb2\u89e3\u3002</p>"},{"location":"guide/20-txsql_basic/#1-select","title":"1. \u6570\u636e\u67e5\u8be2\uff08SELECT\uff09","text":"<p>SELECT\u8bed\u53e5\u7528\u4e8e\u68c0\u7d22\u6570\u636e\u5e93\u4e2d\u7684\u6570\u636e\u3002</p> <pre><code>SELECT column1, column2, ... FROM table_name WHERE condition;\n</code></pre> <ul> <li> <p>column1, column2, ...\uff1a\u6307\u5b9a\u8981\u68c0\u7d22\u7684\u5217\u540d\u3002</p> </li> <li> <p>table_name\uff1a\u6307\u5b9a\u8981\u67e5\u8be2\u7684\u8868\u540d\u3002</p> </li> <li> <p>WHERE\uff1a\u53ef\u9009\u6761\u4ef6\u5b50\u53e5\uff0c\u7528\u4e8e\u8fc7\u6ee4\u7ed3\u679c\u96c6\u3002</p> </li> </ul> <p>\u4f8b\u5982\uff0c\u67e5\u8be2employees\u8868\u4e2d\u540d\u4e3aJohn Doe\u7684\u5458\u5de5\u7684email\u548csalary\uff1a</p> <p>SELECT email, salary FROM employees WHERE name = 'John Doe';</p>"},{"location":"guide/20-txsql_basic/#2-insert","title":"2. \u6570\u636e\u63d2\u5165\uff08INSERT\uff09","text":"<p>INSERT\u8bed\u53e5\u7528\u4e8e\u5411\u6570\u636e\u5e93\u8868\u4e2d\u63d2\u5165\u65b0\u8bb0\u5f55\u3002</p> <pre><code>INSERT INTO table_name (column1, column2, ...) VALUES (value1, value2, ...);\n</code></pre> <ul> <li> <p>table_name\uff1a\u6307\u5b9a\u8981\u63d2\u5165\u6570\u636e\u7684\u8868\u540d\u3002</p> </li> <li> <p>column1, column2, ...\uff1a\u6307\u5b9a\u8981\u63d2\u5165\u6570\u636e\u7684\u5217\u540d\u3002</p> </li> <li> <p>value1, value2, ...\uff1a\u6307\u5b9a\u8981\u63d2\u5165\u7684\u503c\u3002</p> </li> </ul> <p>\u4f8b\u5982\uff0c\u5411employees\u8868\u4e2d\u63d2\u5165\u4e00\u6761\u65b0\u8bb0\u5f55\uff1a</p> <pre><code>INSERT INTO employees (name, email, salary) VALUES ('Jane Doe', 'jane.doe@example.com', 50000);\n</code></pre>"},{"location":"guide/20-txsql_basic/#3-update","title":"3. \u6570\u636e\u66f4\u65b0\uff08UPDATE\uff09","text":"<p>UPDATE\u8bed\u53e5\u7528\u4e8e\u4fee\u6539\u6570\u636e\u5e93\u8868\u4e2d\u73b0\u6709\u7684\u8bb0\u5f55\u3002</p> <pre><code>UPDATE table_name SET column1 = value1, column2 = value2, ... WHERE condition;\n</code></pre> <ul> <li> <p>table_name\uff1a\u6307\u5b9a\u8981\u66f4\u65b0\u7684\u8868\u540d\u3002</p> </li> <li> <p>SET\uff1a\u6307\u5b9a\u8981\u66f4\u65b0\u7684\u5217\u548c\u65b0\u7684\u503c\u3002</p> </li> <li> <p>WHERE\uff1a\u53ef\u9009\u6761\u4ef6\u5b50\u53e5\uff0c\u7528\u4e8e\u6307\u5b9a\u54ea\u4e9b\u8bb0\u5f55\u5e94\u8be5\u88ab\u66f4\u65b0\u3002</p> </li> </ul> <p>\u4f8b\u5982\uff0c\u5c06employees\u8868\u4e2d\u540d\u4e3aJohn Doe\u7684\u5458\u5de5\u7684salary\u66f4\u65b0\u4e3a55000\uff1a</p> <pre><code>UPDATE employees SET salary = 55000 WHERE name = 'John Doe';\n</code></pre>"},{"location":"guide/20-txsql_basic/#4-delete","title":"4. \u6570\u636e\u5220\u9664\uff08DELETE\uff09","text":"<p>DELETE\u8bed\u53e5\u7528\u4e8e\u4ece\u6570\u636e\u5e93\u8868\u4e2d\u5220\u9664\u8bb0\u5f55\u3002</p> <pre><code>DELETE FROM table_name WHERE condition;\n</code></pre> <ul> <li> <p>table_name\uff1a\u6307\u5b9a\u8981\u5220\u9664\u8bb0\u5f55\u7684\u8868\u540d\u3002</p> </li> <li> <p>WHERE\uff1a\u53ef\u9009\u6761\u4ef6\u5b50\u53e5\uff0c\u7528\u4e8e\u6307\u5b9a\u54ea\u4e9b\u8bb0\u5f55\u5e94\u8be5\u88ab\u5220\u9664\u3002</p> </li> </ul> <p>\u4f8b\u5982\uff0c\u5220\u9664employees\u8868\u4e2d\u540d\u4e3aJohn Doe\u7684\u5458\u5de5\u8bb0\u5f55\uff1a</p> <pre><code>DELETE FROM employees WHERE name = 'John Doe';\n</code></pre>"},{"location":"guide/20-txsql_basic/#5-select","title":"5. \u6570\u636e\u9009\u62e9\uff08SELECT\uff09","text":"<p>SELECT\u8bed\u53e5\u7684\u53d8\u4f53\uff0c\u7528\u4e8e\u4ece\u6570\u636e\u5e93\u4e2d\u68c0\u7d22\u6570\u636e\uff0c\u4f46\u5177\u6709\u4e0d\u540c\u7684\u7528\u9014\u3002</p> <ul> <li> <p>\u805a\u5408\u51fd\u6570\uff1a\u5982COUNT(), SUM(), AVG(), MIN(), MAX()\uff0c\u7528\u4e8e\u5bf9\u6570\u636e\u8fdb\u884c\u805a\u5408\u8ba1\u7b97\u3002</p> </li> <li> <p>\u8fde\u63a5\uff08JOIN\uff09\uff1a\u5982INNER JOIN, LEFT JOIN, RIGHT JOIN, FULL JOIN\uff0c\u7528\u4e8e\u8fde\u63a5\u4e24\u4e2a\u6216\u591a\u4e2a\u8868\u3002</p> </li> <li> <p>\u5b50\u67e5\u8be2\uff1a\u5728SELECT\u8bed\u53e5\u4e2d\u4f7f\u7528\u53e6\u4e00\u4e2aSELECT\u8bed\u53e5\uff0c\u7528\u4e8e\u4ece\u76f8\u5173\u8868\u4e2d\u68c0\u7d22\u6570\u636e\u3002</p> </li> </ul>"},{"location":"guide/20-txsql_basic/#_18","title":"\u805a\u5408\u51fd\u6570\u793a\u4f8b","text":"<pre><code>SELECT COUNT(*) FROM employees; -- \u8ba1\u7b97employees\u8868\u4e2d\u7684\u8bb0\u5f55\u6570\nSELECT AVG(salary) FROM employees; -- \u8ba1\u7b97employees\u8868\u4e2dsalary\u5217\u7684\u5e73\u5747\u503c\n</code></pre>"},{"location":"guide/20-txsql_basic/#_19","title":"\u8fde\u63a5\u793a\u4f8b","text":"<pre><code>SELECT employees.name, departments.department_name\nFROM employees\nINNER JOIN departments ON employees.department_id = departments.id;\n</code></pre>"},{"location":"guide/20-txsql_basic/#_20","title":"\u5b50\u67e5\u8be2\u793a\u4f8b","text":"<pre><code>SELECT name, salary\nFROM employees\nWHERE salary &gt; (SELECT AVG(salary) FROM employees);\n</code></pre>"},{"location":"guide/20-txsql_basic/#_21","title":"\u6ce8\u610f\u4e8b\u9879","text":"<ul> <li> <p>\u5728\u6267\u884cSQL\u8bed\u53e5\u65f6\uff0c\u786e\u4fdd\u4f60\u6709\u8db3\u591f\u7684\u6743\u9650\u3002</p> </li> <li> <p>\u4f7f\u7528WHERE\u5b50\u53e5\u6765\u907f\u514d\u5220\u9664\u6216\u66f4\u65b0\u5927\u91cf\u6570\u636e\u3002</p> </li> <li> <p>\u5bf9\u4e8e\u590d\u6742\u7684\u67e5\u8be2\uff0c\u8003\u8651\u4f7f\u7528EXPLAIN\u8bed\u53e5\u6765\u5206\u6790\u67e5\u8be2\u6267\u884c\u8ba1\u5212\u3002</p> </li> </ul>"},{"location":"guide/20-txsql_basic/#_22","title":"\u7ba1\u7406\u8868","text":"<p>\u7ba1\u7406\u8868\u6d89\u53ca\u521b\u5efa\u3001\u4fee\u6539\u3001\u5220\u9664\u8868\u4ee5\u53ca\u6267\u884c\u5176\u4ed6\u64cd\u4f5c\u6765\u7ef4\u62a4\u8868\u7684\u7ed3\u6784\u548c\u5185\u5bb9\u3002</p>"},{"location":"guide/20-txsql_basic/#_23","title":"\u521b\u5efa\u8868","text":"<p>\u521b\u5efa\u8868\u7684SQL\u8bed\u53e5</p> <pre><code>CREATE TABLE table_name (\n    column1 datatype [CONSTRAINT constraint_name],\n    column2 datatype [CONSTRAINT constraint_name],\n    ...\n);\n</code></pre> <ul> <li> <p>table_name\uff1a\u6307\u5b9a\u65b0\u8868\u7684\u540d\u79f0\u3002</p> </li> <li> <p>column1, column2, ...\uff1a\u6307\u5b9a\u8868\u4e2d\u7684\u5217\u540d\u548c\u5bf9\u5e94\u7684\u6570\u636e\u7c7b\u578b\u3002</p> </li> <li> <p>CONSTRAINT constraint_name\uff1a\u53ef\u9009\u7684\u7ea6\u675f\u6761\u4ef6\uff0c\u5982\u4e3b\u952e\uff08PRIMARY KEY\uff09\u3001\u5916\u952e\uff08FOREIGN KEY\uff09\u3001\u552f\u4e00\u6027\uff08UNIQUE\uff09\u7b49\u3002</p> </li> </ul>"},{"location":"guide/20-txsql_basic/#_24","title":"\u793a\u4f8b","text":"<p>\u521b\u5efa\u540d\u4e3aemployees\u7684\u8868\uff0c\u5176\u4e2d\u5305\u542bid\u3001name\u3001email\u548cdepartment_id\u5217\uff1a</p> <pre><code>CREATE TABLE employees (\n    id INT AUTO_INCREMENT PRIMARY KEY,\n    name VARCHAR(100) NOT NULL,\n    email VARCHAR(100) UNIQUE NOT NULL,\n    department_id INT,\n    CONSTRAINT fk_department\n        FOREIGN KEY (department_id) REFERENCES departments(id)\n);\n</code></pre>"},{"location":"guide/20-txsql_basic/#_25","title":"\u4fee\u6539\u8868","text":""},{"location":"guide/20-txsql_basic/#_26","title":"\u6dfb\u52a0\u5217","text":"<pre><code>ALTER TABLE table_name ADD column_name datatype [CONSTRAINT constraint_name];\n</code></pre> <p>\u4f8b\u5982\uff0c\u5411employees\u8868\u4e2d\u6dfb\u52a0\u4e00\u4e2aphone\u5217\uff1a</p> <pre><code>ALTER TABLE employees ADD phone VARCHAR(20);\n</code></pre>"},{"location":"guide/20-txsql_basic/#_27","title":"\u4fee\u6539\u5217","text":"<pre><code>ALTER TABLE table_name MODIFY column_name new_datatype [CONSTRAINT constraint_name];\n</code></pre> <p>\u4f8b\u5982\uff0c\u5c06employees\u8868\u4e2d\u7684phone\u5217\u7684\u6570\u636e\u7c7b\u578b\u4eceVARCHAR(20)\u66f4\u6539\u4e3aVARCHAR(30)\uff1a</p> <pre><code>ALTER TABLE employees MODIFY phone VARCHAR(30);\n</code></pre>"},{"location":"guide/20-txsql_basic/#_28","title":"\u5220\u9664\u5217","text":"<pre><code>ALTER TABLE table_name DROP COLUMN column_name;\n</code></pre> <p>\u4f8b\u5982\uff0c\u4eceemployees\u8868\u4e2d\u5220\u9664phone\u5217\uff1a</p> <pre><code>ALTER TABLE employees DROP COLUMN phone;\n</code></pre>"},{"location":"guide/20-txsql_basic/#_29","title":"\u5220\u9664\u8868","text":"<pre><code>DROP TABLE table_name;\n</code></pre> <p>\u4f8b\u5982\uff0c\u5220\u9664employees\u8868\uff1a</p> <pre><code>DROP TABLE employees;\n</code></pre>"},{"location":"guide/20-txsql_basic/#_30","title":"\u91cd\u547d\u540d\u8868","text":"<pre><code>RENAME TABLE old_table_name TO new_table_name;\n</code></pre> <p>\u4f8b\u5982\uff0c\u5c06employees\u8868\u91cd\u547d\u540d\u4e3astaff\uff1a</p> <pre><code>RENAME TABLE employees TO staff;\n</code></pre>"},{"location":"guide/20-txsql_basic/#_31","title":"\u7ea6\u675f","text":"<p>\u7ea6\u675f\u7528\u4e8e\u786e\u4fdd\u6570\u636e\u7684\u5b8c\u6574\u6027\u548c\u51c6\u786e\u6027\u3002</p> <ul> <li> <p>\u4e3b\u952e\uff08PRIMARY KEY\uff09\uff1a\u552f\u4e00\u6807\u8bc6\u8868\u4e2d\u7684\u6bcf\u4e00\u884c\u3002</p> </li> <li> <p>\u5916\u952e\uff08FOREIGN KEY\uff09\uff1a\u786e\u4fdd\u8868\u4e4b\u95f4\u7684\u5173\u7cfb\uff0c\u901a\u5e38\u4e0e\u53e6\u4e00\u4e2a\u8868\u7684\u4e3b\u952e\u76f8\u5173\u8054\u3002</p> </li> <li> <p>\u552f\u4e00\u6027\uff08UNIQUE\uff09\uff1a\u786e\u4fdd\u5217\u4e2d\u7684\u503c\u662f\u552f\u4e00\u7684\u3002</p> </li> <li> <p>\u975e\u7a7a\uff08NOT NULL\uff09\uff1a\u786e\u4fdd\u5217\u4e0d\u80fd\u5305\u542bNULL\u503c\u3002</p> </li> </ul>"},{"location":"guide/20-txsql_basic/#_32","title":"\u6dfb\u52a0\u7ea6\u675f","text":"<pre><code>ALTER TABLE table_name ADD CONSTRAINT constraint_name CONSTRAINT_TYPE (column_name);\n</code></pre> <p>\u4f8b\u5982\uff0c\u4e3aemployees\u8868\u7684email\u5217\u6dfb\u52a0\u552f\u4e00\u6027\u7ea6\u675f\uff1a</p> <pre><code>ALTER TABLE employees ADD CONSTRAINT uc_email UNIQUE (email);\n</code></pre>"},{"location":"guide/20-txsql_basic/#_33","title":"\u5220\u9664\u7ea6\u675f","text":"<pre><code>ALTER TABLE table_name DROP CONSTRAINT constraint_name;\n</code></pre> <p>\u4f8b\u5982\uff0c\u5220\u9664employees\u8868\u4e0a\u7684uc_email\u552f\u4e00\u6027\u7ea6\u675f\uff1a</p> <pre><code>ALTER TABLE employees DROP CONSTRAINT uc_email;\n</code></pre>"},{"location":"guide/20-txsql_basic/#_34","title":"\u67e5\u770b\u8868\u7ed3\u6784","text":"<p>\u8981\u67e5\u770b\u8868\u7684\u7ed3\u6784\uff0c\u53ef\u4ee5\u4f7f\u7528\u4ee5\u4e0bSQL\u8bed\u53e5\uff1a</p> <pre><code>DESCRIBE table_name;\n</code></pre> <p>\u6216\u8005</p> <pre><code>SHOW COLUMNS FROM table_name;\n</code></pre>"},{"location":"guide/20-txsql_basic/#_35","title":"\u6ce8\u610f\u4e8b\u9879","text":"<ul> <li> <p>\u5728\u4fee\u6539\u8868\u7ed3\u6784\u65f6\uff0c\u8981\u8003\u8651\u73b0\u6709\u6570\u636e\u7684\u5f71\u54cd\u548c\u53ef\u80fd\u7684\u8fc1\u79fb\u95ee\u9898\u3002</p> </li> <li> <p>\u5728\u751f\u4ea7\u73af\u5883\u4e2d\uff0c\u5bf9\u8868\u7ed3\u6784\u8fdb\u884c\u91cd\u5927\u66f4\u6539\u4e4b\u524d\uff0c\u5efa\u8bae\u8fdb\u884c\u5907\u4efd\u3002</p> </li> <li> <p>\u4f7f\u7528EXPLAIN\u8bed\u53e5\u53ef\u4ee5\u5206\u6790\u67e5\u8be2\u7684\u6267\u884c\u8ba1\u5212\uff0c\u5e2e\u52a9\u4f18\u5316\u8868\u7ed3\u6784\u3002</p> </li> <li> <p>\u901a\u8fc7\u8fd9\u4e9b\u64cd\u4f5c\uff0c\u4f60\u53ef\u4ee5\u6709\u6548\u5730\u7ba1\u7406\u6570\u636e\u5e93\u4e2d\u7684\u8868\uff0c\u786e\u4fdd\u6570\u636e\u7684\u7ec4\u7ec7\u3001\u5b58\u50a8\u548c\u8bbf\u95ee\u90fd\u662f\u9ad8\u6548\u548c\u5b89\u5168\u7684\u3002</p> </li> </ul>"},{"location":"guide/20-txsql_basic/#_36","title":"\u7ba1\u7406\u7d22\u5f15","text":""},{"location":"guide/20-txsql_basic/#_37","title":"\u7d22\u5f15\u7684\u7c7b\u578b","text":"<p>MySQL\u652f\u6301\u591a\u79cd\u7c7b\u578b\u7684\u7d22\u5f15\uff0c\u5305\u62ec\uff1a</p> <ul> <li> <p>B-Tree\u7d22\u5f15\uff1a\u8fd9\u662fMySQL\u4e2d\u6700\u5e38\u7528\u7684\u7d22\u5f15\u7c7b\u578b\uff0c\u9002\u7528\u4e8e\u5927\u591a\u6570\u67e5\u8be2\u64cd\u4f5c\u3002</p> </li> <li> <p>\u54c8\u5e0c\u7d22\u5f15\uff1a\u9002\u7528\u4e8e\u7b49\u503c\u67e5\u8be2\uff0c\u4f46\u4e0d\u652f\u6301\u8303\u56f4\u67e5\u8be2\u3002</p> </li> <li> <p>\u5168\u6587\u7d22\u5f15\uff1a\u7528\u4e8e\u5168\u6587\u641c\u7d22\uff0c\u9002\u7528\u4e8e\u6587\u672c\u6570\u636e\u3002</p> </li> <li> <p>\u7a7a\u95f4\u7d22\u5f15\uff1a\u7528\u4e8e\u5730\u7406\u7a7a\u95f4\u6570\u636e\u7c7b\u578b\u3002</p> </li> </ul>"},{"location":"guide/20-txsql_basic/#_38","title":"\u521b\u5efa\u7d22\u5f15","text":"<p>\u521b\u5efa\u7d22\u5f15\u53ef\u4ee5\u4f7f\u7528CREATE INDEX\u8bed\u53e5\u6216ALTER TABLE\u8bed\u53e5\u3002</p>"},{"location":"guide/20-txsql_basic/#create-index","title":"\u4f7f\u7528CREATE INDEX\u8bed\u53e5","text":"<pre><code>CREATE INDEX index_name ON table_name (column1, column2, ...);\n</code></pre> <ul> <li> <p>index_name\uff1a\u6307\u5b9a\u7d22\u5f15\u7684\u540d\u79f0\u3002</p> </li> <li> <p>table_name\uff1a\u6307\u5b9a\u5305\u542b\u8981\u521b\u5efa\u7d22\u5f15\u7684\u5217\u7684\u8868\u540d\u3002</p> </li> <li> <p>column1, column2, ...\uff1a\u6307\u5b9a\u8981\u521b\u5efa\u7d22\u5f15\u7684\u5217\u3002</p> </li> </ul> <p>\u4f8b\u5982\uff0c\u4e3aemployees\u8868\u7684email\u5217\u521b\u5efa\u4e00\u4e2aB-Tree\u7d22\u5f15\uff1a</p> <pre><code>CREATE INDEX idx_email ON employees (email);\n</code></pre>"},{"location":"guide/20-txsql_basic/#alter-table","title":"\u4f7f\u7528ALTER TABLE\u8bed\u53e5","text":"<pre><code>ALTER TABLE table_name ADD INDEX index_name (column1, column2, ...);\n</code></pre>"},{"location":"guide/20-txsql_basic/#_39","title":"\u4fee\u6539\u7d22\u5f15","text":"<p>MySQL\u4e0d\u652f\u6301\u76f4\u63a5\u4fee\u6539\u7d22\u5f15\u7684\u7c7b\u578b\u6216\u7ed3\u6784\uff0c\u4f46\u4f60\u53ef\u4ee5\u901a\u8fc7\u5220\u9664\u65e7\u7d22\u5f15\u5e76\u521b\u5efa\u65b0\u7d22\u5f15\u6765\u95f4\u63a5\u4fee\u6539\u3002</p>"},{"location":"guide/20-txsql_basic/#_40","title":"\u5220\u9664\u7d22\u5f15","text":"<pre><code>DROP INDEX index_name ON table_name;\n</code></pre> <p>\u4f8b\u5982\uff0c\u5220\u9664employees\u8868\u4e0a\u7684idx_email\u7d22\u5f15\uff1a</p> <pre><code>DROP INDEX idx_email ON employees;\n</code></pre>"},{"location":"guide/20-txsql_basic/#_41","title":"\u7ba1\u7406\u7d22\u5f15\u7684\u7b56\u7565","text":""},{"location":"guide/20-txsql_basic/#1_1","title":"1. \u9009\u62e9\u5408\u9002\u7684\u5217\u521b\u5efa\u7d22\u5f15","text":"<ul> <li> <p>\u5bf9\u4e8e\u7ecf\u5e38\u7528\u4e8e\u67e5\u8be2\u6761\u4ef6\u7684\u5217\uff0c\u5982WHERE\u5b50\u53e5\u4e2d\u7684\u5217\uff0c\u521b\u5efa\u7d22\u5f15\u53ef\u4ee5\u663e\u8457\u63d0\u9ad8\u67e5\u8be2\u6027\u80fd\u3002</p> </li> <li> <p>\u5bf9\u4e8e\u7ecf\u5e38\u7528\u4e8eJOIN\u64cd\u4f5c\u7684\u5217\uff0c\u521b\u5efa\u7d22\u5f15\u53ef\u4ee5\u52a0\u5feb\u8fde\u63a5\u901f\u5ea6\u3002</p> </li> <li> <p>\u5bf9\u4e8e\u7ecf\u5e38\u7528\u4e8eORDER BY\u6216GROUP BY\u5b50\u53e5\u7684\u5217\uff0c\u521b\u5efa\u7d22\u5f15\u53ef\u4ee5\u52a0\u5feb\u6392\u5e8f\u548c\u5206\u7ec4\u64cd\u4f5c\u3002</p> </li> </ul>"},{"location":"guide/20-txsql_basic/#2_1","title":"2. \u907f\u514d\u8fc7\u5ea6\u7d22\u5f15","text":"<ul> <li> <p>\u8fc7\u591a\u7684\u7d22\u5f15\u4f1a\u5360\u7528\u989d\u5916\u7684\u78c1\u76d8\u7a7a\u95f4\uff0c\u5e76\u53ef\u80fd\u51cf\u6162\u6570\u636e\u63d2\u5165\u3001\u66f4\u65b0\u548c\u5220\u9664\u64cd\u4f5c\uff0c\u56e0\u4e3a\u7d22\u5f15\u4e5f\u9700\u8981\u88ab\u66f4\u65b0\u3002</p> </li> <li> <p>\u5e94\u8be5\u6839\u636e\u5b9e\u9645\u67e5\u8be2\u9700\u6c42\u6765\u521b\u5efa\u7d22\u5f15\uff0c\u907f\u514d\u65e0\u7528\u7684\u7d22\u5f15\u3002</p> </li> </ul>"},{"location":"guide/20-txsql_basic/#3_1","title":"3. \u76d1\u63a7\u7d22\u5f15\u4f7f\u7528\u60c5\u51b5","text":"<ul> <li> <p>\u4f7f\u7528EXPLAIN\u8bed\u53e5\u5206\u6790\u67e5\u8be2\u7684\u6267\u884c\u8ba1\u5212\uff0c\u4e86\u89e3\u7d22\u5f15\u662f\u5426\u88ab\u4f7f\u7528\u3002</p> </li> <li> <p>\u5b9a\u671f\u68c0\u67e5\u7d22\u5f15\u7684\u4f7f\u7528\u60c5\u51b5\uff0c\u79fb\u9664\u4e0d\u518d\u4f7f\u7528\u7684\u7d22\u5f15\u3002</p> </li> </ul>"},{"location":"guide/20-txsql_basic/#4","title":"4. \u7ef4\u62a4\u7d22\u5f15","text":"<ul> <li> <p>\u7d22\u5f15\u53ef\u80fd\u4f1a\u56e0\u4e3a\u6570\u636e\u7684\u53d8\u5316\u800c\u53d8\u5f97\u788e\u7247\u5316\uff0c\u8fd9\u4f1a\u964d\u4f4e\u67e5\u8be2\u6027\u80fd\u3002</p> </li> <li> <p>\u4f7f\u7528OPTIMIZE TABLE\u8bed\u53e5\u53ef\u4ee5\u91cd\u65b0\u7ec4\u7ec7\u8868\u548c\u7d22\u5f15\uff0c\u51cf\u5c11\u788e\u7247\u3002</p> </li> </ul>"},{"location":"guide/20-txsql_basic/#_42","title":"\u793a\u4f8b","text":"<p>\u4ee5\u4e0b\u662f\u4e00\u4e9b\u7ba1\u7406\u7d22\u5f15\u7684\u793a\u4f8b\uff1a</p> <ul> <li>\u4e3aemployees\u8868\u7684email\u5217\u521b\u5efa\u7d22\u5f15\uff1a</li> </ul> <pre><code>CREATE INDEX idx_email ON employees (email);\n</code></pre> <ul> <li>\u4e3aorders\u8868\u7684customer_id\u548corder_date\u5217\u521b\u5efa\u590d\u5408\u7d22\u5f15\uff1a</li> </ul> <pre><code>CREATE INDEX idx_customer_date ON orders (customer_id, order_date);\n</code></pre> <ul> <li>\u5220\u9664orders\u8868\u4e0a\u7684idx_customer_date\u7d22\u5f15\uff1a</li> </ul> <pre><code>DROP INDEX idx_customer_date ON orders;\n</code></pre> <p>\u901a\u8fc7\u5408\u7406\u5730\u521b\u5efa\u548c\u7ba1\u7406\u7d22\u5f15\uff0c\u53ef\u4ee5\u663e\u8457\u63d0\u9ad8\u6570\u636e\u5e93\u67e5\u8be2\u7684\u6027\u80fd\u3002\u7136\u800c\uff0c\u7d22\u5f15\u7684\u521b\u5efa\u548c\u7ba1\u7406\u9700\u8981\u6839\u636e\u5177\u4f53\u7684\u5e94\u7528\u573a\u666f\u548c\u6570\u636e\u8bbf\u95ee\u6a21\u5f0f\u6765\u51b3\u5b9a\u3002</p>"},{"location":"guide/21-txsql_advanced/","title":"\u9ad8\u7ea7\u4f7f\u7528","text":""},{"location":"guide/21-txsql_advanced/#_1","title":"\u7ebf\u7a0b\u6c60","text":""},{"location":"guide/21-txsql_advanced/#_2","title":"\u6982\u8ff0","text":"<p>\u793e\u533a\u7248 MySQL \u7684\u8fde\u63a5\u5904\u7406\u65b9\u6cd5\u9ed8\u8ba4\u662f\u4e3a\u6bcf\u4e2a\u8fde\u63a5\u521b\u5efa\u4e00\u4e2a\u5de5\u4f5c\u7ebf\u7a0b\u7684 one-thread-per-connection\uff08Per_thread\uff09\u6a21\u5f0f\u3002\u8fd9\u79cd\u6a21\u5f0f\u4e0b\uff0c\u7531\u4e8e\u7cfb\u7edf\u7684\u8d44\u6e90\u662f\u6709\u9650\u7684\uff0c\u968f\u7740\u8fde\u63a5\u6570\u7684\u589e\u52a0\uff0c\u8d44\u6e90\u7684\u7ade\u4e89\u4e5f\u589e\u52a0\uff0c\u8fde\u63a5\u7684\u54cd\u5e94\u65f6\u95f4\u4e5f\u968f\u4e4b\u589e\u52a0\u3002 \u5bf9\u4e8e\u6570\u636e\u5e93\u6574\u4f53\u541e\u5410\u800c\u8a00\uff0c\u5219\u662f\u5728\u8d44\u6e90\u672a\u8017\u5c3d\u65f6\u968f\u7740\u8fde\u63a5\u6570\u589e\u52a0\uff0c\u4e00\u65e6\u8fde\u63a5\u6570\u8d85\u8fc7\u4e86\u67d0\u4e2a\u8017\u5c3d\u7cfb\u7edf\u8d44\u6e90\u7684\u4e34\u754c\u70b9\uff0c\u6570\u636e\u5e93\u6574\u4f53\u541e\u5410\u5c31\u4f1a\u968f\u7740\u5404\u8fde\u63a5\u7684\u8d44\u6e90\u4e89\u62a2\u800c\u4e0b\u964d\u3002 \u5982\u4f55\u907f\u514d\u5728\u8fde\u63a5\u6570\u66b4\u589e\u65f6\uff0c\u56e0\u8d44\u6e90\u7ade\u4e89\u800c\u5bfc\u81f4\u7cfb\u7edf\u541e\u5410\u4e0b\u964d\u7684\u95ee\u9898\u5462\uff1fTDSQL\u4e2d\u7ed9\u51fa\u4e86\u7b80\u6d01\u7684\u7b54\u6848\uff1a\u7ebf\u7a0b\u6c60\u3002\u7ebf\u7a0b\u6c60\u7684\u601d\u8def\u5373\u4e3a\u9650\u5236\u540c\u65f6\u8fd0\u884c\u7684\u7ebf\u7a0b\u6570\uff0c\u51cf\u5c11\u7ebf\u7a0b\u6c60\u95f4\u4e0a\u4e0b\u6587\u5207\u6362\u548c\u70ed\u9501\u4e89\u7528\uff0c\u4ece\u800c\u5bf9 OLTP \u5de5\u4f5c\u8d1f\u8f7d\uff08CPU\u6d88\u8017\u8f83\u5c11\u7684\u67e5\u8be2\uff09\u4ea7\u751f\u79ef\u6781\u5f71\u54cd\u3002\u5f53\u8fde\u63a5\u6570\u4e0a\u5347\u65f6\uff0c\u5728\u7ebf\u7a0b\u6c60\u7684\u5e2e\u52a9\u4e0b\u6570\u636e\u5e93\u6574\u4f53\u541e\u5410\u7ef4\u6301\u5728\u4e00\u4e2a\u8f83\u9ad8\u6c34\u51c6\u3002</p>"},{"location":"guide/21-txsql_advanced/#_3","title":"\u539f\u7406","text":"<p>\u7ebf\u7a0b\u6c60\u7684\u57fa\u672c\u539f\u7406\u4e3a\uff1a\u9884\u5148\u521b\u5efa\u4e00\u5b9a\u6570\u91cf\u7684\u5de5\u4f5c\u7ebf\u7a0b\uff08worker \u7ebf\u7a0b\uff09\u3002\u5728\u7ebf\u7a0b\u6c60\u76d1\u542c\u7ebf\u7a0b\uff08listener \u7ebf\u7a0b\uff09\u4ece\u73b0\u6709\u8fde\u63a5\u4e2d\u76d1\u542c\u5230\u65b0\u8bf7\u6c42\u65f6\uff0c\u4ece\u5de5\u4f5c\u7ebf\u7a0b\u4e2d\u5206\u914d\u4e00\u4e2a\u7ebf\u7a0b\u6765\u63d0\u4f9b\u670d\u52a1\u3002\u5de5\u4f5c\u7ebf\u7a0b\u5728\u670d\u52a1\u7ed3\u675f\u4e4b\u540e\u4e0d\u9500\u6bc1\u7ebf\u7a0b\uff0c\u800c\u662f\u4fdd\u7559\u5728\u7ebf\u7a0b\u6c60\u4e2d\u7ee7\u7eed\u7b49\u5f85\u4e0b\u4e00\u4e2a\u8bf7\u6c42\u6765\u4e34\u3002\u9762\u6211\u4eec\u5c06\u4ece\u7ebf\u7a0b\u6c60\u67b6\u6784\u3001\u65b0\u8fde\u63a5\u7684\u521b\u5efa\u4e0e\u5206\u914d\u3001listener \u7ebf\u7a0b\u3001worker \u7ebf\u7a0b\u3001timer \u7ebf\u7a0b\u7b49\u51e0\u4e2a\u65b9\u9762\u6765\u4ecb\u7ecd\u7ebf\u7a0b\u6c60\u7684\u5b9e\u73b0\u3002</p>"},{"location":"guide/21-txsql_advanced/#_4","title":"\u7ebf\u7a0b\u6c60\u67b6\u6784","text":"<p>\u7ebf\u7a0b\u6c60\u7531\u591a\u4e2a\u7ebf\u7a0b\u7ec4\uff08thread group\uff09\u548ctimer\u7ebf\u7a0b\u7ec4\u6210\uff0c\u5982\u4e0b\u56fe\u6240\u793a\u3002\u7ebf\u7a0b\u7ec4\u7684\u6570\u91cf\u662f\u7ebf\u7a0b\u6c60\u5e76\u53d1\u7684\u4e0a\u9650\uff0c\u901a\u5e38\u800c\u8a00\u7ebf\u7a0b\u7ec4\u7684\u6570\u91cf\u9700\u8981\u914d\u7f6e\u6210\u6570\u636e\u5e93\u5b9e\u4f8b\u7684CPU\u6570\u91cf\uff0c\u4ece\u800c\u5145\u5206\u5229\u7528CPU\u3002\u7ebf\u7a0b\u6c60\u4e2d\u8fd8\u6709\u4e00\u4e2a\u670d\u52a1\u4e8e\u6240\u6709\u7ebf\u7a0b\u7ec4\u7684timer\u7ebf\u7a0b\uff0c\u8d1f\u8d23\u5468\u671f\u6027\u68c0\u67e5\u7ebf\u7a0b\u7ec4\u662f\u5426\u5904\u4e8e\u963b\u585e\u72b6\u6001\u3002\u5f53\u68c0\u6d4b\u5230\u963b\u585e\u7684\u7ebf\u7a0b\u7ec4\u65f6\uff0ctimer\u7ebf\u7a0b\u4f1a\u901a\u8fc7\u5524\u9192\u6216\u521b\u5efa\u65b0\u7684\u5de5\u4f5c\u7ebf\u7a0b\u6765\u8ba9\u7ebf\u7a0b\u7ec4\u6062\u590d\u5de5\u4f5c\u3002 </p> <p>\u7ebf\u7a0b\u7ec4\uff08thread group\uff09\uff1a \u5185\u90e8\u7531\u591a\u4e2aworker\u7ebf\u7a0b\u30010\u62161\u4e2alistener\u7ebf\u7a0b\u3001\u9ad8\u4f4e\u4f18\u5148\u7ea7\u4e8b\u4ef6\u961f\u5217\uff08\u7531\u7f51\u7edc\u4e8b\u4ef6event\u6784\u6210\uff09\u3001mutex\u3001epollfd\u3001\u7edf\u8ba1\u4fe1\u606f\u7b49\u7ec4\u6210\u3002\u5982\u4e0b\u56fe\u6240\u793a\uff1a </p>"},{"location":"guide/21-txsql_advanced/#_5","title":"\u65b0\u8fde\u63a5\u7684\u521b\u5efa\u4e0e\u5206\u914d","text":"<p>\u65b0\u8fde\u63a5\u63a5\u5165\u65f6\uff0c\u7ebf\u7a0b\u6c60\u6309\u7167\u65b0\u8fde\u63a5\u7684\u7ebf\u7a0b ID \u53d6\u6a21\u7ebf\u7a0b\u7ec4\u4e2a\u6570\u6765\u786e\u5b9a\u65b0\u8fde\u63a5\u5f52\u5c5e\u7684\u7ebf\u7a0b\u7ec4\u3002  \u9009\u5b9a\u65b0\u8fde\u63a5\u5f52\u5c5e\u7684\u7ebf\u7a0b\u7ec4\u540e\uff0c\u65b0\u8fde\u63a5\u7533\u8bf7\u88ab\u4f5c\u4e3a\u4e8b\u4ef6\u653e\u5165\u4f4e\u4f18\u5148\u7ea7\u961f\u5217\u4e2d\uff0c\u7b49\u5f85\u7ebf\u7a0b\u7ec4\u4e2d worker \u7ebf\u7a0b\u5c06\u9ad8\u4f18\u5148\u7ea7\u4e8b\u4ef6\u961f\u5217\u5904\u7406\u5b8c\u540e\uff0c\u5c31\u4f1a\u5904\u7406\u4f4e\u4f18\u5148\u7ea7\u961f\u5217\u4e2d\u7684\u8bf7\u6c42\u3002</p>"},{"location":"guide/21-txsql_advanced/#listener","title":"listener \u7ebf\u7a0b","text":"<p>listener \u7ebf\u7a0b\u662f\u8d1f\u8d23\u76d1\u542c\u8fde\u63a5\u8bf7\u6c42\u7684\u7ebf\u7a0b\uff0c\u6bcf\u4e2a\u7ebf\u7a0b\u7ec4\u90fd\u6709\u4e00\u4e2a listener \u7ebf\u7a0b\u3002\u7ebf\u7a0b\u6c60\u7684 listene r\u91c7\u7528 epoll \u5b9e\u73b0\u3002\u5f53 epoll\u76d1\u542c\u5230\u8bf7\u6c42\u4e8b\u4ef6\u65f6\uff0clistener \u4f1a\u6839\u636e\u8bf7\u6c42\u4e8b\u4ef6\u7684\u7c7b\u578b\u6765\u51b3\u5b9a\u5c06\u5176\u653e\u5165\u54ea\u4e2a\u4f18\u5148\u7ea7\u4e8b\u4ef6\u961f\u5217\u3002</p>"},{"location":"guide/21-txsql_advanced/#worker","title":"worker \u7ebf\u7a0b","text":"<p>worker \u7ebf\u7a0b\u662f\u7ebf\u7a0b\u6c60\u4e2d\u771f\u6b63\u5e72\u6d3b\u7684\u7ebf\u7a0b\uff0c\u6b63\u5e38\u60c5\u51b5\u4e0b\uff0c\u6bcf\u4e2a\u7ebf\u7a0b\u7ec4\u90fd\u4f1a\u6709\u4e00\u4e2a\u6d3b\u8dc3\u7684 worker \u7ebf\u7a0b\u3002worker \u5728\u7406\u60f3\u72b6\u6001\u4e0b\uff0c\u53ef\u4ee5\u9ad8\u6548\u8fd0\u8f6c\u5e76\u4e14\u5feb\u901f\u5904\u7406\u5b8c\u9ad8\u4f4e\u4f18\u5148\u7ea7\u961f\u5217\u4e2d\u7684\u4e8b\u4ef6\u3002\u4f46\u662f\u5728\u5b9e\u9645\u573a\u666f\u4e2d\uff0cworker \u7ecf\u5e38\u4f1a\u906d\u9047 IO\u3001\u9501\u7b49\u7b49\u5f85\u60c5\u51b5\u800c\u96be\u4ee5\u9ad8\u6548\u5b8c\u6210\u4efb\u52a1\uff0c\u6b64\u65f6\u4efb\u51ed worker \u7ebf\u7a0b\u7b49\u5f85\u5c06\u4f7f\u5f97\u5728\u961f\u5217\u4e2d\u7684\u4e8b\u4ef6\u8fdf\u8fdf\u5f97\u4e0d\u5230\u5904\u7406\u3001\u751a\u81f3\u53ef\u80fd\u51fa\u73b0\u957f\u65f6\u95f4\u6ca1\u6709 listener \u7ebf\u7a0b\u76d1\u542c\u65b0\u8bf7\u6c42\u7684\u60c5\u51b5\u3002\u4e3a\u6b64\uff0c\u6bcf\u5f53 worker \u906d\u9047 IO\u3001\u9501\u7b49\u7b49\u5f85\u60c5\u51b5\uff0c\u5982\u679c\u6b64\u65f6\u7ebf\u7a0b\u7ec4\u4e2d\u6ca1\u6709 listener \u7ebf\u7a0b\u6216\u8005\u9ad8\u4f4e\u4f18\u5148\u7ea7\u4e8b\u4ef6\u961f\u5217\u975e\u7a7a\uff0c\u5e76\u4e14\u6ca1\u6709\u8fc7\u591a\u6d3b\u8dc3 worker\uff0c\u5219\u4f1a\u5c1d\u8bd5\u5524\u9192\u6216\u8005\u521b\u5efa\u4e00\u4e2a worker\u3002\u4e3a\u4e86\u907f\u514d\u77ed\u65f6\u95f4\u5185\u521b\u5efa\u5927\u91cf worker\uff0c\u5e26\u6765\u7cfb\u7edf\u541e\u5410\u6ce2\u52a8\uff0c\u7ebf\u7a0b\u6c60\u521b\u5efa worker \u7ebf\u7a0b\u65f6\u6709\u4e00\u4e2a\u63a7\u5236\u5355\u4f4d\u65f6\u95f4\u521b\u5efa worker \u7ebf\u7a0b\u4e0a\u9650\u7684\u903b\u8f91\uff0c\u7ebf\u7a0b\u7ec4\u5185\u8fde\u63a5\u6570\u8d8a\u591a\u5219\u521b\u5efa\u4e0b\u4e00\u4e2a\u7ebf\u7a0b\u9700\u8981\u7b49\u5f85\u7684\u65f6\u95f4\u8d8a\u957f\u3002</p>"},{"location":"guide/21-txsql_advanced/#timer","title":"timer \u7ebf\u7a0b","text":"<p>timer \u7ebf\u7a0b\u6bcf\u9694threadpool_stall_limit\u65f6\u95f4\u8fdb\u884c\u4e00\u6b21\u6240\u6709\u7ebf\u7a0b\u7ec4\u7684\u626b\u63cf\uff08check_stall\uff09\u3002\u5f53\u7ebf\u7a0b\u7ec4\u9ad8\u4f4e\u4f18\u5148\u7ea7\u961f\u5217\u4e2d\u5b58\u5728\u4e8b\u4ef6\uff0c\u5e76\u4e14\u81ea\u4e0a\u6b21\u68c0\u67e5\u81f3\u4eca\u6ca1\u6709\u65b0\u7684\u4e8b\u4ef6\u88abworker\u6d88\u8d39\u5219\u8ba4\u4e3a\u7ebf\u7a0b\u7ec4\u5904\u4e8e\u505c\u6ede\u72b6\u6001\u3002\u505c\u6ede\u7684\u4e3b\u8981\u539f\u56e0\u53ef\u80fd\u662f\u957f\u65f6\u95f4\u6267\u884c\u7684\u975e\u963b\u585e\u8bf7\u6c42\uff0c \u4e5f\u53ef\u80fd\u53d1\u751f\u4e8e\u7ebf\u7a0b\u6b63\u5728\u7b49\u5f85\u4f46 wait_begin/wait_end \uff08\u5c1d\u8bd5\u5524\u9192\u6216\u521b\u5efa\u65b0\u7684 worker \u7ebf\u7a0b\uff09\u88ab\u4e0a\u5c42\u51fd\u6570\u5fd8\u8bb0\u8c03\u7528\u7684\u573a\u666f\u3002timer \u7ebf\u7a0b\u4f1a\u901a\u8fc7\u5524\u9192\u6216\u521b\u5efa\u65b0\u7684worker\u7ebf\u7a0b\u6765\u8ba9\u505c\u6ede\u7684\u7ebf\u7a0b\u7ec4\u6062\u590d\u5de5\u4f5c\u3002timer \u7ebf\u7a0b\u4e3a\u4e86\u5c3d\u91cf\u51cf\u5c11\u5bf9\u6b63\u5e38\u5de5\u4f5c\u7684\u7ebf\u7a0b\u7ec4\u7684\u5f71\u54cd\uff0c\u5728 check_stall \u65f6\u91c7\u7528\u7684\u662f try_lock \u7684\u65b9\u5f0f\uff0c\u5982\u679c\u52a0\u4e0d\u4e0a\u9501\u5219\u8ba4\u4e3a\u7ebf\u7a0b\u7ec4\u8fd0\u8f6c\u826f\u597d\uff0c\u4e0d\u518d\u53bb\u6253\u6270\u3002  timer \u7ebf\u7a0b\u9664\u4e0a\u8ff0\u5de5\u4f5c\u5916\uff0c\u8fd8\u8d1f\u8d23\u7ec8\u6b62\u7a7a\u95f2\u65f6\u95f4\u8d85\u8fc7 wait_timeout \u79d2\u7684\u5ba2\u6237\u7aef\u3002</p>"},{"location":"guide/21-txsql_advanced/#_6","title":"\u6838\u5fc3\u53c2\u6570","text":"<ul> <li>thread_pool_idle_timeout worker \u7ebf\u7a0b\u5728\u6ca1\u6709\u9700\u8981\u5904\u7406\u7684\u7f51\u7edc\u4e8b\u4ef6\u65f6\uff0c\u6700\u591a\u7b49\u5f85\u6b64\u65f6\u95f4\uff08\u5355\u4f4d\u79d2\uff09\u540e\u9500\u6bc1</li> <li>thread_pool_oversubscribe \u5728\u4e00\u4e2a\u5de5\u4f5c\u7ec4\u4e2d\u6700\u591a\u5141\u8bb8\u591a\u5c11\u4e2a worker</li> <li>thread_pool_size \u7ebf\u7a0b\u7ec4\u4e2a\u6570</li> <li>thread_pool_stall_limit \u6bcf\u95f4\u9694\u6b64\u65f6\u95f4\uff08\u5355\u4f4d\u6beb\u79d2\uff09timer\u7ebf\u7a0b\u8d1f\u8d23\u904d\u5386\u68c0\u67e5\u4e00\u6b21\u6240\u6709\u7ebf\u7a0b\u7ec4\u3002\u5f53\u7ebf\u7a0b\u7ec4\u6ca1\u6709 listener\u3001\u9ad8\u4f4e\u4f18\u5148\u7ea7\u961f\u5217\u975e\u7a7a\u5e76\u4e14\u6ca1\u6709\u65b0\u589e\u7684 IO \u7f51\u7edc\u4e8b\u4ef6\u65f6\u8ba4\u4e3a\u7ebf\u7a0b\u7ec4\u5904\u4e8e stall \u72b6\u6001\uff0ctimer \u7ebf\u7a0b\u8d1f\u8d23\u5524\u9192\u6216\u521b\u5efa\u65b0\u7684 worker \u7ebf\u7a0b\u6765\u7f13\u89e3\u8be5\u7ebf\u7a0b\u7ec4\u7684\u538b\u529b\u3002</li> <li>thread_pool_max_threads \u7ebf\u7a0b\u6c60\u4e2d\u6240\u6709worker\u7ebf\u7a0b\u7684\u603b\u6570</li> <li>thread_pool_high_prio_mode \u9ad8\u4f18\u5148\u7ea7\u961f\u5217\u5de5\u4f5c\u6a21\u5f0f\uff0c\u5305\u62ec\u4e09\u79cd\uff1a transactions\uff1a\u53ea\u6709\u4e00\u4e2a\u5df2\u7ecf\u5f00\u542f\u4e86\u4e8b\u52a1\u7684 SQL\uff0c\u5e76\u4e14 thread_pool_high_prio_tickets \u4e0d\u4e3a0\uff0c\u624d\u4f1a\u8fdb\u5165\u5230\u9ad8\u4f18\u5148\u7ea7\u961f\u5217\u4e2d\uff0c\u6bcf\u4e2a\u8fde\u63a5\u5728 thread_pool_high_prio_tickets \u6b21\u88ab\u653e\u5230\u4f18\u5148\u961f\u5217\u4e2d\u540e\uff0c\u4f1a\u79fb\u5230\u666e\u901a\u961f\u5217\u4e2d\uff1b statement\uff1a\u6240\u6709\u8fde\u63a5\u90fd\u88ab\u653e\u5165\u9ad8\u4f18\u5148\u7ea7\u961f\u5217\u4e2d\uff1b none\uff1a\u4e0estatement\u76f8\u53cd\uff0c\u6240\u6709\u8fde\u63a5\u90fd\u88ab\u653e\u5165\u4f4e\u4f18\u5148\u7ea7\u961f\u5217\u4e2d\u3002</li> <li>thread_pool_high_prio_tickets transactions\u5de5\u4f5c\u6a21\u5f0f\u4e0b\uff0c\u7ed9\u6bcf\u4e2a\u8fde\u63a5\u7684\u6388\u4e88\u7684 tickets \u5927\u5c0f</li> </ul>"},{"location":"guide/21-txsql_advanced/#_7","title":"\u72b6\u6001\u53d8\u91cf","text":"<ul> <li>Threadpool_threads \u7ebf\u7a0b\u7ec4\u5185\u5de5\u4f5c\u7ebf\u7a0b\u6570</li> <li>MySQL \u5728 Replication \u6536\u5230 Source \u7684 binlog \u65f6\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u65e0\u6cd5\u4fdd\u8bc1 relay log \u5b9e\u65f6\u843d\u76d8\uff0c\u5373 sync_relay_log=10000\uff1b\u5982\u679c\u9700\u8981\u4fdd\u8bc1 relay log \u5b9e\u65f6\u843d\u76d8\uff0c\u5373 sync_relay_log=1\uff0c\u5219\u6bcf\u4e2a event \u4f1a\u8c03\u7528\u4e00\u6b21 fsync\uff0c\u6570\u636e\u5e93\u6027\u80fd\u5927\u5e45\u4e0b\u964d\u3002 threadpool\u4e2d idle \u7684\u7ebf\u7a0b\u6570\u91cf</li> </ul>"},{"location":"guide/21-txsql_advanced/#_8","title":"\u5f3a\u540c\u6b65","text":""},{"location":"guide/21-txsql_advanced/#_9","title":"\u6982\u8ff0","text":""},{"location":"guide/21-txsql_advanced/#mysql","title":"MySQL \u539f\u751f\u534a\u540c\u6b65\u590d\u5236\u7f3a\u9677\uff1a","text":"<ol> <li>MySQL \u534a\u540c\u6b65\u590d\u5236\u652f\u6301\u9000\u5316\u6210\u5f02\u6b65\u590d\u5236\uff0c\u5728\u4e25\u683c\u7684\u91d1\u878d\u573a\u666f\u4e0b\u4e0d\u4e00\u5b9a\u5408\u9002\u3002</li> <li>MySQL \u5728 Replication \u6536\u5230 Source \u7684 binlog \u65f6\uff0c\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u65e0\u6cd5\u4fdd\u8bc1 relay log \u5b9e\u65f6\u843d\u76d8\uff0c\u5373sync_relay_log=10000\uff1b\u5982\u679c\u9700\u8981\u4fdd\u8bc1 relay log \u5b9e\u65f6\u843d\u76d8\uff0c\u5373 sync_relay_log=1\uff0c\u5219\u6bcf\u4e2a event \u4f1a\u8c03\u7528\u4e00\u6b21 fsync\uff0c\u6570\u636e\u5e93\u6027\u80fd\u5927\u5e45\u4e0b\u964d\u3002</li> <li>MySQL \u5728\u7b49\u5f85 Replication \u8fd4\u56de ACK \u65f6\u5de5\u4f5c\u7ebf\u7a0b\u662f\u963b\u585e\u72b6\u6001\u7684\uff0c\u82e5\u957f\u65f6\u95f4\u6536\u4e0d\u5230 ACK\uff0c\u7528\u6237\u63d0\u4ea4\u88ab\u6302\u8d77\u3002</li> <li>\u5982\u679c\u8981\u63d0\u9ad8\u5e76\u53d1\u5219\u8981\u4f1a\u5f00\u542f\u66f4\u591a\u7684\u7ebf\u7a0b\uff0c\u800c\u7ebf\u7a0b\u8d8a\u591a\uff0c\u65f6\u8017\u5c31\u8d8a\u4e0d\u7a33\u5b9a\uff0c\u6027\u80fd\u8fbe\u5230\u67d0\u4e2a\u503c\u4e4b\u540e\u4f1a\u4e0b\u964d\u3002</li> <li>\u5728\u8de8 IDC \u7b49\u5ef6\u65f6\u6bd4\u8f83\u5927\u7684\u60c5\u51b5\u4e0b\uff0cMySQL \u534a\u540c\u6b65\u590d\u5236\u6027\u80fd\u4e0b\u964d\u6bd4\u8f83\u5389\u5bb3\u3002</li> </ol>"},{"location":"guide/21-txsql_advanced/#txsql","title":"TXSQL \u5f3a\u540c\u6b65\u590d\u5236\u4e3b\u8981\u6539\u9020\u5982\u4e0b\uff1a","text":"<ol> <li>\u5982\u679c Source \u7b49\u5f85 Replication ACK \u51fa\u73b0\u8d85\u65f6\uff0c\u5219\u8fd4\u56de\u7ed9\u5ba2\u6237\u7aef\u5931\u8d25\uff0c\u4f46\u4e0d\u53ef\u9000\u5316\u6a21\u5f0f\u4e0b\u5f3a\u540c\u6b65\u590d\u5236\u4e0d\u9000\u5316\u6210\u5f02\u6b65\u590d\u5236\u3002\u786e\u4fdd\u4e3b\u5907\u6570\u636e\u5f3a\u4e00\u81f4\uff0c\u4e3b\u5907\u5207\u6362\u4e8b\u52a10\u4e22\u5931\uff0c\u6ee1\u8db3\u91d1\u878d\u573a\u666f\u7684\u8981\u6c42\u3002</li> <li>\u589e\u52a0 rpl_replication_ack_thread \u7ebf\u7a0b\uff0c\u5faa\u73af\u53d6\u51fa io thread \u63a5\u6536\u5230\u7684 binlog name \u548c pos \u7b49\u4fe1\u606f\uff0c\u4e14\u53ea\u5904\u7406\u6700\u540e\u4e00\u4e2a\u3002\u5982\u679c\u961f\u5217\u4e3a\u7a7a\uff0c\u5219\u7b49\u5f85\u3002\u53ef\u4ee5\u901a\u8fc7\u7ec4\u7684\u673a\u5236\u6765\u5b9e\u73b0\uff0c\u6027\u80fd\u4e0e\u5f02\u6b65\u76f8\u5f53\u3002</li> <li>\u542f\u7528\u8be5\u529f\u80fd\u540e\uff0c\u4ece\u5e93 io thread \u4e0d\u662f\u5728\u63a5\u6536\u4e3b\u5e93\u7684 event \u4e4b\u540e\u7acb\u5373\u5199\u5165\u78c1\u76d8\uff08\u4e5f\u4e0d\u662f fsync\uff09\uff0c\u800c\u662f\u5c06 binlog \u6587\u4ef6\u540d\u548c\u504f\u79fb\u91cf\u63d2\u5165\u4e00\u4e2a\u961f\u5217\u3002</li> <li>\u4f7f\u7528 rpl_replication_ack_thread \u7ebf\u7a0b\u4ece\u961f\u5217\u4e2d\u83b7\u53d6 binlog \u4f4d\u7f6e\u4fe1\u606f\uff0c\u7136\u540e\u5199\u5165 binlog_cache\uff0c\u5e76 fsync\uff0c\u7136\u540e\u7ed9\u5f3a\u540c\u6b65\u4e3b\u5e93\u56de ACK \u6d88\u606f\u3002</li> <li>\u5f3a\u540c\u6b65\u590d\u5236\u91c7\u7528\u7ebf\u7a0b\u6c60+\u4e1a\u52a1\u7ebf\u7a0b\u5f02\u6b65\u5316\uff0c\u5145\u5206\u5229\u7528\u8d44\u6e90\uff0c\u6027\u80fd\u63a5\u8fd1\u5f02\u6b65\u590d\u5236</li> <li>\u5728 Source \u7b49\u5f85 Replication ACK\u7684\u8fc7\u7a0b\u4e2d\u5c06\u4f1a\u8bdd\u4fdd\u5b58\u8d77\u6765\uff0c\u7136\u540e\u7ebf\u7a0b\u5207\u6362\u5230\u5176\u4ed6\u7684\u4f1a\u8bdd\u5904\u7406\uff0c\u4e0d\u7528\u65e0\u8c13\u7684\u7b49\u5f85\u3002</li> <li>\u6027\u80fd\u63d0\u5347\u7684\u540c\u65f6\u54cd\u5e94\u65f6\u95f4\u4f1a\u589e\u52a0\uff0c\u4f46\u5728\u9ad8\u5e76\u53d1\u573a\u666f\u4e0b TPS \u4e0d\u4e0b\u964d\u3002</li> </ol>"},{"location":"guide/21-txsql_advanced/#_10","title":"\u539f\u7406","text":"<p>\u5982\u4e0b\u662f\u5f3a\u540c\u6b65\u539f\u7406\u56fe\uff1a  \u9996\u5148 Source \u4e0a\u4e00\u7b14\u5199\u8bf7\u6c42\u5230\u8fbe\uff0c\u7ebf\u7a0b\u6c60\u5206\u914d\u8fde\u63a5\u5904\u7406\u8be5\u8bf7\u6c42\uff0c\u5f53\u6536\u5230 commit \u4e4b\u540e\u5148\u5199 binlog\uff0c\u8fd9\u65f6\u7ee7\u7eed\u5f80\u4e0b\u5e94\u8be5\u56de\u5410\u5ba2\u6237\u7aef\u4fe1\u606f\uff0c\u4f46\u5bf9\u4e8e\u5f00\u542f\u4e86\u5f3a\u540c\u6b65\u7684\u670d\u52a1\u6765\u8bf4\uff0c\u6b64\u65f6\u4f1a\u5148 hold \u4f4f\u8fd9\u4e2a\u64cd\u4f5c\uff0c\u5728\u5185\u5b58\u4fdd\u5b58\u4f1a\u8bdd\u4fe1\u606f\u3002</p> <p>\u7136\u540e\u53ef\u4ee5\u7ee7\u7eed\u5904\u7406\u5176\u94fe\u63a5\u7684\u8bf7\u6c42\u3002\u6b64\u65f6\u5ba2\u6237\u7aef\u8fd8\u4e0d\u80fd\u6536\u5230\u5e94\u7b54\uff0c\u5565\u65f6\u5019\u80fd\u6536\u5230\u5e94\u7b54\u5462\uff1fSource \u542f\u52a8\u4e4b\u540e\uff0c\u4f1a\u5148\u542f\u52a8\u4e00\u4e2a udp \u670d\u52a1\u5668\uff0c\u7528\u6765\u63a5\u53d7 Replication \u6536\u5230 binlog \u7684ACK\u8bf7\u6c42\uff0c\u540c\u65f6\u518d\u542f\u52a8 16 \u4e2a\u5de5\u4f5c\u7ebf\u7a0b\uff0c\u5f53\u6536\u5230 ACK \u8bf7\u6c42\u65f6\uff0c\u8fd9 16 \u4e2a\u7ebf\u7a0b\u5176\u4e2d\u4e4b\u4e00\u53bb\u5524\u9192\u521a\u521a\u4fdd\u5b58\u7684\u4f1a\u8bdd\uff0c\u6267\u884c\u4e0b\u534a\u6bb5\uff08\u5982\u6267\u884c\u5f15\u64ce\u5c42\u63d0\u4ea4\u7b49\uff09\u5e76\u5bf9\u5ba2\u6237\u7aef\u8fd4\u56de\u5e94\u7b54\u4fe1\u606f\u3002</p> <p>\u6240\u4ee5\uff0c\u5728 Source \u4e0a\u65b0\u5f00\u4e86\u4e24\u7ec4\u7ebf\u7a0b\uff0c\u4e00\u7ec4\u4e3a\u63a5\u53d7 ACK \u5e94\u7b54\u7ebf\u7a0b\uff08Dump ACK Thread\uff09\uff0c\u53e6\u5916\u4e00\u7ec4\u4e3a\u5524\u9192hang\u4f4f\u7684\u5ba2\u6237\u7aef\u8fde\u63a5\u7ebf\u7a0b\uff08User ACK Thread\uff09\u3002Replication \u8fd9\u91cc\u6bd4\u8f83\u7b80\u5355\uff0c\u5c31\u662f\u5728io\u7ebf\u7a0b\u5237\u76d8 relay log \u65f6\u7ed9 Source \u7684udp\u7ebf\u7a0b\u53d1\u4e00\u4e2a\u5e94\u7b54\u5305\u3002</p>"},{"location":"guide/21-txsql_advanced/#_11","title":"\u6838\u5fc3\u53c2\u6570","text":"<ul> <li>sqlasyn=ON \u662f\u5426\u5f00\u542f\u5f3a\u540c\u6b65\u6a21\u5f0f\u3002Source \u548c Replication \u9700\u540c\u65f6\u5f00\u542f\u8be5\u53c2\u6570\uff0c\u5f3a\u540c\u6b65\u624d\u80fd\u6b63\u5e38\u5de5\u4f5c\u3002 \u6ce8\u610f\uff1a\u5f3a\u540c\u6b65\u5fc5\u987b\u548c thread pool \u4e00\u8d77\u4f7f\u7528\uff1b\u9488\u5bf9\u4f7f\u7528 extra port \u6216\u8005 socket \u8fde\u63a5\uff08\u6ca1\u6709\u4f7f\u7528 thread pool\uff09\uff0c\u5f3a\u540c\u6b65\u6a21\u5f0f\u5931\u6548\u3002</li> <li>sqlasyntimeout=30 \u5f3a\u540c\u6b65\u4e0b Source \u7b49\u5f85 Replication ACK \u6700\u5927\u65f6\u95f4\uff1b\u5982\u679c\u8d85\u65f6\u4e4b\u540e\u4f1a\u62a5\u8d85\u65f6\u7684\u9519\u8bef\u5e76\u65ad\u5f00\u8fde\u63a5\u3002</li> <li>tdsql_allow_async=OFF \u5982\u679c Source \u6ca1\u6709\u6536\u5230 Replication ACK\uff0c\u5219\u5141\u8bb8\u964d\u7ea7\u4e3a\u5f02\u6b65\u590d\u5236\u3002</li> <li>sqlasync_after_sync=OFF \u5982\u679c\u4e3a ON\uff0c\u5219 Source \u7684\u7528\u6237\u7ebf\u7a0b\u5728\u6536\u5230 Replication ACK \u540e\u8fdb\u884c engine commit\uff0c\u5373 AFTER_SYNC \u6a21\u5f0f\u3002\u5982\u679c\u4e3a OFF\uff0c\u5219 AFTER_COMMIT \u6a21\u5f0f\u3002</li> <li>sqlasynwarntimeout=3 Source \u63a5\u6536 Replication ACK \u8d85\u8fc7\u914d\u7f6e\u7684\u65f6\u95f4\uff0c\u5c06\u4f1a\u5728 error \u65e5\u5fd7\u91cc\u6253\u5370\u4fe1\u606f\uff0c\u4fbf\u4e8e\u5728\u7f51\u7edc\u3001\u5907\u673a\u7b49\u5f02\u5e38\u7684\u65f6\u5019\u5206\u6790\u65e5\u5fd7\u65e2\u53ef\u4ee5\u53d1\u73b0\u4e00\u4e9b\u7ebf\u7d22\u3002\u65e5\u5fd7\u683c\u5f0f\u5982\u4e0b\uff1a</li> </ul> <pre><code>[ERROR] [MY-000000] [Server] session waiting for ack of binlog pos (2,5780) cost [6] sec,exceed 3 sec\n</code></pre> <ul> <li>relay_log_sync_threshold=20000 \u5728\u540c\u6b65\u4e2d\u7ee7\u65e5\u5fd7\u5e76\u5c06ACK\u53d1\u9001\u7ed9Source\u4e4b\u524d\u8981\u7d2f\u79ef\u7684\u5b57\u8282\u6570\u3002</li> <li>relay_log_sync_timeout=1000 \u5982\u679c\u81ea\u4ece\u4e0a\u6b21\u4eceIO\u7ebf\u7a0bfsync\uff06ACK\u4e2d\u7ee7\u65e5\u5fd7\u4ee5\u6765\u5df2\u7ecf\u8fc7\u53bb\u4e86\u8fd9\u4e48\u591a\u5fae\u79d2\uff0c\u5219 IO \u7ebf\u7a0b\u65e0\u8bba\u5982\u4f55\u90fd\u5c06 fsync\uff06ACK \u4e2d\u7ee7\u65e5\u5fd7\uff0c\u800c\u4e0e relay_log_sync_threshold \u65e0\u5173\u3002\u6b64\u8d85\u65f6\u5e94\u8be5\u77ed\u4e8e sqlasyntimeout\uff0c\u5426\u5219\u5ba2\u6237\u7aef\u5728\u63d0\u4ea4\u4e8b\u52a1\u65f6\u5c06\u83b7\u5f97ER_RBTIMEOUT \u9519\u8bef\uff0c\u7136\u540e\u65ad\u5f00\u8fde\u63a5\u3002</li> <li>relay_log_sync_txn_count=10 \u5982\u679cIO\u7ebf\u7a0b\u81ea\u4e0a\u6b21fsync\uff06ACK\u4e2d\u7ee7\u65e5\u5fd7\u4ee5\u6765\u5df2\u63a5\u6536\u5230\u8fd9\u4e48\u591a\u4e8b\u52a1\u7684\u4e8c\u8fdb\u5236\u65e5\u5fd7\uff0c\u5219\u65e0\u8bba\u5176\u4ed6\u9650\u5236\u5982\u4f55\uff0c\u5b83\u5c06\u4ecd\u7136 fsync\uff06ACK\u4e2d\u7ee7\u65e5\u5fd7\u3002</li> <li>tdsql_relay_log_opt=OFF \u5982\u679c\u4e3a ON\uff0c\u59cb\u7ec8\u5728\u4e8b\u52a1\u7ed3\u675f\u65f6\u5237 relay log\uff0c\u4ee5\u4f7f relay log \u53ef\u9760\u3002</li> <li>sqlasync_group_Replication_ack=TRUE \u662f\u5426\u5f00\u542f Replication \u8282\u70b9\u4f7f\u7528 group ack(merge fsync)\uff0c\u4fdd\u8bc1\u6570\u636e\u6301\u4e45\u5316\uff0c\u51cf\u5c11 IO\u3002</li> </ul>"},{"location":"guide/21-txsql_advanced/#_12","title":"\u72b6\u6001\u53d8\u91cf","text":"<ul> <li>sqlasyn_acks_to_Source Replication \u53d1\u9001 ACK \u7ed9 Maste r\u7684\u6b21\u6570\u3002</li> <li>sqlasyn_deal_trx_by_ans  Source \u6536\u5230 Replication ACK \u540e\u5904\u7406\u4e8b\u52a1\u6570\u3002</li> <li>sqlasyn_exceed_warn_num  Source \u63a5\u6536 Replication AC K\u65f6\u95f4\u5927\u4e8e sqlasynwarntimeout \u4e14\u5c0f\u4e8e sqlasyntimeout \u65f6 warn \u4fe1\u606f\u7684\u6b21\u6570\u3002</li> <li>sqlasyn_get_Replication_ans  Source \u63a5\u6536 Replication ACK \u7684\u6b21\u6570\u3002</li> <li>sqlasyn_Replication_recv_txns  \u7edf\u8ba1 Replication \u63a5\u53d7 txn \u7684\u72b6\u6001\u53d8\u91cf\u3002</li> <li>sqlasyn_Replication_relaylog_syncs  relay log fsync \u7684\u6b21\u6570\uff0c\u9700\u8981\u5f00\u542f\u53c2\u6570 tdsql_relay_log_opt\u3002</li> <li>sqlasyn_timeout_num  \u5f3a\u540c\u6b65\u8d85\u65f6\u6b21\u6570\u3002</li> <li>sqlasync_delay_commit  \u5f3a\u540c\u6b65\uff08finish_command\uff09\u63d0\u4ea4\u6b21\u6570\uff08\u975e ordered_commit \u63d0\u4ea4\uff09</li> </ul>"},{"location":"guide/21-txsql_advanced/#_13","title":"\u5ba1\u8ba1","text":""},{"location":"guide/21-txsql_advanced/#_14","title":"\u6982\u8ff0","text":"<p>\u5bf9\u4e8e\u4e00\u4e2a\u4ed3\u5e93\uff0c\u5982\u679c\u8981\u9632\u76d7\uff0c \u5e38\u89c1\u505a\u6cd5\u662f\u51fa\u5165\u53e3\u5168\u88c5\u4e0a\u76d1\u63a7\uff0c\u4e00\u65e6\u6709\u95ee\u9898\u4e86\uff0c\u8c03\u76d1\u63a7\u67e5\u627e\u5f02\u5e38\u60c5\u51b5\u3002\u5bf9\u6570\u636e\u5e93\u6765\u8bf4\u4e5f\u7c7b\u4f3c\uff0c\u6570\u636e\u5e93\u4e5f\u6709\u51fa\u5165\u53e3\uff0c\u5bf9\u6240\u6709\u8fde\u63a5\u51fa\u5165\u53e3\u76d1\u63a7\uff0c\u8bb0\u5f55\u4e0b\u6240\u6709\u52a8\u4f5c\uff0c\u4e00\u65e6\u6709\u95ee\u9898\u4e86\uff0c\u67e5\u8be2\u5386\u53f2\u52a8\u4f5c\uff0c\u627e\u5230\u5173\u952e\u4fe1\u606f\u3002\u5982\u679c\u4ed3\u5e93\u4e2d\u7684\u4e1c\u897f\u4ef7\u503c\u9ad8\uff0c\u635f\u5931\u5df2\u7ecf\u9020\u6210\uff0c\u76d1\u63a7\u53ea\u662f\u4e8b\u540e\u8bf8\u845b\uff0c\u6240\u4ee5\u5f80\u5f80\u8bf7\u4e13\u4e1a\u4eba\u58eb\u5728\u5de1\u903b\u9632\u76d7\uff0c\u9632\u6b62\u5077\u76d7\u53d1\u751f\u3002\u540c\u6837\u6570\u636e\u5e93\u5ba1\u8ba1\u4e5f\u6709\u66f4\u4e13\u4e1a\u7684\u624b\u6bb5\uff0csql \u963b\u65ad\uff0c\u5728\u52a8\u4f5c\u53d1\u751f\u524d\uff0c\u5bf9\u52a8\u4f5c\u884c\u4e3a\u5206\u6790\uff0c\u5982\u679c\u5224\u65ad\u7b26\u5408\u9884\u5148\u8bbe\u7f6e\u7684\u9ad8\u5371\u52a8\u4f5c\uff0c\u76f4\u63a5\u4e2d\u6b62\u6267\u884c\uff0c\u9632\u6b62\u5bf9\u6570\u636e\u9020\u6210\u7834\u574f\u3002 \u5ba1\u8ba1\u5b9a\u4e49\uff1a\u8bb0\u5f55\u7528\u6237\u8bbf\u95ee\u6570\u636e\u5e93\u884c\u4e3a\uff0c\u5b9a\u4f4d\u975e\u6cd5\u52a8\u4f5c\uff0c\u4e8b\u540e\u8ffd\u6839\u6eaf\u6e90\uff0c\u63d0\u9ad8\u6570\u636e\u5e93\u5b89\u5168\u6027\u7684\u529f\u80fd</p>"},{"location":"guide/21-txsql_advanced/#_15","title":"\u539f\u7406","text":"<p>\u540c\u6b65\u5ba1\u8ba1\u7684\u67b6\u6784\u5982\u4e0b\u56fe\u6240\u793a\uff0c\u5de6\u4fa7\u7070\u8272\u90e8\u5206\u5bf9\u5e94\u6570\u636e\u5e93\u670d\u52a1\u5668 mysqld\uff0c\u5b83\u91c7\u7528\u7ebf\u7a0b\u6c60\u4e2d\u76f8\u5bf9\u56fa\u5b9a\u7684\u5de5\u4f5c\u7ebf\u7a0b\u6765\u5904\u7406\u6240\u6709\u7528\u6237\u7684\u8fde\u63a5\u3002\u5de5\u4f5c\u7ebf\u7a0b\u6bcf\u6267\u884c\u4e00\u4e2a query \u6216\u5904\u7406\u4e00\u4e2a\u65b0\u7684\u8fde\u63a5\u4f1a\u751f\u6210\u4e00\u4e2a\u5ba1\u8ba1 event\u3002\u5de5\u4f5c\u7ebf\u7a0b\u9700\u8981\u7ed3\u5408\u5ba1\u8ba1\u89c4\u5219\u5224\u65ad\u5f53\u524d event \u662f\u5426\u9700\u8981\u8bb0\u5f55\uff0c\u5982\u679c\u9700\u8981\u8bb0\u5f55\uff0c\u5219\u5c06\u5ba1\u8ba1 event \u6309\u4e00\u5b9a\u683c\u5f0f\u8f6c\u5316\u4e3a\u5ba1\u8ba1\u65e5\u5fd7\uff0c\u5e76\u62f7\u8d1d\u5230\u516c\u5171\u7684 Audit buffer\u4e2d\u3002Flush thread \u8d1f\u8d23\u5f02\u6b65\u5c06 Audit buffer \u4e2d\u7684\u5ba1\u8ba1\u65e5\u5fd7\u843d\u76d8\u5230\u672c\u5730\u3002</p> <p></p> <p>\u63a5\u4e0b\u6765\uff0c\u8be6\u7ec6\u804a\u4e00\u4e0b\u540c\u6b65\u5ba1\u8ba1\u7684\u5b9e\u73b0\u3002\u4e0b\u56fe\u5de6\u4fa7\u662f\u4e00\u6761 query \u7684\u6267\u884c\u8fc7\u7a0b\uff0c\u5305\u62ec\u8fde\u63a5\uff0c\u8bed\u53e5\u89e3\u6790\u3001\u5206\u6790\u3001\u8bed\u53e5\u91cd\u5199\u3001\u8bed\u53e5\u4f18\u5316\u3001\u8bed\u53e5\u6267\u884c\u3001\u8bed\u53e5\u8fd4\u56de\u548c\u8d44\u6e90\u91ca\u653e\u7b49\u51e0\u4e2a\u6b65\u9aa4\u3002\u4e3a\u4e86\u80fd\u83b7\u53d6 query \u6267\u884c\u7684\u5f71\u54cd\u884c\u6570\u3001\u6267\u884c\u65f6\u95f4\u3001\u9519\u8bef\u7801\u7b49\u5185\u5bb9\uff0cTXSQL \u5ba1\u8ba1\u9009\u62e9\u4e86\u5728\u8bed\u53e5\u8fd4\u56de\u4e4b\u540e\uff0c\u8d44\u6e90\u91ca\u653e\u4e4b\u524d\u7684\u89c2\u5bdf\u70b9\u5904\u7406\u5ba1\u8ba1\u903b\u8f91\u3002\u4e0b\u56fe\u53f3\u4fa7\u662f\u540c\u6b65\u5ba1\u8ba1\u7684\u5177\u4f53\u6d41\u7a0b\uff0c\u5de5\u4f5c\u7ebf\u7a0b\u5728\u8bed\u53e5\u8fd4\u56de\u4e4b\u540e\u3001\u8fdb\u5165\u5ba1\u8ba1\u89c2\u5bdf\u70b9\uff0c\u5982\u679c\u5b9e\u4f8b\u6ca1\u6709\u5f00\u542f\u5ba1\u8ba1\uff0c\u5219\u76f4\u63a5\u8fdb\u5165\u8d44\u6e90\u91ca\u653e\u6b65\u9aa4\u3002\u5982\u679c\u7528\u6237\u5f00\u542f\u4e86\u5ba1\u8ba1\uff0c\u8fdb\u4e00\u6b65\u5224\u65ad\u5f53\u524d\u5ba1\u8ba1 event \u662f\u5426\u9700\u8981\u8bb0\u5f55\u3002\u5982\u679c\u9700\u8981\u5219\u83b7\u53d6\u5ba1\u8ba1\u5185\u5bb9\u5e76\u8ba1\u7b97\u5ba1\u8ba1\u5185\u5bb9\u7684\u957f\u5ea6\u3002\u8ba1\u7b97\u5b8c\u5ba1\u8ba1\u65e5\u5fd7\u957f\u5ea6\u540e\uff0c\u52a0\u9501\u5728\u516c\u5171 Audit buffer \u4e2d\u8fdb\u884c\u5185\u5b58\u5360\u4f4d\uff0c\u63a5\u4e0b\u6765\u7acb\u523b\u91ca\u653e\u9501\uff0c\u5728\u65e0\u9501\u7684\u60c5\u51b5\u4e0b\u5c06\u5ba1\u8ba1 event \u8f6c\u5316\u4e3a json \u683c\u5f0f\u7684\u5ba1\u8ba1\u65e5\u5fd7\u5e76\u62f7\u8d1d\u5230\u516c\u5171 Audit buffer \u4e2d\u5df2\u5360\u9886\u7684\u4f4d\u7f6e\u5904\u3002Flush\u7ebf\u7a0b\u5f02\u6b65\u5c06Audit buffer\u4e2d\u7684\u5ba1\u8ba1\u65e5\u5fd7\u843d\u76d8\u5230\u672c\u5730\u3002</p> <p> \u540c\u6b65\u5ba1\u8ba1\u6700\u5927\u7684\u7279\u70b9\u5728\u4e8e\u5de5\u4f5c\u7ebf\u7a0b\u5728\u751f\u4ea7\u5ba1\u8ba1\u65e5\u5fd7\u7684\u8fc7\u7a0b\u4e2d\uff0c\u8ba1\u7b97\u5ba1\u8ba1\u5185\u5bb9\u957f\u5ea6\u3001\u5185\u5bb9 json \u8f6c\u6362\u548c Audit buffer \u62f7\u8d1d\u90fd\u662f\u5728\u65e0\u9501\u7684\u60c5\u51b5\u4e0b\u8fdb\u884c\u7684\u3002\u6574\u4e2a\u8fc7\u7a0b\u53ea\u6709\u5185\u5b58\u5360\u4f4d\u9700\u8981\u6301\u6709\u9501\uff0c\u4e34\u754c\u533a\u8db3\u591f\u5c0f\uff0c\u4f7f\u5f97 Audit buffer \u7684\u5199\u9501\u6ca1\u6709\u6210\u4e3a\u7cfb\u7edf\u74f6\u9888\uff0c\u4ece\u800c\u5728\u7edd\u5927\u591a\u6570\u573a\u666f\u4e0b\u4fdd\u6301\u4e86\u6781\u9ad8\u7684\u6027\u80fd\u3002\u5e73\u5747\u7684\u6027\u80fd\u5f71\u54cd\u53ea\u67096%\u3002</p>"},{"location":"guide/21-txsql_advanced/#_16","title":"\u6838\u5fc3\u53c2\u6570","text":"<ul> <li>audit_txsql_audit_mode \u5ba1\u8ba1\u65e5\u5fd7\u5de5\u4f5c\u6a21\u5f0f\uff0call \u4ee3\u8868\u5168\u90e8\u5ba1\u8ba1\uff0cfilter \u5219\u4ee3\u8868\u6839\u636e <code>audit_txsql_filter_db</code>\u3001<code>audit_txsql_filter_user</code>\u3001<code>audit_txsql_filter_ip</code>\u8bb0\u5f55\u5ba1\u8ba1\u65e5\u5fd7</li> <li>audit_txsql_log_file_max_size \u5355\u4e2a\u5ba1\u8ba1\u65e5\u5fd7\u6587\u4ef6\u7684\u5927\u5c0f\uff0c\u8303\u56f4\u57288M\u523010G</li> <li>audit_txsql_rotate_write_log \u662f\u5426\u5f00\u542f\u8f6e\u6d41\u6a21\u5f0f\u7684\u5199\u6587\u4ef6</li> <li>audit_txsql_rotate_file_count \u4f7f\u7528\u8f6e\u6d41\u6a21\u5f0f\u7684\u5199\u6587\u4ef6\u7684\u4e2a\u6570\uff0c\u8303\u56f4\u57281\u523010</li> <li>audit_txsql_truncate_length sql \u622a\u65ad\u957f\u5ea6</li> <li>audit_txsql_audit_dir \u7528\u6237\u5ba1\u8ba1\u7684\u76ee\u6807\u76ee\u5f55</li> <li>audit_txsql_filter_db \u9700\u8981\u8bb0\u5f55\u5ba1\u8ba1\u65e5\u5fd7\u7684 db</li> <li>audit_txsql_filter_ip \u9700\u8981\u8bb0\u5f55\u5ba1\u8ba1\u65e5\u5fd7\u7684 ip</li> <li>audit_txsql_filter_user \u9700\u8981\u8bb0\u5f55\u5ba1\u8ba1\u65e5\u5fd7\u7684\u7528\u6237</li> </ul>"},{"location":"guide/21-txsql_advanced/#_17","title":"\u72b6\u6001\u53d8\u91cf","text":"<ul> <li>audit_cdb_ignore_actions \u56e0\u7cfb\u7edf\u538b\u529b\u8fc7\u5927\uff0c\u5ffd\u7565\u7684\u5ba1\u8ba1\u8bb0\u5f55\u6761\u6570</li> <li>audit_cdb_truncat_counts \u88ab\u622a\u65ad\u7684sql\u8bb0\u5f55\u6761\u6570</li> </ul>"},{"location":"guide/21-txsql_advanced/#_18","title":"\u5217\u538b\u7f29","text":""},{"location":"guide/21-txsql_advanced/#_19","title":"\u6982\u8ff0","text":"<p>\u5f53\u524d\u6709\u9488\u5bf9\u884c\u683c\u5f0f\u7684\u538b\u7f29\u548c\u9488\u5bf9\u6570\u636e\u9875\u9762\u7684\u538b\u7f29\uff0c\u4f46\u662f\u8fd9\u4e24\u79cd\u538b\u7f29\u65b9\u5f0f\u5728\u5904\u7406\u4e00\u4e2a\u8868\u4e2d\u7684\u67d0\u4e9b\u5927\u5b57\u6bb5\u548c\u5176\u4ed6\u5f88\u591a\u5c0f\u5b57\u6bb5\uff0c\u540c\u65f6\u5bf9\u5c0f\u5b57\u6bb5\u7684\u8bfb\u5199\u5f88\u9891\u7e41\uff0c\u5bf9\u5927\u5b57\u6bb5\u8bbf\u95ee\u4e0d\u9891\u7e41\u7684\u60c5\u5f62\u4e2d\uff0c\u5b83\u7684\u8bfb\u5199\u8bbf\u95ee\u65f6\u90fd\u4f1a\u9020\u6210\u5f88\u591a\u4e0d\u5fc5\u8981\u7684\u8ba1\u7b97\u8d44\u6e90\u7684\u6d6a\u8d39\uff0c\u56e0\u6b64\u9700\u8981\u5217\u538b\u7f29\u529f\u80fd\u6765\u538b\u7f29\u54ea\u4e9b\u8bbf\u95ee\u4e0d\u9891\u7e41\u7684\u5927\u5b57\u6bb5\uff0c\u540c\u65f6\u80fd\u591f\u51cf\u5c11\u6574\u884c\u5b57\u6bb5\u7684\u7684\u5b58\u50a8\u7a7a\u95f4\uff0c\u63d0\u9ad8\u8bfb\u5199\u8bbf\u95ee\u7684\u6548\u7387\u3002 \u4f8b\u5982\uff1a\u4e00\u5f20\u5458\u5de5\u8868\uff1a<code>create table employee(id int, age int, gender boolean, other varchar(1000) primary key (id))</code>\uff0c\u5f53\u5bf9<code>id,age,gender</code>\u5c0f\u5b57\u6bb5\u8bbf\u95ee\u6bd4\u8f83\u9891\u7e41\uff0c\u800c\u5bf9<code>other</code>\u5927\u5b57\u6bb5\u7684\u8bbf\u95ee\u9891\u7387\u6bd4\u8f83\u4f4e\u65f6\uff0c\u53ef\u4ee5\u5c06<code>other</code>\u5217\u521b\u5efa\u4e3a\u538b\u7f29\u5217\u3002\u4e00\u822c\u60c5\u51b5\u4e0b\uff0c\u53ea\u6709\u5bf9<code>other</code>\u7684\u8bfb\u5199\u624d\u4f1a\u89e6\u53d1\u5bf9\u8be5\u5217\u7684\u538b\u7f29\u548c\u89e3\u538b\uff0c\u5bf9\u5176\u4ed6\u5217\u7684\u8bbf\u95ee\u5e76\u4e0d\u4f1a\u89e6\u53d1\u8be5\u5217\u7684\u538b\u7f29\u548c\u89e3\u538b\u3002\u7531\u6b64\u8fdb\u4e00\u6b65\u964d\u4f4e\u4e86\u884c\u6570\u636e\u5b58\u50a8\u7684\u5927\u5c0f\uff0c\u4f7f\u5f97\u6211\u4eec\u5728\u8bbf\u95ee\u9891\u7e41\u7684\u5c0f\u5b57\u6bb5\u80fd\u591f\u66f4\u5feb\uff0c\u5bf9\u5b58\u50a8\u7a7a\u95f4\u6bd4\u8f83\u5927\u800c\u8bbf\u95ee\u9891\u7387\u6bd4\u8f83\u4f4e\u7684\u5b57\u6bb5\uff0c\u4f7f\u5f97\u6211\u4eec\u8fdb\u4e00\u6b65\u591f\u964d\u4f4e\u5b58\u50a8\u7a7a\u95f4\u3002</p>"},{"location":"guide/21-txsql_advanced/#_20","title":"\u539f\u7406","text":""},{"location":"guide/21-txsql_advanced/#server","title":"\u5728Server\u5c42\u4e2d\u7684\u8bcd\u6cd5\u5206\u6790\u548c\u8bed\u6cd5\u5206\u6790\u4e2d\uff0c\u589e\u52a0\u538b\u7f29\u4e0e\u538b\u7f29\u7b97\u6cd5\u5217\u5c5e\u6027\u7684\u8bcd\u6cd5\u8868\u8fbe\u4e0e\u8bed\u6cd5\u68c0\u67e5","text":"<p>\u5728\u5217\u5c5e\u6027(column attribute)\u4e2d\u589e\u52a0\u538b\u7f29\u5c5e\u6027\u3002\u8fd9\u91cc\u5229\u7528\u5230 MySQL \u539f\u751f\u7684 column format \u5b9e\u73b0\uff1acolumn format\u539f\u672c\u6709<code>[default|fixed|dynamic]</code>\u4e09\u79cd\u683c\u5f0f\u3002TXSQL \u5728\u6b64\u57fa\u7840\u4e0a\u65b0\u589e\u683c\u5f0f<code>compressed</code>\uff0c\u5f53\u8bcd\u6cd5\u89e3\u6790\u5230\u67d0\u4e00\u5217\u7684\u5c5e\u6027\u4e3a<code>COLUMN_FORMAT COMPRESSED</code>\u6216<code>COMRPESSED</code>\uff0c\u5219\u5c06\u8fd9\u4e00\u5217\u7684\u5c5e\u6027\u8bbe\u7f6e\u4e3a\u538b\u7f29\u5c5e\u6027\u3002 \u8be5\u5c5e\u6027\u4f1a\u6682\u65f6\u4fdd\u5b58\u5230 <code>Create_field</code> \u7c7b\u4e2d\u6210\u5458 <code>flags</code> \u7684\u7b2c24-25\u4f4d\uff0c\u5e76\u8fdb\u4e00\u6b65\u901a\u8fc7\u7c7b<code>Field</code>\u7684\u6210\u5458<code>flags</code>\u8fdb\u884c\u4f20\u9012</p>"},{"location":"guide/21-txsql_advanced/#server_1","title":"\u5728Server\u5c42\u4e2d\u83b7\u53d6\u5e76\u5b58\u50a8\u538b\u7f29\u4fe1\u606f","text":"<p>\u5728Server\u5c42\u7684\u6570\u636e\u5b57\u5178\u4e2d\uff0c\u5217\u683c\u5f0f\u548c\u5217\u538b\u7f29\u7b97\u6cd5\u88ab\u7528 (key, value) \u7684 map \u5f62\u5f0f\u8bb0\u5f55\u5728\u8868<code>mysql.columns</code>\u7684<code>options</code>\u5217\u91cc\uff0c\u4ee5 mediumtext \u5217\u7684\u5f62\u5f0f\u843d\u5730\u3002 \u5176\u4e2d\u5217\u683c\u5f0f\u7684 key \u4e3a<code>column_format</code>\uff0cvalue\u4e3a0-3 (\u5206\u522b\u8868\u793a<code>default</code>,<code>fixed</code>,<code>dynamic</code>,<code>compressed</code>)\uff1b\u5217\u538b\u7f29\u7b97\u6cd5\u7684 key \u4e3a<code>compressed_algo</code>\uff0cvalue\u4e3a 0-2 (\u5206\u522b\u8868\u793a<code>zlib(default)</code>,<code>lz4</code>,<code>zstd</code>)\u3002</p>"},{"location":"guide/21-txsql_advanced/#innodb","title":"\u5728InnoDB\u5f15\u64ce\u5c42\u4e2d\u8bfb\u53d6\u538b\u7f29\u4fe1\u606f\u5e76\u4e14\u5bf9\u6570\u636e\u8fdb\u884c\u538b\u7f29/\u89e3\u538b\u7f29","text":"<p>MySQL-8.0 \u5728\u8c03\u7528 InnoDB \u63a5\u53e3\u65f6\u4f1a\u751f\u6210\u4e34\u65f6\u5185\u5b58\u8868\uff0c\u8fd9\u65f6\u4f1a\u4ece<code>Create_field</code>\u4e2d\u8bfb\u51fa\u5404\u79cd\u5c5e\u6027\u4e0e options \u586b\u5145\u5230\u5185\u5b58\u8868\u4e2d\u3002\u6b64\u65f6\uff0c\u538b\u7f29\u5217\u548c\u538b\u7f29\u7b97\u6cd5\u88ab\u53d6\u51fa\u5b58\u5230<code>flags</code>\u548c<code>comp_col_algo</code>\u4e2d\u3002 \u4e4b\u540e\uff0cInnoDB \u4f1a\u6784\u9020 template \u8868\u6765\u5b8c\u6210 MySQL \u8868\u5230 InnoDB \u7684\u8f6c\u6362\u3002TXSQL \u5728 InnoDB \u7684 template \u5217\u8868\u4e2d\u589e\u52a0\u4e86<code>is_compressed</code>\u5c5e\u6027\uff0c\u6765\u8868\u793a\u662f\u5426\u538b\u7f29\uff0c\u8fd9\u4e2a\u5c5e\u6027\u4ece<code>flags</code>\u4e2d\u8bfb\u53d6\uff1b\u8fd8\u589e\u52a0\u4e86 <code>col_comp_algorithm</code>\u5c5e\u6027\uff0c\u6765\u8868\u793a\u538b\u7f29\u7b97\u6cd5\uff0c\u4ece<code>comp_col_algo</code> \u4e2d\u83b7\u5f97\u3002 <code>row_prebuilt_t</code>\u8fd9\u4e00\u6570\u636e\u7c7b\u578b\u5728InnoDB\u4e2d\u88ab\u7528\u6765\u52a0\u901f\u5904\u7406 MySQL \u5230 InnoDB \u8868\u7684\u8f6c\u6362\uff0cTXSQL \u5728\u5176\u4e2d\u589e\u52a0\u4e86<code>compress_heap</code>\u5185\u5b58\u7247\uff0c\u7528\u6765\u5904\u7406\u538b\u7f29\u4e0e\u89e3\u538b\u7f29\u3002</p> <p>\u538b\u7f29\u683c\u5f0f \u538b\u7f29\u683c\u5f0f\u7531\u5148\u540e\u987a\u5e8f\u5206\u4e3aHeader, Prefix\u548c\u538b\u7f29\u540e\u7684\u6570\u636e\uff0cHeader\u548cPrefix\u683c\u5f0f\u5982\u4e0b:</p> <pre><code>-----------------------------------------------------------\n| Header                                    | Prefix      |\n-----------------------------------------------------------\n| compressed | algorithm | unused | len-len | original-len|\n|        [1] |       [2] |    [2] |     [3] |         [1] |\n-----------------------------------------------------------\n| 0        0 | 1       2 | 3    5 | 6     7 |  1-4 Byte(s)|\n-----------------------------------------------------------\n</code></pre> <p>\u538b\u7f29Header\u7528\u4e8e\u5b58\u653e\u538b\u7f29\u76f8\u5173\u7684\u4fe1\u606f\u3002 \u7b2c0\u4f4d<code>compressed</code>\u7528\u4e8e\u5b58\u653e\u662f\u5426\u538b\u7f29\uff0c\u7531\u4e8e\u5b58\u5728__\u6570\u636e\u539f\u957f\u5ea6\u8fbe\u4e0d\u5230\u9608\u503c__ \u548c \u538b\u7f29\u540e\u957f\u5ea6\u8d85\u8fc7\u539f\u957f__\u7684\u53ef\u80fd\uff0c\u5728\u8fd9\u4e24\u79cd\u60c5\u51b5\u4e0b\u4e0d\u4f1a\u5bf9\u6570\u636e\u8fdb\u884c\u538b\u7f29\u5b58\u50a8\uff1b \u7b2c1\u52302\u4f4d<code>algorithm</code>\u7528\u4e8e\u8868\u793a\u538b\u7f29\u4f7f\u7528\u7684\u7b97\u6cd5\uff1b \u7b2c3\u52304\u4f4d\u6682\u65f6\u6ca1\u88ab\u4f7f\u7528\uff1b \u7b2c5\u52307\u4f4d<code>len_len</code>\u7528\u4e8e\u8868\u793a__\u5b58\u50a8\u539f\u957f\u5ea6\u6240\u9700\u7684\u5b57\u8282\u6570-1\uff0c\u7531\u4e8e\u89e3\u538b\u65f6\u9700\u8981\u91cd\u65b0\u5206\u914d\u4e00\u4e2a\u8db3\u591f\u5927\u7684\u5185\u5b58\uff0c\u4fdd\u5b58\u539f\u957f\u5ea6\u53ef\u4ee5\u4fdd\u8bc1\u8fd9\u4e2a\u5185\u5b58\u6b63\u597d\u53ef\u4ee5\u5b58\u653e\u89e3\u538b\u6570\u636e\u3002<code>len_len=0</code>\uff0c\u8868\u793a\u9700\u89811 Bytes\u6765\u5b58\u50a8\u539f\u957f\uff0c\u7531\u4e8e<code>LONGBLOB</code>\u7684\u957f\u5ea6\u4e0a\u9650\u4e3a<code>2^32-1</code>\uff0c\u75284\u4e2a\u5b57\u8282\u7684\u65e0\u7b26\u53f7\u6574\u6570\u5df2\u7ecf\u53ef\u4ee5\u5b58\u653e\uff0c\u6240\u4ee5<code>len_len</code>\u7684\u4e0a\u9650\u4e3a3\uff0c\u8fd9\u6837\u7684\u8bbe\u8ba1\u4f7f\u5f97\u538b\u7f29\u683c\u5f0f\u66f4\u52a0\u7d27\u51d1\uff1b \u538b\u7f29Prefix\u7528\u4e8e\u5b58\u653e\u539f\u538b\u7f29\u957f\u5ea6\uff0c\u5b83\u7684 size \u7531<code>len_len</code>\u51b3\u5b9a\u3002 \u538b\u7f29/\u89e3\u538b\u7f29\u7b97\u6cd5 \u538b\u7f29/\u89e3\u538b\u7f29\u5728\u4e00\u4e9b\u516c\u5171\u7684MySQL\u548c InnoDB \u7684\u6570\u636e\u8f6c\u6362\u63a5\u53e3\u5b9e\u73b0\uff1a<code>row_mysql_store_col_in_innobase_format</code>\uff0c<code>row_mysql_read_blob_ref</code>\uff0c\u5177\u4f53\u5229\u7528\u5230<code>compress_heap</code>\u5185\u5b58\u7247\u6765\u5b9e\u884c\u538b\u7f29/\u89e3\u538b\u7f29\u3002 \u538b\u7f29/\u89e3\u538b\u7f29\u7b97\u6cd5\u8c03\u7528\u4e86 MySQL \u5185\u7f6e\u7684 ZLIB\uff0cLZ4\u548cZSTD\u5e93\uff0c\u5176\u4e2d <code>ZLIB</code>\u8c03\u7528\u4e86<code>compress2</code>\u548c<code>uncompress</code>\u63a5\u53e3\u5df2\u652f\u6301\u591alevel\u7684\u538b\u7f29\uff1b <code>LZ4</code>\u8c03\u7528\u4e86<code>LZ4_compress_default</code>\u548c<code>LZ4_decompress_safe</code>\u63a5\u53e3\uff1b <code>ZSTD</code>\u91c7\u7528\u4e86\u666e\u901a\u538b\u7f29\u65b9\u5f0f\uff0c\u8c03\u7528\u4e86<code>ZSTD_compress</code>\u548c<code>ZSTD_decompress</code>\u63a5\u53e3\u6765\u652f\u6301\u591alevel\u7684\u538b\u7f29\u3002</p>"},{"location":"guide/21-txsql_advanced/#_21","title":"\u6838\u5fc3\u53c2\u6570","text":"<ul> <li>innodb_min_column_compress_length \u5982\u679c\u5217\u7684\u539f size \u8d85\u8fc7\u6b64\u53c2\u6570\uff0c\u5219\u8fdb\u884c\u538b\u7f29\uff1b\u5426\u5219\u53ea\u6dfb\u52a0\u538b\u7f29 header\uff0c\u4e0d\u5bf9\u6570\u636e\u8fdb\u884c\u5b9e\u9645\u538b\u7f29\u3002</li> <li>innodb_zlib_column_compression_level \u76ee\u524d\u63d0\u4f9b\u4e86 ZLIB \u7684\u591a\u538b\u7f29\u7ea7\u522b\uff0c\u503c\u4e3a0-9\uff0c\u5176\u4e2d 0 \u8868\u793a\u4e0d\u538b\u7f29\uff0c1 \u8868\u793a\u6700\u5feb\u7684\u538b\u7f29\uff0c9 \u8868\u793a\u538b\u7f29\u7a0b\u5ea6\u6700\u5927\u7684\u538b\u7f29\uff0c\u9ed8\u8ba4\u4e3a 6\u3002 innodb_zstd_column_compression_level ZStandard\u6709\u4e09\u79cd\u538b\u7f29\u65b9\u5f0f\u3002\u6b64\u5904\u5217\u538b\u7f29\u652f\u6301\u7684\u662f\u4e0d\u542b\u5b57\u5178\uff0c\u975e streaming \u7684\u666e\u901a\u538b\u7f29\uff0c\u63d0\u4f9b\u4e86\u591a\u538b\u7f29\u7ea7\u522b\uff0c\u503c\u4e3a1-22\uff0c1 \u8868\u793a\u6700\u5feb\u7684\u538b\u7f29\uff0c22 \u8868\u793a\u538b\u7f29\u7a0b\u5ea6\u6700\u5927\u7684\u538b\u7f29\uff0c\u9ed8\u8ba4\u4e3a 3\uff1b</li> </ul>"},{"location":"guide/22-txsql_faq/","title":"\u5e38\u89c1\u95ee\u9898","text":"<ol> <li>\u5f3a\u540c\u6b65\u7b49\u5f85ack\u8d85\u8fc7sqlasyntimeout\uff08\u9ed8\u8ba430s\uff09\u540e\u7684\u9519\u8bef\u63d0\u793a</li> </ol> <pre><code>ERROR 1613 (XA106): The transaction is in doubt. Please check whether the transaction has been committed.\n</code></pre> <ol> <li>\u5927\u4e8b\u52a1\u4ea7\u751f\u7684binlog\u8d85\u8fc7binlog_write_threshold\uff08\u9ed8\u8ba41610612736\uff09\u540e\u9519\u8bef\u63d0\u793a\uff1a</li> </ol> <pre><code>ERROR 4040 (HY000): binlog write threshold(xxx) exceeded, the transaction has xxx (bytes) binlogs, it is aborted.\n</code></pre>"},{"location":"guide/23-opentenbase_ai/","title":"opentenbase_ai \u63d2\u4ef6\u4f7f\u7528\u6587\u6863","text":""},{"location":"guide/23-opentenbase_ai/#_1","title":"\u7b80\u4ecb","text":"<p>opentenbase_ai \u63d2\u4ef6\u4e3a PostgreSQL \u6570\u636e\u5e93\u63d0\u4f9b\u4e86\u96c6\u6210\u4eba\u5de5\u667a\u80fd\u5927\u8bed\u8a00\u6a21\u578b\u80fd\u529b\u7684\u63a5\u53e3\uff0c\u8ba9\u60a8\u80fd\u591f\u76f4\u63a5\u5728 SQL \u4e2d\u4f7f\u7528 AI \u529f\u80fd\u3002\u8be5\u63d2\u4ef6\u652f\u6301\u591a\u79cd AI \u6a21\u578b\u63d0\u4f9b\u5546\uff08\u5305\u62ec OpenAI\u3001DeepSeek\u3001\u817e\u8baf\u6df7\u5143\u3001\u963f\u91cc\u901a\u4e49\u5343\u95ee\u7b49\uff09\uff0c\u63d0\u4f9b\u6587\u672c\u751f\u6210\u3001\u7ffb\u8bd1\u3001\u60c5\u611f\u5206\u6790\u3001\u95ee\u7b54\u63d0\u53d6\u3001\u6587\u672c\u6458\u8981\u3001\u5d4c\u5165\u5411\u91cf\u751f\u6210\u4ee5\u53ca\u56fe\u50cf\u5206\u6790\u7b49\u529f\u80fd\u3002</p>"},{"location":"guide/23-opentenbase_ai/#_2","title":"\u5b89\u88c5","text":""},{"location":"guide/23-opentenbase_ai/#_3","title":"\u524d\u63d0\u6761\u4ef6","text":"<ul> <li>HTTP \u6269\u5c55\uff08\u8be5\u63d2\u4ef6\u4f9d\u8d56 HTTP \u6269\u5c55\u8fdb\u884c API \u8c03\u7528\uff09</li> </ul>"},{"location":"guide/23-opentenbase_ai/#_4","title":"\u5b89\u88c5\u6b65\u9aa4","text":"<ol> <li>\u786e\u4fdd\u60a8\u7684\u5b9e\u4f8b\u5df2\u5b89\u88c5 HTTP \u6269\u5c55</li> <li>\u5b89\u88c5 opentenbase_ai \u63d2\u4ef6\uff1a</li> </ol> <pre><code>CREATE EXTENSION opentenbase_ai;\n</code></pre> <p>\u6216\u8005\u4e00\u5e76\u5b89\u88c5 pgsql-http \u63d2\u4ef6</p> <pre><code>CREATE EXTENSION opentenbase_ai CASCADE;\n\n\n## \u5feb\u901f\u5f00\u59cb\uff08\u4ee5\u6df7\u5143\u5927\u6a21\u578b\u4e3a\u4f8b\uff09\n\n### \u914d\u7f6e\u6df7\u5143\u5927\u6a21\u578b\n\n1. \u83b7\u53d6\u6df7\u5143\u5927\u6a21\u578b\u7684api token\n\n2. \u6dfb\u52a0\u6df7\u5143\u5927\u6a21\u578b\u7684\u6a21\u578b\u5b9a\u4e49\u5230\u6a21\u578b\u5143\u6570\u636e\u8868\u4e2d\n\n   ```sql\n   SELECT ai.add_completion_model(\n       model_name =&gt; 'hunyuan_chat',\n       uri =&gt; 'https://api.hunyuan.cloud.tencent.com/v1/chat/completions',\n       default_args =&gt; '{\"model\": \"hunyuan-lite\"}'::jsonb,\n       token =&gt; 'your_hunyuan_api_key',\n       model_provider =&gt; 'tencent'\n   );\n   ```\n\n3. \u914d\u7f6e\u6df7\u5143\u5927\u6a21\u578b\u4e3a\u9ed8\u8ba4\u6a21\u578b\n\n   ```sql\n   SET ai.completion_model = 'hunyuan_chat';\n   ```\n\n### \u5927\u6a21\u578b\u95ee\u7b54\n\n\u914d\u7f6e\u597d\u6df7\u5143\u5927\u6a21\u578b\u540e\u5c31\u53ef\u4ee5\u5f00\u59cb\u4f53\u9a8c\n\n**\u6587\u672c\u751f\u6210**\n\n```sql\nSELECT ai.generate_text('\u4e3a\u4ee5\u4e0b\u4ea7\u54c1\u5199\u4e00\u6bb5\u5438\u5f15\u4eba\u7684\u63cf\u8ff0\uff1a\u667a\u80fd\u624b\u8868');\n</code></pre> <p>\u60c5\u611f\u5206\u6790</p> <pre><code>SELECT ai.sentiment('\u8fd9\u4e2a\u4ea7\u54c1\u975e\u5e38\u597d\u7528\uff0c\u6211\u5f88\u6ee1\u610f');\n</code></pre> <p>\u6587\u672c\u6458\u8981 </p> <pre><code>SELECT ai.summarize('\u8fd9\u91cc\u662f\u4e00\u6bb5\u5f88\u957f\u7684\u4ea7\u54c1\u8bf4\u660e\u6587\u672c...');\n</code></pre> <p>\u6307\u5b9a\u8fd4\u56de\u7c7b\u578b\u751f\u6210</p> <pre><code>SELECT ai.generate('9*9 = ?',NULL::integer);\n</code></pre>"},{"location":"guide/23-opentenbase_ai/#_5","title":"\u6a21\u578b\u7ba1\u7406","text":""},{"location":"guide/23-opentenbase_ai/#_6","title":"\u6dfb\u52a0\u6a21\u578b","text":"<p>\u63d2\u4ef6\u63d0\u4f9b\u4e86\u591a\u79cd\u65b9\u5f0f\u6dfb\u52a0 AI \u6a21\u578b\uff1a</p> <ol> <li>\u6dfb\u52a0 OpenAI \u517c\u5bb9\u7684\u8865\u5168\u6a21\u578b\uff1a</li> </ol> <pre><code>SELECT ai.add_completion_model(\n    model_name =&gt; 'gpt-4',\n    uri =&gt; 'https://api.openai.com/v1/chat/completions',\n    default_args =&gt; '{\"model\": \"gpt-4\", \"temperature\": 0.7}'::jsonb,\n    token =&gt; 'your_openai_api_key',\n    model_provider =&gt; 'openai'\n);\n</code></pre> <ol> <li>\u6dfb\u52a0 OpenAI \u517c\u5bb9\u7684\u5d4c\u5165\u6a21\u578b\uff1a</li> </ol> <pre><code>SELECT ai.add_embedding_model(\n    model_name =&gt; 'text-embedding-ada-002',\n    uri =&gt; 'https://api.openai.com/v1/embeddings',\n    default_args =&gt; '{\"model\": \"text-embedding-ada-002\"}'::jsonb,\n    token =&gt; 'your_openai_api_key',\n    model_provider =&gt; 'openai'\n);\n</code></pre> <ol> <li>\u6dfb\u52a0 OpenAI \u517c\u5bb9\u7684\u56fe\u50cf\u6a21\u578b\uff1a</li> </ol> <pre><code>SELECT ai.add_image_model(\n    model_name =&gt; 'gpt-4-vision',\n    uri =&gt; 'https://api.openai.com/v1/chat/completions',\n    default_args =&gt; '{\"model\": \"gpt-4-vision-preview\", \"max_tokens\": 300}'::jsonb,\n    token =&gt; 'your_openai_api_key',\n    model_provider =&gt; 'openai'\n);\n</code></pre> <ol> <li>\u6dfb\u52a0\u56fd\u4ea7\u5927\u6a21\u578b\u793a\u4f8b\uff1a</li> </ol> <pre><code>-- DeepSeek\nSELECT ai.add_completion_model(\n    model_name =&gt; 'deepseek-chat',\n    uri =&gt; 'https://api.deepseek.com/v1/chat/completions',\n    default_args =&gt; '{\"model\": \"deepseek-chat\", \"temperature\": 0.7}'::jsonb,\n    token =&gt; 'your_deepseek_api_key',\n    model_provider =&gt; 'deepseek'\n);\n\n-- \u817e\u8baf\u6df7\u5143\nSELECT ai.add_completion_model(\n    model_name =&gt; 'hunyuan_chat',\n    uri =&gt; 'https://api.hunyuan.cloud.tencent.com/v1/chat/completions',\n    default_args =&gt; '{\"model\": \"hunyuan-lite\"}'::jsonb,\n    token =&gt; 'your_hunyuan_api_key',\n    model_provider =&gt; 'tencent'\n);\n\nSELECT ai.add_completion_model(\n    model_name =&gt; 'hunyuan_generate',\n    uri =&gt; 'https://api.hunyuan.cloud.tencent.com/v1/chat/completions',\n    default_args =&gt; '{\n        \"model\": \"hunyuan-lite\"\n    }'::jsonb,\n    model_provider =&gt; 'tencent',\n    token =&gt; 'your_hunyuan_api_key'\n);\n\n\n-- \u963f\u91cc\u901a\u4e49\u5343\u95ee\nSELECT ai.add_completion_model(\n    model_name =&gt; 'qwen_chat',\n    uri =&gt; 'https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions',\n    default_args =&gt; '{\"model\": \"qwen-turbo\"}'::jsonb,\n    token =&gt; 'your_qwen_api_key',\n    model_provider =&gt; 'aliyun'\n);\n</code></pre> <p>:bulb: Tip: \u6ce8\u610f default_args \u4e2d\u7684 model \u5b57\u6bb5\uff0c\u5fc5\u987b\u586b\u5199\u3002</p>"},{"location":"guide/23-opentenbase_ai/#_7","title":"\u7ba1\u7406\u73b0\u6709\u6a21\u578b","text":"<pre><code>-- \u5217\u51fa\u6240\u6709\u5df2\u914d\u7f6e\u7684\u6a21\u578b\nSELECT * FROM ai.list_models();\n\n-- \u83b7\u53d6\u7279\u5b9a\u6a21\u578b\u7684\u8be6\u7ec6\u4fe1\u606f\nSELECT * FROM ai.get_model_details('model_name');\n\n-- \u66f4\u65b0\u6a21\u578b\u914d\u7f6e\nSELECT ai.update_model('model_name', 'config_field', 'new_value');\n\n-- \u5220\u9664\u6a21\u578b\nSELECT ai.delete_model('model_name');\n</code></pre>"},{"location":"guide/23-opentenbase_ai/#_8","title":"\u914d\u7f6e","text":""},{"location":"guide/23-opentenbase_ai/#_9","title":"\u8bbe\u7f6e\u9ed8\u8ba4\u6a21\u578b","text":"<p>\u60a8\u53ef\u4ee5\u901a\u8fc7\u8bbe\u7f6e\u4ee5\u4e0b GUC\uff08Grand Unified Configuration\uff09\u53c2\u6570\u6765\u914d\u7f6e\u9ed8\u8ba4\u4f7f\u7528\u7684 AI \u6a21\u578b\uff1a</p> <pre><code>-- \u8bbe\u7f6e\u9ed8\u8ba4\u7684\u6587\u672c\u8865\u5168\u6a21\u578b\nSET ai.completion_model = 'model_name';\n\n-- \u8bbe\u7f6e\u9ed8\u8ba4\u7684\u5d4c\u5165\u5411\u91cf\u6a21\u578b\nSET ai.embedding_model = 'embedding_model_name';\n\n-- \u8bbe\u7f6e\u9ed8\u8ba4\u7684\u56fe\u50cf\u5206\u6790\u6a21\u578b\nSET ai.image_model = 'image_model_name';\n\n</code></pre> <p>\u60a8\u53ef\u4ee5\u5728\u4ee5\u4e0b\u7ea7\u522b\u8bbe\u7f6e\u8fd9\u4e9b\u53c2\u6570\uff1a</p> <pre><code>-- \u4f1a\u8bdd\u7ea7\u522b\u8bbe\u7f6e\uff08\u4ec5\u5bf9\u5f53\u524d\u4f1a\u8bdd\u6709\u6548\uff09\nSET ai.completion_model = 'gpt-4';\n\n-- \u7528\u6237\u7ea7\u522b\u8bbe\u7f6e\uff08\u5bf9\u7279\u5b9a\u7528\u6237\u7684\u6240\u6709\u4f1a\u8bdd\u6709\u6548\uff09\nALTER USER username SET ai.completion_model = 'gpt-4';\n\n-- \u6570\u636e\u5e93\u7ea7\u522b\u8bbe\u7f6e\uff08\u5bf9\u7279\u5b9a\u6570\u636e\u5e93\u7684\u6240\u6709\u4f1a\u8bdd\u6709\u6548\uff09\nALTER DATABASE dbname SET ai.completion_model = 'gpt-4';\n\n-- \u5168\u5c40\u7ea7\u522b\u8bbe\u7f6e\uff08\u9700\u8981\u5728 postgresql.conf \u4e2d\u914d\u7f6e\uff09\n-- \u5728 postgresql.conf \u4e2d\u6dfb\u52a0\uff1aai.completion_model = 'gpt-4'\n</code></pre>"},{"location":"guide/23-opentenbase_ai/#_10","title":"\u57fa\u7840\u529f\u80fd","text":""},{"location":"guide/23-opentenbase_ai/#generate","title":"\u591a\u6001 generate \u51fd\u6570","text":"<p>opentenbase_ai \u7684\u6838\u5fc3\u662f\u5176\u591a\u6001 <code>generate</code> \u51fd\u6570\uff0c\u5b83\u53ef\u4ee5\u6839\u636e\u9700\u8981\u8fd4\u56de\u4e0d\u540c\u7684\u6570\u636e\u7c7b\u578b\u3002\u8fd9\u4e2a\u51fd\u6570\u662f\u6240\u6709\u7c7b\u578b\u7279\u5b9a\u751f\u6210\u51fd\u6570\u7684\u57fa\u7840\uff1a</p> <pre><code>-- \u591a\u6001 generate \u51fd\u6570\u7684\u5b8c\u6574\u7b7e\u540d\nai.generate(\n    prompt text,             -- \u63d0\u793a\u6587\u672c\n    dummy anyelement,        -- \u7528\u4e8e\u786e\u5b9a\u8fd4\u56de\u7c7b\u578b\u7684\u5360\u4f4d\u7b26\n    model_name text = NULL,  -- \u53ef\u9009\uff1a\u4f7f\u7528\u7684\u6a21\u578b\u540d\u79f0\n    config jsonb = '{}'      -- \u53ef\u9009\uff1a\u989d\u5916\u7684\u914d\u7f6e\u53c2\u6570\n) RETURNS anyelement;        -- \u8fd4\u56de\u4e0e dummy \u53c2\u6570\u76f8\u540c\u7c7b\u578b\u7684\u7ed3\u679c\n</code></pre> <p>\u4f7f\u7528\u793a\u4f8b\uff1a</p> <pre><code>-- \u8fd4\u56de\u6587\u672c\nSELECT ai.generate('PostgreSQL \u7684\u4e3b\u8981\u7279\u70b9\u662f\u4ec0\u4e48\uff1f', NULL::text);\n\n-- \u8fd4\u56de\u6574\u6570\nSELECT ai.generate('\u8ba1\u7b97 123 + 456 \u7684\u7ed3\u679c', NULL::integer);\n\n-- \u8fd4\u56de\u6d6e\u70b9\u6570\nSELECT ai.generate('\u5706\u5468\u7387\u7684\u503c\u662f\u591a\u5c11\uff1f', NULL::double precision);\n\n-- \u8fd4\u56de\u5e03\u5c14\u503c\nSELECT ai.generate('\u5730\u7403\u662f\u5706\u7684\u5417\uff1f', NULL::boolean);\n\n-- \u6307\u5b9a\u6a21\u578b\nSELECT ai.generate('\u4ec0\u4e48\u662f\u4eba\u5de5\u667a\u80fd\uff1f', NULL::text, 'gpt-4');\n\n-- \u6307\u5b9a\u914d\u7f6e\nSELECT ai.generate(\n    '\u8bb2\u89e3\u91cf\u5b50\u8ba1\u7b97\u7684\u57fa\u672c\u539f\u7406',\n    NULL::text,\n    'gpt-4',\n    '{\"temperature\": 0.2, \"max_tokens\": 1000}'::jsonb\n);\n</code></pre> <p>\u591a\u6001 generate \u51fd\u6570\u76ee\u524d\u652f\u6301\u8bbe\u7f6e\u7684\u8fd4\u56de\u7c7b\u578b\u6709\uff1a - \u6587\u672c\u7c7b\u578b\uff1atext - \u6574\u6570\u7c7b\u578b\uff1ainteger, biting - \u6d6e\u70b9\u6570\u7c7b\u578b\uff1areal, double precision - \u5e03\u5c14\u7c7b\u578b\uff1aboolean</p>"},{"location":"guide/23-opentenbase_ai/#_11","title":"\u7c7b\u578b\u7279\u5b9a\u751f\u6210\u51fd\u6570","text":"<p>opentenbase_ai \u63d0\u4f9b\u4e86\u591a\u79cd\u7c7b\u578b\u7279\u5b9a\u7684\u751f\u6210\u51fd\u6570\uff0c\u8fd9\u4e9b\u51fd\u6570\u662f\u5bf9\u591a\u6001 <code>generate</code> \u51fd\u6570\u7684\u5c01\u88c5\uff0c\u53ef\u6839\u636e\u60a8\u7684\u9700\u6c42\u751f\u6210\u4e0d\u540c\u7c7b\u578b\u7684\u7ed3\u679c\uff1a</p>"},{"location":"guide/23-opentenbase_ai/#_12","title":"\u6587\u672c\u751f\u6210","text":"<pre><code>-- \u57fa\u672c\u6587\u672c\u751f\u6210\nSELECT ai.generate_text('\u8bf7\u4ecb\u7ecd\u4e00\u4e0b PostgreSQL \u6570\u636e\u5e93\u7684\u4e3b\u8981\u7279\u70b9');\n\n-- \u6307\u5b9a\u6a21\u578b\nSELECT ai.generate_text('\u8bf7\u4ecb\u7ecd\u4e00\u4e0b PostgreSQL \u6570\u636e\u5e93\u7684\u4e3b\u8981\u7279\u70b9', 'gpt-4');\n\n-- \u81ea\u5b9a\u4e49\u914d\u7f6e\u53c2\u6570\nSELECT ai.generate_text(\n    '\u8bf7\u4ecb\u7ecd\u4e00\u4e0b PostgreSQL \u6570\u636e\u5e93\u7684\u4e3b\u8981\u7279\u70b9',\n    'gpt-4',\n    '{\"temperature\": 0.3, \"max_tokens\": 500}'::jsonb\n);\n</code></pre>"},{"location":"guide/23-opentenbase_ai/#_13","title":"\u6570\u503c\u751f\u6210","text":"<pre><code>-- \u6574\u6570\u751f\u6210\nSELECT ai.generate_int('\u4e16\u754c\u4eba\u53e3\u6709\u591a\u5c11\uff1f');\n\n-- \u6d6e\u70b9\u6570\u751f\u6210\nSELECT ai.generate_double('\u5706\u5468\u7387\u7684\u503c\u662f\u591a\u5c11\uff1f');\n</code></pre>"},{"location":"guide/23-opentenbase_ai/#_14","title":"\u5e03\u5c14\u503c\u751f\u6210","text":"<pre><code>-- \u5e03\u5c14\u503c\u751f\u6210\nSELECT ai.generate_bool('\u5730\u7403\u662f\u5706\u7684\u5417\uff1f');\n</code></pre>"},{"location":"guide/23-opentenbase_ai/#_15","title":"\u6587\u672c\u5904\u7406\u51fd\u6570","text":""},{"location":"guide/23-opentenbase_ai/#_16","title":"\u6587\u672c\u6458\u8981","text":"<pre><code>-- \u57fa\u672c\u7528\u6cd5\nSELECT ai.summarize('\u8fd9\u91cc\u662f\u4e00\u6bb5\u5f88\u957f\u7684\u6587\u672c\u5185\u5bb9...');\n\n-- \u6307\u5b9a\u6a21\u578b\nSELECT ai.summarize('\u8fd9\u91cc\u662f\u4e00\u6bb5\u5f88\u957f\u7684\u6587\u672c\u5185\u5bb9...', 'gpt-4');\n\n-- \u81ea\u5b9a\u4e49\u914d\u7f6e\nSELECT ai.summarize(\n    '\u8fd9\u91cc\u662f\u4e00\u6bb5\u5f88\u957f\u7684\u6587\u672c\u5185\u5bb9...',\n    'gpt-4',\n    '{\"temperature\": 0.3}'::jsonb\n);\n</code></pre>"},{"location":"guide/23-opentenbase_ai/#_17","title":"\u6587\u672c\u7ffb\u8bd1","text":"<pre><code>-- \u57fa\u672c\u7528\u6cd5\nSELECT ai.translate('\u4f60\u597d\uff0c\u4e16\u754c\uff01', '\u4e2d\u6587');\n\n-- \u7ffb\u8bd1\u4e3a\u7279\u5b9a\u8bed\u8a00\nSELECT ai.translate('\u4f60\u597d\uff0c\u4e16\u754c\uff01', '\u82f1\u8bed');\n\n-- \u6307\u5b9a\u6a21\u578b\u548c\u914d\u7f6e\nSELECT ai.translate(\n    '\u4f60\u597d\uff0c\u4e16\u754c\uff01',\n    '\u82f1\u8bed',\n    'gpt-4',\n    '{\"temperature\": 0.3}'::jsonb\n);\n</code></pre>"},{"location":"guide/23-opentenbase_ai/#_18","title":"\u60c5\u611f\u5206\u6790","text":"<pre><code>-- \u57fa\u672c\u7528\u6cd5\nSELECT ai.sentiment('\u8fd9\u4e2a\u4ea7\u54c1\u975e\u5e38\u597d\u7528\uff0c\u6211\u5f88\u6ee1\u610f\uff01');\n\n-- \u6307\u5b9a\u6a21\u578b\nSELECT ai.sentiment('\u8fd9\u4e2a\u4ea7\u54c1\u975e\u5e38\u597d\u7528\uff0c\u6211\u5f88\u6ee1\u610f\uff01', 'gpt-4');\n</code></pre>"},{"location":"guide/23-opentenbase_ai/#_19","title":"\u95ee\u7b54\u63d0\u53d6","text":"<pre><code>-- \u57fa\u672c\u7528\u6cd5\nSELECT ai.extract_answer(\n    '\u95ee\u9898\uff1a\u8c01\u53d1\u660e\u4e86\u76f8\u5bf9\u8bba\uff1f',\n    '\u7231\u56e0\u65af\u5766\u5728 1915 \u5e74\u53d1\u8868\u4e86\u5e7f\u4e49\u76f8\u5bf9\u8bba\uff0c\u8fd9\u662f\u7269\u7406\u5b66\u7684\u91cd\u5927\u7a81\u7834\u3002'\n);\n\n-- \u6307\u5b9a\u6a21\u578b\u548c\u914d\u7f6e\nSELECT ai.extract_answer(\n    '\u95ee\u9898\uff1a\u8c01\u53d1\u660e\u4e86\u76f8\u5bf9\u8bba\uff1f',\n    '\u7231\u56e0\u65af\u5766\u5728 1915 \u5e74\u53d1\u8868\u4e86\u5e7f\u4e49\u76f8\u5bf9\u8bba\uff0c\u8fd9\u662f\u7269\u7406\u5b66\u7684\u91cd\u5927\u7a81\u7834\u3002',\n    'gpt-4',\n    '{\"temperature\": 0.1}'::jsonb\n);\n</code></pre>"},{"location":"guide/23-opentenbase_ai/#_20","title":"\u5d4c\u5165\u5411\u91cf\u751f\u6210","text":"<pre><code>-- \u57fa\u672c\u7528\u6cd5\nSELECT ai.embedding('\u8fd9\u662f\u4e00\u6bb5\u9700\u8981\u751f\u6210\u5d4c\u5165\u5411\u91cf\u7684\u6587\u672c');\n\n-- \u6307\u5b9a\u6a21\u578b\nSELECT ai.embedding('\u8fd9\u662f\u4e00\u6bb5\u9700\u8981\u751f\u6210\u5d4c\u5165\u5411\u91cf\u7684\u6587\u672c', 'text-embedding-ada-002');\n</code></pre>"},{"location":"guide/23-opentenbase_ai/#_21","title":"\u56fe\u50cf\u5206\u6790","text":"<pre><code>-- \u4f7f\u7528\u56fe\u50cf URL\nSELECT ai.image('\u8fd9\u5f20\u56fe\u7247\u4e2d\u6709\u4ec0\u4e48\uff1f', 'https://example.com/image.jpg');\n\n-- \u4f7f\u7528\u4e8c\u8fdb\u5236\u56fe\u50cf\u6570\u636e\nSELECT ai.image('\u8fd9\u5f20\u56fe\u7247\u4e2d\u6709\u4ec0\u4e48\uff1f', image_data_column)\nFROM images_table\nWHERE id = 1;\n\n-- \u6307\u5b9a\u6a21\u578b\u548c\u914d\u7f6e\nSELECT ai.image(\n    '\u8fd9\u5f20\u56fe\u7247\u4e2d\u6709\u4ec0\u4e48\uff1f',\n    'https://example.com/image.jpg',\n    'gpt-4-vision',\n    '{\"max_tokens\": 500}'::jsonb\n);\n</code></pre> <p>:bulb: Tip: \u6ce8\u610f\u8c03\u7528\u5927\u6a21\u578b\u65f6\u4f1a\u9996\u5148\u6839\u636e\u51fd\u6570\u53c2\u6570\u4e2d\u6307\u5b9a\u7684\u6a21\u578b\u540d\u8c03\u7528\uff0c\u5982\u679c\u6ca1\u6709\u6307\u5b9a\uff0c\u5c31\u4f1a\u6839\u636e\u5f53\u524d guc \u8bbe\u7f6e\u7684\u9ed8\u8ba4\u6a21\u578b l \u8c03\u7528\u3002</p>"},{"location":"guide/23-opentenbase_ai/#_22","title":"\u9ad8\u7ea7\u914d\u7f6e\u4e0e\u5b9a\u5236","text":""},{"location":"guide/23-opentenbase_ai/#_23","title":"\u6a21\u578b\u5143\u6570\u636e\u8868","text":"<p>opentenbase_ai \u63d2\u4ef6\u4f7f\u7528 ai_model_list \u8868\u6765\u5b58\u50a8\u6240\u6709\u6a21\u578b\u7684\u914d\u7f6e\u4fe1\u606f\u3002\u8be5\u8868\u7684\u7ed3\u6784\u5982\u4e0b</p> <pre><code>CREATE TABLE public.ai_model_list (\n    model_name TEXT PRIMARY KEY,        -- \u6a21\u578b\u540d\u79f0\n    model_provider TEXT,                -- \u6a21\u578b\u63d0\u4f9b\u5546\n    request_type TEXT NOT NULL,         -- \u8bf7\u6c42\u7c7b\u578b\uff08GET/POST \u7b49\uff09\n    request_header http_header[],       -- HTTP \u8bf7\u6c42\u5934\n    uri TEXT NOT NULL,                  -- API \u7aef\u70b9 URL\n    content_type TEXT NOT NULL,         -- \u5185\u5bb9\u7c7b\u578b\n    default_args JSONB NOT NULL,        -- \u9ed8\u8ba4\u53c2\u6570\n    json_path TEXT NOT NULL             -- JSON \u54cd\u5e94\u8def\u5f84\n)\n</code></pre>"},{"location":"guide/23-opentenbase_ai/#openai","title":"\u6dfb\u52a0\u975e OpenAI \u517c\u5bb9\u683c\u5f0f\u5927\u6a21\u578b","text":"<p>opentenbase_ai \u63d2\u4ef6\u652f\u6301\u901a\u8fc7 ai.add_model \u51fd\u6570\u6dfb\u52a0\u975e OpenAI \u517c\u5bb9\u683c\u5f0f\u7684\u5927\u6a21\u578b\u3002\u8fd9\u5141\u8bb8\u60a8\u96c6\u6210\u4efb\u4f55\u81ea\u5b9a\u4e49 API \u683c\u5f0f\u7684\u6a21\u578b\u670d\u52a1</p> <pre><code>SELECT ai.add_model(\n    model_name =&gt; 'custom_model',           -- \u6a21\u578b\u540d\u79f0\n    request_header =&gt; ARRAY[                -- \u8bf7\u6c42\u5934\n        http_header('Authorization', 'Bearer your_token'),\n        http_header('X-Custom-Header', 'value')\n    ],\n    uri =&gt; 'https://api.example.com/v1/endpoint',  -- API \u7aef\u70b9\n    default_args =&gt; '{\"key\": \"value\"}'::jsonb,     -- \u9ed8\u8ba4\u53c2\u6570\n    model_provider =&gt; 'custom',                    -- \u63d0\u4f9b\u5546\n    request_type =&gt; 'POST',                        -- \u8bf7\u6c42\u7c7b\u578b\n    content_type =&gt; 'application/json',            -- \u5185\u5bb9\u7c7b\u578b\n    json_path =&gt; 'SELECT %L::jsonb-&gt;''result''-&gt;''text''::TEXT'  -- \u54cd\u5e94\u89e3\u6790\u8def\u5f84 (\u6839\u636e http response \u7684\u5b9e\u9645\u8def\u5f84\u586b\u5199)\n);\n</code></pre>"},{"location":"guide/23-opentenbase_ai/#_24","title":"\u7f51\u7edc\u914d\u7f6e","text":"<p>opentenbase_ai \u5bf9\u8fdc\u7aef\u5927\u6a21\u578b\u53d1\u8d77 http \u8c03\u7528\u662f\u901a\u8fc7 pgsql-http \u63d2\u4ef6\uff0c\u56e0\u6b64 http \u76f8\u5173\u7684\u914d\u7f6e\u53ef\u4ee5\u901a\u8fc7 pgsql-http \u63d2\u4ef6\u76f8\u5173\u7684\u53c2\u6570\u914d\u7f6e\u8fdb\u884c\u4fee\u6539</p> <p>\u5e38\u89c1\u7684\u53c2\u6570\u914d\u7f6e\u5982\u4e0b </p> <pre><code>-- \u8bbe\u7f6e\u8bf7\u6c42\u7684\u8d85\u65f6\u65f6\u95f4\uff0c\u5355\u4f4d\u6beb\u79d2\nSET http.timeout_msec TO 200000;\n\nSELECT http.http_set_curlopt('CURLOPT_TIMEOUT', '200000');\n\n-- \u8bbe\u7f6e\u8fde\u63a5\u8d85\u65f6\u65f6\u95f4\nSELECT http.http_set_curlopt('CURLOPT_CONNECTTIMEOUT_MS', '200000')\n</code></pre> <p>\u66f4\u591a\u8be6\u7ec6\u914d\u7f6e\u53c2\u8003\u793e\u533a pgsql-http \u63d2\u4ef6\u5b98\u7f51</p> <p>https://github.com/pramsey/pgsql-http</p>"},{"location":"guide/23-opentenbase_ai/#_25","title":"\u9644\u5f55","text":""},{"location":"guide/23-opentenbase_ai/#_26","title":"\u529f\u80fd\u5217\u8868","text":"\u529f\u80fd \u51fd\u6570 \u8fd4\u56de\u7c7b\u578b \u591a\u6001\u751f\u6210 <code>ai.generate(prompt, dummy, model_name, config)</code> anyelement \u6587\u672c\u751f\u6210 <code>ai.generate_text(prompt, model_name, config)</code> TEXT \u6574\u6570\u751f\u6210 <code>ai.generate_int(prompt, model_name, config)</code> INTEGER \u6d6e\u70b9\u6570\u751f\u6210 <code>ai.generate_double(prompt, model_name, config)</code> DOUBLE PRECISION \u5e03\u5c14\u503c\u751f\u6210 <code>ai.generate_bool(prompt, model_name, config)</code> BOOLEAN \u6587\u672c\u6458\u8981 <code>ai.summarize(text_content, model_name, config)</code> TEXT \u6587\u672c\u7ffb\u8bd1 <code>ai.translate(text_content, target_language, model_name, config)</code> TEXT \u60c5\u611f\u5206\u6790 <code>ai.sentiment(text_content, model_name, config)</code> TEXT \u95ee\u7b54\u63d0\u53d6 <code>ai.extract_answer(question, context, model_name, config)</code> TEXT \u5d4c\u5165\u5411\u91cf\u751f\u6210 <code>ai.embedding(input, model_name, config)</code> TEXT \u56fe\u50cf\u5206\u6790 <code>ai.image(prompt, image_url, model_name, config)</code> TEXT \u56fe\u50cf\u5206\u6790 <code>ai.image(prompt, image_bytea, model_name, config)</code> TEXT"},{"location":"guide/23-opentenbase_ai/#_27","title":"\u6a21\u578b\u7ba1\u7406\u51fd\u6570","text":"\u529f\u80fd \u51fd\u6570 \u8fd4\u56de\u7c7b\u578b \u6dfb\u52a0\u901a\u7528\u6a21\u578b <code>ai.add_model(...)</code> BOOLEAN \u6dfb\u52a0\u8865\u5168\u6a21\u578b <code>ai.add_completion_model(...)</code> BOOLEAN \u6dfb\u52a0\u5d4c\u5165\u6a21\u578b <code>ai.add_embedding_model(...)</code> BOOLEAN \u6dfb\u52a0\u56fe\u50cf\u6a21\u578b <code>ai.add_image_model(...)</code> BOOLEAN \u5220\u9664\u6a21\u578b <code>ai.delete_model(model_name)</code> BOOLEAN \u66f4\u65b0\u6a21\u578b\u914d\u7f6e <code>ai.update_model(model_name, config, value)</code> BOOLEAN \u5217\u51fa\u6240\u6709\u6a21\u578b <code>ai.list_models()</code> SETOF ai_model_list"},{"location":"guide/23-opentenbase_ai/#_28","title":"\u9ad8\u7ea7\u7528\u6cd5","text":"\u529f\u80fd \u51fd\u6570 \u8fd4\u56de\u7c7b\u578b \u5e95\u5c42\u6a21\u578b\u8c03\u7528 <code>ai.invoke_model(model_name, user_args)</code> TEXT \u539f\u59cb HTTP \u54cd\u5e94 <code>ai.raw_invoke_model(model_name, user_args)</code> http_response"},{"location":"guide/23-opentenbase_ai/#guc","title":"GUC \u53c2\u6570\u5217\u8868","text":"\u53c2\u6570\u540d \u63cf\u8ff0 \u9ed8\u8ba4\u503c \u7ea7\u522b <code>ai.completion_model</code> \u9ed8\u8ba4\u7684\u6587\u672c\u8865\u5168\u6a21\u578b NULL USERSET <code>ai.embedding_model</code> \u9ed8\u8ba4\u7684\u5d4c\u5165\u5411\u91cf\u6a21\u578b NULL USERSET <code>ai.image_model</code> \u9ed8\u8ba4\u7684\u56fe\u50cf\u5206\u6790\u6a21\u578b NULL USERSET"},{"location":"release/v2-2-0/","title":"V2.2.0-release","text":"<p>V2.2.0-release \u7248\u672c\u4e3b\u8981\u4fee\u6539\u96c6\u4e2d\u5728:</p>"},{"location":"release/v2-2-0/#1","title":"1.\u6267\u884c\u5668/\u4f18\u5316\u5668\u4f18\u5316\uff1a","text":"<p>1\uff09\u5c06\u5b50\u67e5\u8be2\u4f18\u5316\u4e3a\u76f8\u5173\u67e5\u8be2\u3002 \u4f18\u5316\u540e\uff0c\u8bed\u53e5\u53ef\u4ee5\u4e0b\u63a8\u5230DN\u8ba1\u7b97\u8282\u70b9\u5904\u7406\uff0c\u90e8\u5206\u8bed\u53e5\u6027\u80fd\u53ef\u4ee5\u63d0\u5347\u6570\u767e\u500d\uff1b</p> <p>2\uff09\u589e\u5f3aFQS\u67e5\u8be2\u4e0b\u63a8\u80fd\u529b\uff0c\u652f\u6301\u66f4\u591a\u5b50\u67e5\u8be2\u573a\u666f\u4f7f\u7528FQS\u4e0b\u63a8\uff0c\u6027\u80fd\u63d0\u5347\u6570\u5341\u500d\uff1b</p>"},{"location":"release/v2-2-0/#2","title":"2.\u5185\u5b58\u4f7f\u7528\u4f18\u5316\uff1a","text":"<p>1\uff09\u63d0\u4f9b\u4f1a\u8bdd\u5185\u5b58\u4f7f\u7528\u60c5\u51b5\u7684\u8be6\u7ec6\u67e5\u8be2\u89c6\u56fe </p> <p>2\uff09\u81ea\u52a8\u91ca\u653e\u5185\u5b58\u8fc7\u591a\u7684\u7a7a\u95f2\u8fde\u63a5\uff0c\u51cf\u5c11\u6240\u6709\u7a7a\u95f2\u8fde\u63a5\u7684\u5185\u5b58\u5360\u7528\u7ea690%\uff1b</p> <p>3\uff09\u652f\u6301Relcache LRU\u66ff\u6362\uff0c\u51cf\u5c11\u4f1a\u8bdd\u4e2d\u5185\u5b58\u5360\u7528\u7ea655%\uff1b</p>"},{"location":"release/v2-2-0/#3","title":"3.\u6539\u8fdb\u89e3\u91ca\u5206\u6790\u6267\u884c\u8ba1\u5212\u7684\u663e\u793a\uff1a","text":"<p>CN\u4e0a\u53ef\u4ee5\u67e5\u770b\u5404\u4e2aDN\u4e0a\u6267\u884c\u7684\u7b97\u5b50\u7684\u6267\u884c\u4fe1\u606f\uff08\u4e4b\u524d\u529f\u80fd\u6709\u9650\uff0c\u53ea\u80fd\u663e\u793aCN\u4e0a\u7684\u7b97\u5b50\uff09\uff1a</p> <p>\u4e4b\u524d\uff1a    \u73b0\u5728\uff1a </p> <p>\u901a\u8fc7\u5b8c\u6574\u7684\u6267\u884c\u4fe1\u606f\u53ef\u4ee5\u627e\u5230\u8fd0\u884c\u901f\u5ea6\u8f83\u6162\u7684\u7b97\u5b50\uff0c\u4e3aSQL\u6027\u80fd\u4f18\u5316\u63d0\u4f9b\u65b9\u5411\u3002</p>"},{"location":"release/v2-2-0/#4","title":"4.\u65b0\u589e\u5168\u5c40\u4f1a\u8bdd\u67e5\u770b\u529f\u80fd\uff1a","text":"<p>\u60a8\u53ef\u4ee5\u4eceCN\u4e2d\u83b7\u53d6\u6574\u4e2a\u96c6\u7fa4\u6240\u6709\u4f1a\u8bdd\u6240\u5c5e\u8fdb\u7a0b\u7684\u8fd0\u884c\u72b6\u6001\u3002 \u4f7f\u7528\u65b9\u6cd5\u5982\u4e0b\uff1a</p> <p>1\uff09\u5728\u6240\u6709\u8282\u70b9\uff08CN\u548cDN\uff09\u7684postgresql.conf\u4e2d\u6dfb\u52a0\u4ee5\u4e0b\u914d\u7f6e\uff1a                    <code>shared_preload_libraries = 'pg_stat_cluster_activity'</code></p> <p>2\uff09\u521b\u5efa\u6269\u5c55pg_stat_cluster_activity\uff1b</p> <p>3\uff09\u9009\u62e9\u4f1a\u8bddID\uff1a </p> <p>4\uff09\u6839\u636e\u4f1a\u8bddID\u9009\u62e9\u5206\u5e03\u5f0f\u6d3b\u52a8\u4f1a\u8bdd\u7684\u8be6\u7ec6\u4fe1\u606f\uff1a </p> <p>\u9664\u4e0a\u8ff0\u4e4b\u5916\uff0c\u8fd8\u4fee\u590d\u4e86\u4e00\u4e9b\u5df2\u77e5\u7684Bug\uff0c\u96c6\u7fa4\u7a33\u5b9a\u6027\u63d0\u5347\u5230\u4e86\u4e00\u4e2a\u66f4\u9ad8\u7684\u6c34\u5e73\u3002</p>"},{"location":"release/v2-3-0/","title":"v2.3.0","text":"<p>\u672c\u6b21\u5347\u7ea7\u7684\u65b0\u7279\u6027\u8be6\u60c5\uff1a https://mp.weixin.qq.com/s/LMxwNUjfrggReGTQoB9F0A</p>"},{"location":"release/v2-4-0/","title":"V2.4.0-release","text":"<p>V2.4.0-release \u7248\u672c\u4e3b\u8981\u4fee\u6539\u96c6\u4e2d\u5728\uff1a</p> <ol> <li> <p>\u5206\u5e03\u5f0f\u8ba1\u7b97\u6027\u80fd\u63d0\u5347\uff1a</p> <ul> <li>hasAggs/having/sort/limit/Stable function/ \u4f18\u5316\u4e0b\u63a8\u5230DN\u4e0a\u6267\u884c\uff0c\u6027\u80fd\u63d0\u5347\u8fd1\u767e\u500d\u3002</li> <li>\u5206\u5e03\u5f0f\u8fdb\u7a0bProcLock\u5206\u6bb5\u9501\u4f18\u5316\uff0c\u51cf\u5c11\u9501\u51b2\u7a81\uff0c\u6267\u884c\u6548\u7387\u63d0\u5347\u7ea65\u500d\u3002</li> <li>\u6267\u884c\u8ba1\u5212\u4f18\u5316\uff1a\u91cd\u5206\u5e03\u7684\u8282\u70b9\u6570\u4e3a1\u65f6\u8df3\u8fc7remote\u7b97\u5b50\uff0c\u7cbe\u7b80\u6267\u884c\u8ba1\u5212\u3002</li> </ul> </li> <li> <p>2PC\u4e8b\u52a1\u4f18\u5316\uff1a</p> <ul> <li>\u6b7b\u9501\u68c0\u67e5\u6027\u80fd\u4f18\u5316\uff1a\u6279\u91cf\u83b7\u53d6gxid\uff1b\u904d\u5386\u67e5\u627egxid\u4fee\u6539\u4e3a\u4e8c\u5206\u67e5\u627e\uff1b\u589e\u52a0try\u8f6e\u6b21\u9650\u5236\u3002</li> <li>2PC\u6dfb\u52a0\u4fdd\u62a4\u6a21\u5f0f\uff0c\u675c\u7edd\u90e8\u5206\u63d0\u4ea4\u7684\u60c5\u51b5\u3002</li> <li>drop database \u589e\u52a0prepare\u8fc7\u7a0b\uff0c\u786e\u4fdd\u4e0d\u4f1a\u51fa\u73b0\u8282\u70b9\u5931\u8d25\u6b8b\u7559\u3002</li> </ul> </li> <li> <p>\u6613\u7528\u6027\u589e\u5f3a\uff1a</p> <ul> <li>\u589e\u52a0pooler\u591a\u7ebf\u7a0b\u65e5\u5fd7\u529f\u80fd\uff0c\u65b9\u4fbf\u7528\u6237\u8fdb\u884c\u95ee\u9898\u5206\u6790\u3002</li> <li>GTM\u65e5\u5fd7\u4f18\u5316\uff0c\u65e5\u5fd7\u6c47\u805a\u4e00\u4e2a\u6587\u4ef6\uff0c\u5e76\u81ea\u52a8\u62c6\u5206\u6d3b\u8dc3\u65e5\u5fd7\uff0c\u65b9\u4fbf\u7528\u6237\u968f\u65f6\u67e5\u770b\u3002</li> <li>\u652f\u6301gtm_ctl -l\u6307\u5b9a\u65e5\u5fd7\u6587\u4ef6\u8def\u5f84\u542f\u52a8\uff0c\u65b9\u4fbf\u7528\u6237\u5bf9\u65e5\u5fd7\u8fdb\u884c\u7ba1\u7406\u3002</li> </ul> </li> <li> <p>\u65b0\u7279\u6027\u652f\u6301\uff1a</p> <ul> <li>\u81ea\u7814\u5206\u533a\u8868\u526a\u679d\uff0c\u6dfb\u52a0IN\u8bed\u6cd5\u526a\u679d\uff0c\u63d0\u524d\u52a0\u901f\u526a\u679d\u3002</li> <li>\u6570\u636eshuffle\u652f\u6301\u7528\u6237\u81ea\u5b9a\u4e49\u51fd\u6570\u3002</li> <li>\u5141\u8bb8\u5220\u9664\u5e26\u6709\u5206\u5e03\u5f0f\u5916\u952e\u7ea6\u675f\u7684\u4e3b\u8868\u7684\u5217\u3002</li> </ul> </li> </ol>"},{"location":"release/v2-5-0/","title":"V2.5.0-release","text":"<p>V2.5.0-release \u7248\u672c\u4e3b\u8981\u4fee\u6539\u96c6\u4e2d\u5728:</p> <ol> <li> <p>\u6027\u80fd\u4f18\u5316</p> <p>\u4f7f\u7528\u6269\u5c55\u534f\u8bae\u65f6/function\u4e2d\u6267\u884cinsert\u591a\u6761\u6570\u636e\u91cd\u5199\u4e3acopy\uff0c\u5199\u5165\u6027\u80fd\u63d0\u5347\u6570\u5341\u500d cost\u4ee3\u4ef7\u4f30\u7b97\u51c6\u786e\u6027\u63d0\u5347\uff0c\u6267\u884c\u8ba1\u5212\u6027\u80fd\u63d0\u53472\u500d\u4ee5\u4e0a pg_stat_cluster_activity \u5185\u5b58\u4f7f\u7528\u4f18\u5316</p> </li> <li> <p>\u529f\u80fd\u589e\u5f3a</p> <p>\u652f\u6301\u8d44\u6e90\u9694\u79bb\u7684\u4e0d\u540cnodegroup\u7684\u8868\u8fdb\u884cjoin \u652f\u6301\u4eceCN\u8ba2\u9605DN WAL\u65e5\u5fd7 \u652f\u6301analyze\u4fe1\u606f\u540c\u6b65\u5230\u5176\u4ed6CN\uff0c\u4fdd\u969c\u4e0d\u540cCN\u7684\u7edf\u8ba1\u4fe1\u606f\u4e00\u81f4 \u589e\u52a0libpq TCP\u8d85\u65f6\u8bbe\u7f6e \u9519\u8bef\u4fe1\u606f\u63d0\u793a\u52a0\u5f3a\uff0c\u65b9\u4fbf\u7528\u6237\u8fdb\u884c\u95ee\u9898\u5206\u6790</p> </li> <li> <p>\u5176\u4ed6\u5df2\u77e5bug\u4fee\u590d</p> </li> </ol>"},{"location":"release/v2-6-0/","title":"V2.6.0-release","text":"<p>V2.6.0-release \u7248\u672c\u4e3b\u8981\u4fee\u6539\u96c6\u4e2d\u5728:</p> <ol> <li> <p>\u529f\u80fd\u589e\u5f3a</p> <p>\u652f\u6301\u7a7a\u95f4\u6570\u636e\u5e93\u63d2\u4ef6PostGIS</p> <p>\u652f\u6301rpm\u5305\u90e8\u7f72</p> <p>\u589e\u52a0\u8bb0\u5f55\u6267\u884c\u65f6\u95f4\u8d85\u8fc7\u8bbe\u5b9a\u9608\u503c\u7684\u67e5\u8be2\u8bf7\u6c42sql\u7684\u63d2\u4ef6slowquery</p> </li> <li> <p>\u5176\u4ed6\u5df2\u77e5bug\u4fee\u590d</p> <p>\u4fee\u590d\u591a\u64cd\u4f5c\u7cfb\u7edf\u652f\u6301\u95ee\u9898</p> <p>\u4fee\u590d/doc/src/sgml/func.sgml\u5f15\u8d77\u7684make html\u7f16\u8bd1\u95ee\u9898</p> </li> <li> <p>\u5468\u8fb9\u751f\u6001</p> <p>\u6dfb\u52a0\u5bb9\u5668\u5316\u90e8\u7f72\u6848\u4f8b\u6307\u5f15\u53ca\u6587\u6863</p> <p>\u6dfb\u52a0k8s\u96c6\u7fa4\u5316\u90e8\u7f72\u63d2\u4ef6KubeBlock\u652f\u6301\uff0c\u65b0\u589e\u90e8\u7f72\u6848\u4f8b\u6307\u5f15\u53ca\u6587\u6863</p> <p>\u6dfb\u52a0\u57fa\u4e8eGrafana/Prometheus\u7684\u76d1\u63a7\u90e8\u7f72\u6848\u4f8b\u6307\u5f15\u53ca\u6587\u6863</p> </li> </ol>"},{"location":"en/","title":"Welcome to the OpenTenBase Documentation!","text":"<p>OpenTenBase is an enterprise-level distributed HTAP open source database. It has high scalability, commercial database syntax compatibility, distributed HTAP engine, multi-level disaster recovery and multi-dimensional resource isolation. It has been successfully used in core businesses in finance, medical, aerospace and other industries. system.</p> <p>Welcome visit our homepage: https://opentenbase.org</p> <p>Quick Start </p> <p>Application Access </p> <p>Basic Usage </p>"},{"location":"en/download/","title":"Download","text":"<p>Click \"Download Here\" to download OpenTenBase</p> Kernel Download URL OpenTenBase Download Here TXSQL Download Here"},{"location":"en/faq/","title":"FAQ","text":""},{"location":"en/contribution/docs-format-guide/","title":"Documentation format guide","text":"<p>This page lists the some rules that should be followed when writing OpenTenBase documentation. Please read this page carefully before writing or modifying documentation to help you write higher quality content.</p>"},{"location":"en/contribution/docs-format-guide/#storage-format-and-document-links","title":"Storage format and document links","text":"<ol> <li>File names are written in lowercase letters, and words are separated by <code>-</code>. For example: <code>docs-format-guide.md</code>.</li> <li>Add <code>.en</code> after the file name of an English documentation. For example: <code>docs-format-guide.en.md</code>. Files for English documentations are stored in the same directory as Chinese documentations.</li> <li>Use relative paths for internal links, for example: <code>[Format Guide](docs-format-guide.md)</code>, <code>[FAQ](../faq.md)</code>.</li> <li>All the images used are stored in the <code>docs/assets</code> directory of the repository and have a meaningful file names. Use relative paths for image references, for example: <code>![OpenTenBase favicon](./assets/favicon.png)</code>.</li> </ol>"},{"location":"en/contribution/docs-format-guide/#basic-format-requirements-for-documents","title":"Basic format requirements for documents","text":"<ul> <li>Level 1 headings in form of <code>#</code> or <code>&lt;h1&gt;</code> are not allowed in the document body except for the title of the document, which is the same as the title of the document and written in the first line of the document.</li> <li>A space is required after the number sign of headings. For example: <code>## Second-level heading</code>.</li> <li>A white line is required after a heading.</li> <li>Use 4 spaces for indentation, not Tab.</li> <li>For block-level elements such as code blocks, tables, etc., there should be a blank line before and after the element.</li> <li>An indentation of 4 spaces is required for second-level lists.</li> <li>The content added to the same level list should have an indentation of 4 spaces, and two blank lines should be added before and after the content.</li> <li>For admonitions using the <code>???</code> or <code>!!!</code> syntax, an identation of 4 spaces is required for each line of text, even if it is a blank line. An empty line is required before and after the admonitions, but not before and after the content.</li> <li>Code blocks used in form of <code>```</code> should have a language specified. For example: <code>``` shell</code>. If the code content is plain text, specify <code>text</code> as the language.</li> </ul>"},{"location":"en/contribution/how-to/","title":"How to Contribute to OpenTenBase","text":""},{"location":"en/contribution/how-to/#contribute-to-the-documentation","title":"Contribute to the documentation","text":"<ol> <li>Fork the documentation repository</li> <li> <p>Clone the forked documentation repository to your local machine</p> <p><code>git clone git@github.com:yourname/docs.git # (1)</code></p> <ol> <li>(You need to replace <code>yourname</code> with your own GitHub username)</li> </ol> </li> <li> <p>Configure the environment</p> <ul> <li>Install Python 3.x</li> <li>Install mkdocs-material and multi language plugin</li> </ul> <p><code>pip install mkdocs-material mkdocs-static-i18n</code></p> <ul> <li>Run the preview server locally</li> </ul> <p><code>mkdocs serve</code></p> </li> <li> <p>Start contributing!</p> <ul> <li>Refer to mkdocs-material's documentation for more details about markdown and the features supported by this documentation site.</li> <li>Please follow the format guide of this documentation site.</li> </ul> </li> <li> <p>Verify if the content and format are correct through the preview server, and then commit your changes.</p> </li> <li>Submit a Pull Request to the documentation repository, and it will be merged after being reviewed.</li> </ol>"},{"location":"en/contribution/how-to/#contribute-to-the-code","title":"Contribute to the Code","text":"<p>If you have good comments or suggestions, welcome to create Issues or Pull Requests\uff0ccontribute to the OpenTenBase open source community. OpenTenBase continues to recruit contributors, even if it is answering questions in the issue, or doing some simple bugfixes, it will be of great help to OpenTenBase.</p> <p>Tencent Open Source Incentive Program Encourage developers to participate and contribute, and look forward to your joining.</p>"},{"location":"en/contribution/how-to/#for-contributors","title":"For contributors","text":"<p>Please ensure that the following conditions are met before submitting an issue:</p> <ul> <li>Must be a bug or new feature</li> <li>Have searched in the issue, and did not find a similar issue or solution</li> <li>When creating a new issue, please provide a detailed description, screenshot or short video to help us locate the problem</li> </ul>"},{"location":"en/contribution/how-to/#pull-request","title":"Pull Request","text":"<p>We welcome everyone to contribute code to make our product more powerful. The code team will monitor all pull requests, and we will do the corresponding code inspection and testing. After the test passes, we will accept the PR, but will not immediately merge into the master branch.</p> <p>Please confirm before completing a PR:</p> <ol> <li>Fork your own branch from the master branch.</li> <li>Please modify the corresponding documents and comments after modifying the code.</li> <li>Please add License and Copyright declarations in the newly created file.</li> <li>Ensure a consistent code style.</li> <li>Do adequate testing.</li> <li>Then, you can submit your code to the dev branch.</li> </ol>"},{"location":"en/guide/01-quickstart/","title":"Quick Start","text":""},{"location":"en/guide/01-quickstart/#whats-opentenbase","title":"What's OpenTenBase","text":"<p>OpenTenBase is a relational database cluster platform that provides write reliability and multi node data synchronization. You can configure OpenTenBase on one or more hosts and store OpenTenBase data on multiple physical hosts. There are two ways to store data tables: distributed or replicated. When sending query SQL to OpenTenBase, OpenTenBase will automatically send query statements to data nodes and get the final results.</p> <p>OpenTenBase is a distributed cluster architecture (as shown in the figure below), which is a distributed share nothing architecture mode, each node is independent and processes its own data. After processing, the results may be summarized to the upper layer or transferred between nodes. Each processing unit communicates with each other through the network protocol, with better parallel processing and expansion ability, which also means that the OpenTenBase cluster can be deployed on the basic x86 server.</p> <p></p> <p>Here are three modules of OpenTenBase</p> <ul> <li> <p>Coordinator Node: (CN for short)</p> <p>Application access portal is responsible for data distribution and query planning. Multiple nodes are in the same location, and each node provides the same database view. In terms of function, CN only stores the global metadata of the system, not the actual user data.</p> </li> <li> <p>Datanode Node: (DN for short)</p> <p>Each DN stores the partition of user data. In function, DN node is responsible for completing the request of executing CN distribution.</p> </li> <li> <p>GTM Node: (Global Transaction Manager)</p> <p>GTM is responsible for the management of cluster transaction information, as well as the global objects of the cluster, such as sequence.</p> </li> </ul> <p>Next, let's show how to build a OpenTenBase cluster environment from the source code</p>"},{"location":"en/guide/01-quickstart/#opentenbase-source-code-compilation-and-installation","title":"OpenTenBase source code compilation and installation","text":""},{"location":"en/guide/01-quickstart/#system-requirements","title":"System Requirements:","text":"<p>Memory: 4G RAM minimum</p> <p>OS: TencentOS 2, TencentOS 3, OpenCloudOS, CentOS 7, CentOS 8, Ubuntu</p>"},{"location":"en/guide/01-quickstart/#dependence","title":"Dependence","text":"<p><code>yum -y install gcc make readline-devel zlib-devel openssl-devel uuid-devel bison flex git</code></p> <p>or</p> <p><code>apt install -y gcc make libreadline-dev zlib1g-dev libssl-dev libossp-uuid-dev bison flex git</code></p> <ul> <li> <p>create user</p> <p>Note: all machines that need to install OpenTenBase cluster need to create</p> </li> </ul> <pre><code>mkdir /data\nuseradd -d /data/opentenbase -s /bin/bash -m opentenbase\npasswd opentenbase # set password\n</code></pre> <ul> <li>get source code</li> </ul> <pre><code>git clone https://github.com/OpenTenBase/OpenTenBase\n</code></pre> <ul> <li>source code compilation</li> </ul> <pre><code>cd ${SOURCECODE_PATH}\nrm -rf ${INSTALL_PATH}/opentenbase_bin_v2.0\nchmod +x configure*\n./configure --prefix=${INSTALL_PATH}/opentenbase_bin_v2.0  --enable-user-switch --with-openssl  --with-ossp-uuid CFLAGS=-g\nmake clean\nmake -sj\nmake install\nchmod +x contrib/pgxc_ctl/make_signature\ncd contrib\nmake -sj\nmake install\n</code></pre> <p>In this paper, the above two parameters are as follows</p> <pre><code>${SOURCECODE_PATH}=/data/opentenbase/OpenTenBase\n${INSTALL_PATH}=/data/opentenbase/install\n</code></pre> <ul> <li> <p>cluster installation</p> <ul> <li>cluster planning</li> </ul> <p>Next, set up a cluster of 1 GTM master, 1 GTM standby, 2 CN master (the CN master is equivalent, so there is no need to standy CN), 2 DN master, and 2 DN standby on two servers. This cluster is the minimum configuration with disaster tolerance capability.</p> </li> </ul> <pre><code>host1\uff1a10.215.147.158\nhost2\uff1a10.240.138.159\n</code></pre> <p>planning is as follows\uff1a</p> node name IP data directory GTM master 10.215.147.158 /data/opentenbase/data/gtm GTM slave 10.240.138.159 /data/opentenbase/data/gtm CN1 10.215.147.158 /data/opentenbase/data/coord CN2 10.240.138.159 /data/opentenbase/data/coord DN1 master 10.215.147.158 /data/opentenbase/data/dn001 DN1 slave 10.240.138.159 /data/opentenbase/data/dn001 DN2 master 10.240.138.159 /data/opentenbase/data/dn002 DN2 slave 10.215.147.158 /data/opentenbase/data/dn002 <p>Sketch Map:  </p> <p></p> <ul> <li>Disable SELinux and firewall (optinal)</li> </ul> <pre><code>vi /etc/selinux/config # disable SELinux, change SELINUX=enforcing to SELINUX=disabled\n# disable firewall, for Ubuntu, change firewalld to ufw\nsystemctl disable firewalld\nsystemctl stop firewalld\n</code></pre> <ul> <li>SSH mutual trust configuration between machines</li> </ul> <pre><code>su opentenbase\nssh-keygen -t rsa\nssh-copy-id -i ~/.ssh/id_rsa.pub destination-user@destination-server\n</code></pre> <p>Reference resources: Linux ssh mutual trust</p> <ul> <li>Environment variable configuration</li> </ul> <p>All machines in the cluster need to be configured</p> <pre><code>[opentenbase@localhost ~]$ vim ~/.bashrc\nexport OPENTENBASE_HOME=/data/opentenbase/install/opentenbase_bin_v2.0\nexport PATH=$OPENTENBASE_HOME/bin:$PATH\nexport LD_LIBRARY_PATH=$OPENTENBASE_HOME/lib:${LD_LIBRARY_PATH}\nexport LC_ALL=C\n</code></pre> <p>Above, the required basic environment has been configured, and you can enter the cluster initialization stage. For the convenience of users, OpenTenBase provides special configuration and operation tools: pgxc_ctl to help users quickly build and manage clusters. Here, you need to write the IP, port and data directory of the nodes mentioned above into the configuration file pgxc_ctl.conf</p> <ul> <li>Initialization configuration file pgxc_ctl.conf</li> </ul> <pre><code>[opentenbase@localhost ~]$ mkdir /data/opentenbase/pgxc_ctl\n[opentenbase@localhost ~]$ cd /data/opentenbase/pgxc_ctl\n[opentenbase@localhost ~/pgxc_ctl]$ vim pgxc_ctl.conf\n</code></pre> <p>The following shows the pgxc_ctl.conf file content written using the IP, port, database directory, binary directory and other planning values described above. In practice, we only need to configure it according to our own actual situation.</p> <p>We can also download and rename it to <code>pgxc_ctl.conf</code> and configure it according to our own actual situation.</p> <p>Download Double Node Conf</p> <p>Download Single Node Conf</p> <pre><code>#!/bin/bash\n# Double Node Config\n\nIP_1=10.215.147.158\nIP_2=10.240.138.159\n\npgxcInstallDir=/data/opentenbase/install/opentenbase_bin_v2.0\npgxcOwner=opentenbase\ndefaultDatabase=postgres\npgxcUser=$pgxcOwner\ntmpDir=/tmp\nlocalTmpDir=$tmpDir\nconfigBackup=n\nconfigBackupHost=pgxc-linker\nconfigBackupDir=$HOME/pgxc\nconfigBackupFile=pgxc_ctl.bak\n\n\n#---- GTM ----------\ngtmName=gtm\ngtmMasterServer=$IP_1\ngtmMasterPort=50001\ngtmMasterDir=/data/opentenbase/data/gtm\ngtmExtraConfig=none\ngtmMasterSpecificExtraConfig=none\ngtmSlave=y\ngtmSlaveServer=$IP_2\ngtmSlavePort=50001\ngtmSlaveDir=/data/opentenbase/data/gtm\ngtmSlaveSpecificExtraConfig=none\n\n#---- Coordinators -------\ncoordMasterDir=/data/opentenbase/data/coord\ncoordArchLogDir=/data/opentenbase/data/coord_archlog\n\ncoordNames=(cn001 cn002 )\ncoordPorts=(30004 30004 )\npoolerPorts=(31110 31110 )\ncoordPgHbaEntries=(0.0.0.0/0)\ncoordMasterServers=($IP_1 $IP_2)\ncoordMasterDirs=($coordMasterDir $coordMasterDir)\ncoordMaxWALsernder=2\ncoordMaxWALSenders=($coordMaxWALsernder $coordMaxWALsernder )\ncoordSlave=n\ncoordSlaveSync=n\ncoordArchLogDirs=($coordArchLogDir $coordArchLogDir)\n\ncoordExtraConfig=coordExtraConfig\ncat &gt; $coordExtraConfig &lt;&lt;EOF\n#================================================\n# Added to all the coordinator postgresql.conf\n# Original: $coordExtraConfig\n\ninclude_if_exists = '/data/opentenbase/global/global_opentenbase.conf'\n\nwal_level = replica\nwal_keep_segments = 256 \nmax_wal_senders = 4\narchive_mode = on \narchive_timeout = 1800 \narchive_command = 'echo 0' \nlog_truncate_on_rotation = on \nlog_filename = 'postgresql-%M.log' \nlog_rotation_age = 4h \nlog_rotation_size = 100MB\nhot_standby = on \nwal_sender_timeout = 30min \nwal_receiver_timeout = 30min \nshared_buffers = 1024MB \nmax_pool_size = 2000\nlog_statement = 'ddl'\nlog_destination = 'csvlog'\nlogging_collector = on\nlog_directory = 'pg_log'\nlisten_addresses = '*'\nmax_connections = 2000\n\nEOF\n\ncoordSpecificExtraConfig=(none none)\ncoordExtraPgHba=coordExtraPgHba\ncat &gt; $coordExtraPgHba &lt;&lt;EOF\n\nlocal   all             all                                     trust\nhost    all             all             0.0.0.0/0               trust\nhost    replication     all             0.0.0.0/0               trust\nhost    all             all             ::1/128                 trust\nhost    replication     all             ::1/128                 trust\n\n\nEOF\n\n\ncoordSpecificExtraPgHba=(none none)\ncoordAdditionalSlaves=n \ncad1_Sync=n\n\n#---- Datanodes ---------------------\ndn1MstrDir=/data/opentenbase/data/dn001\ndn2MstrDir=/data/opentenbase/data/dn002\ndn1SlvDir=/data/opentenbase/data/dn001\ndn2SlvDir=/data/opentenbase/data/dn002\ndn1ALDir=/data/opentenbase/data/datanode_archlog\ndn2ALDir=/data/opentenbase/data/datanode_archlog\n\nprimaryDatanode=dn001\ndatanodeNames=(dn001 dn002)\ndatanodePorts=(40004 40004)\ndatanodePoolerPorts=(41110 41110)\ndatanodePgHbaEntries=(0.0.0.0/0)\ndatanodeMasterServers=($IP_1 $IP_2)\ndatanodeMasterDirs=($dn1MstrDir $dn2MstrDir)\ndnWALSndr=4\ndatanodeMaxWALSenders=($dnWALSndr $dnWALSndr)\n\ndatanodeSlave=y\ndatanodeSlaveServers=($IP_2 $IP_1)\ndatanodeSlavePorts=(50004 54004)\ndatanodeSlavePoolerPorts=(51110 51110)\ndatanodeSlaveSync=n\ndatanodeSlaveDirs=($dn1SlvDir $dn2SlvDir)\ndatanodeArchLogDirs=($dn1ALDir/dn001 $dn2ALDir/dn002)\n\ndatanodeExtraConfig=datanodeExtraConfig\ncat &gt; $datanodeExtraConfig &lt;&lt;EOF\n#================================================\n# Added to all the coordinator postgresql.conf\n# Original: $datanodeExtraConfig\n\ninclude_if_exists = '/data/opentenbase/global/global_opentenbase.conf'\nlisten_addresses = '*' \nwal_level = replica \nwal_keep_segments = 256 \nmax_wal_senders = 4\narchive_mode = on \narchive_timeout = 1800 \narchive_command = 'echo 0' \nlog_directory = 'pg_log' \nlogging_collector = on \nlog_truncate_on_rotation = on \nlog_filename = 'postgresql-%M.log' \nlog_rotation_age = 4h \nlog_rotation_size = 100MB\nhot_standby = on \nwal_sender_timeout = 30min \nwal_receiver_timeout = 30min \nshared_buffers = 1024MB \nmax_connections = 4000 \nmax_pool_size = 4000\nlog_statement = 'ddl'\nlog_destination = 'csvlog'\nwal_buffers = 1GB\n\nEOF\n\ndatanodeSpecificExtraConfig=(none none)\ndatanodeExtraPgHba=datanodeExtraPgHba\ncat &gt; $datanodeExtraPgHba &lt;&lt;EOF\n\nlocal   all             all                                     trust\nhost    all             all             0.0.0.0/0               trust\nhost    replication     all             0.0.0.0/0               trust\nhost    all             all             ::1/128                 trust\nhost    replication     all             ::1/128                 trust\n\n\nEOF\n\n\ndatanodeSpecificExtraPgHba=(none none)\n\ndatanodeAdditionalSlaves=n\nwalArchive=n\n\n</code></pre> <ul> <li>Distribute binary package</li> </ul> <p>After writing the configuration file, you need to deploy the binary package to the physical machine where all nodes are located. This can be done by executing the deploy all command with pgxc_ctl tool.</p> <pre><code>[opentenbase@localhost ~/pgxc_ctl]$ pgxc_ctl \n/usr/bin/bash\nInstalling pgxc_ctl_bash script as /data/opentenbase/pgxc_ctl/pgxc_ctl_bash.\nInstalling pgxc_ctl_bash script as /data/opentenbase/pgxc_ctl/pgxc_ctl_bash.\nReading configuration using /data/opentenbase/pgxc_ctl/pgxc_ctl_bash --home /data/opentenbase/pgxc_ctl --configuration /data/opentenbase/pgxc_ctl/pgxc_ctl.conf\nFinished reading configuration.\n   ******** PGXC_CTL START ***************\n\nCurrent directory: /data/opentenbase/pgxc_ctl\nPGXC deploy all\nDeploying Postgres-XL components to all the target servers.\nPrepare tarball to deploy ... \nDeploying to the server 10.215.147.158.\nDeploying to the server 10.240.138.159.\nDeployment done.\n</code></pre> <p>Log in to all nodes and check whether the binary package is distributed</p> <pre><code>[opentenbase@localhost ~/install]$ ls /data/opentenbase/install/opentenbase_bin_v2.0\nbin  include  lib  share    \n</code></pre> <ul> <li>execute init all command to complete cluster initialization</li> </ul> <pre><code>[opentenbase@localhost ~]$ pgxc_ctl\n/usr/bin/bash\nInstalling pgxc_ctl_bash script as /data/opentenbase/pgxc_ctl/pgxc_ctl_bash.\nInstalling pgxc_ctl_bash script as /data/opentenbase/pgxc_ctl/pgxc_ctl_bash.\nReading configuration using /data/opentenbase/pgxc_ctl/pgxc_ctl_bash --home /data/opentenbase/pgxc_ctl --configuration /data/opentenbase/pgxc_ctl/pgxc_ctl.conf\nFinished reading configuration.\n   ******** PGXC_CTL START ***************\n\nCurrent directory: /data/opentenbase/pgxc_ctl\nPGXC init all\nInitialize GTM master\n....\n....\nInitialize datanode slave dn001\nInitialize datanode slave dn002\nmkdir: cannot create directory '/data1/opentenbase': Permission denied\nchmod: cannot access '/data1/opentenbase/data/dn001': No such file or directory\npg_ctl: directory \"/data1/opentenbase/data/dn001\" does not exist\npg_basebackup: could not create directory \"/data1/opentenbase\": Permission denied\n</code></pre> <ul> <li>Installation error handling</li> </ul> <p>Generally, if there is an error in initializing the cluster, the terminal will print out the error log. You can look up the error reason and change the configuration, or through the error log in '/data/OpenTenBase/pgxc_ctl/pgxc_log' path to check the error in the configuration file</p> <pre><code>[opentenbase@localhost ~]$ ll ~/pgxc_ctl/pgxc_log/\ntotal 184\n-rw-rw-r-- 1 opentenbase opentenbase 81123 Nov 13 17:22 14105_pgxc_ctl.log\n-rw-rw-r-- 1 opentenbase opentenbase  2861 Nov 13 17:58 15762_pgxc_ctl.log\n-rw-rw-r-- 1 opentenbase opentenbase 14823 Nov 14 07:59 16671_pgxc_ctl.log\n-rw-rw-r-- 1 opentenbase opentenbase  2721 Nov 13 16:52 18891_pgxc_ctl.log\n-rw-rw-r-- 1 opentenbase opentenbase  1409 Nov 13 16:20 22603_pgxc_ctl.log\n-rw-rw-r-- 1 opentenbase opentenbase 60043 Nov 13 16:33 28932_pgxc_ctl.log\n-rw-rw-r-- 1 opentenbase opentenbase 15671 Nov 14 07:57 6849_pgxc_ctl.log\n</code></pre> <p>By running pgxc_ctl tool, execute clean all command to delete the initialized file. Then modify the pgxc_ctl.conf file\uff0cand execute the init all command to reinitialize.</p> <pre><code>[opentenbase@localhost ~]$ pgxc_ctl\n/usr/bin/bash\nInstalling pgxc_ctl_bash script as /data/opentenbase/pgxc_ctl/pgxc_ctl_bash.\nInstalling pgxc_ctl_bash script as /data/opentenbase/pgxc_ctl/pgxc_ctl_bash.\nReading configuration using /data/opentenbase/pgxc_ctl/pgxc_ctl_bash --home /data/opentenbase/pgxc_ctl --configuration /data/opentenbase/pgxc_ctl/pgxc_ctl.conf\nFinished reading configuration.\n   ******** PGXC_CTL START ***************\n\nCurrent directory: /data/opentenbase/pgxc_ctl\nPGXC clean all\n\n\n[opentenbase@localhost ~]$ pgxc_ctl\n/usr/bin/bash\nInstalling pgxc_ctl_bash script as /data/opentenbase/pgxc_ctl/pgxc_ctl_bash.\nInstalling pgxc_ctl_bash script as /data/opentenbase/pgxc_ctl/pgxc_ctl_bash.\nReading configuration using /data/opentenbase/pgxc_ctl/pgxc_ctl_bash --home /data/opentenbase/pgxc_ctl --configuration /data/opentenbase/pgxc_ctl/pgxc_ctl.conf\nFinished reading configuration.\n   ******** PGXC_CTL START ***************\n\nCurrent directory: /data/opentenbase/pgxc_ctl\nPGXC init all\nInitialize GTM master\nEXECUTE DIRECT ON (dn002) 'ALTER NODE dn002 WITH (TYPE=''datanode'',    HOST=''10.240.138.159'', PORT=40004, PREFERRED)';\nEXECUTE DIRECT\nEXECUTE DIRECT ON (dn002) 'SELECT pgxc_pool_reload()';\n pgxc_pool_reload \n------------------\n t\n(1 row)\n\nDone.\n</code></pre> <ul> <li> <p>Show cluster status </p> <p>When the above output is found, the cluster is OK. In addition, you can show the cluster status through the monitor all command of the pgxc_ctl tool</p> </li> </ul> <pre><code>[opentenbase@localhost ~/pgxc_ctl]$ pgxc_ctl\n/usr/bin/bash\nInstalling pgxc_ctl_bash script as /data/opentenbase/pgxc_ctl/pgxc_ctl_bash.\nInstalling pgxc_ctl_bash script as /data/opentenbase/pgxc_ctl/pgxc_ctl_bash.\nReading configuration using /data/opentenbase/pgxc_ctl/pgxc_ctl_bash --home /data/opentenbase/pgxc_ctl --configuration /data/opentenbase/pgxc_ctl/pgxc_ctl.conf\nFinished reading configuration.\n   ******** PGXC_CTL START ***************\n\nCurrent directory: /data/opentenbase/pgxc_ctl\nPGXC monitor all\nRunning: gtm master\nNot running: gtm slave\nRunning: coordinator master cn001\nRunning: coordinator master cn002\nRunning: datanode master dn001\nRunning: datanode slave dn001\nRunning: datanode master dn002\nNot running: datanode slave dn002\n</code></pre> <p>If the replication mode between the master and slave nodes is not synchronous replication (meaning asynchronous replication), the failure of GTM salve and DN slave will not affect the access.</p> <ul> <li> <p>cluster access</p> <p>There is basically no difference between accessing OpenTenBase cluster and PostgreSQL. We can access database cluster through any CN: for example, we can view the topology of the cluster by connecting CN node to select pgxc_node table (the standby node will not be shown in pgxc_node under the current configuration).  The example of accessing through psql under the Linux command line is as follows:</p> </li> </ul> <pre><code>[opentenbase@localhost ~/pgxc_ctl]$ psql -h 10.215.147.158 -p 30004 -d postgres -U opentenbase\npsql (PostgreSQL 10.0 opentenbase V2)\nType \"help\" for help.\n\npostgres=# \\d\nDid not find any relations.\npostgres=# select * from pgxc_node;\n node_name | node_type | node_port |   node_host    | nodeis_primary | nodeis_preferred |  node_id   | node_cluster_name \n-----------+-----------+-----------+----------------+----------------+------------------+------------+-------------------\n gtm       | G         |     50001 | 10.215.147.158 | t              | f                |  428125959 | opentenbase_cluster\n cn001     | C         |     30004 | 10.215.147.158 | f              | f                | -264077367 | opentenbase_cluster\n cn002     | C         |     30004 | 10.240.138.159 | f              | f                | -674870440 | opentenbase_cluster\n dn001     | D         |     40004 | 10.215.147.158 | t              | t                | 2142761564 | opentenbase_cluster\n dn002     | D         |     40004 | 10.240.138.159 | f              | f                |  -17499968 | opentenbase_cluster\n(5 rows)\n</code></pre> <ul> <li>Before using the database, you need to create the default group and sharding group</li> </ul> <p>OpenTenBase uses datanode group to increase the management flexibility of nodes. A default group is required to be used, so it needs to be created in advance. In general, all datanode nodes will be added to the default group.  </p> <p>On the other hand, in order to increase the flexibility of OpenTenBase data distribution, an intermediate logic layer is added to maintain the mapping of data records to physical nodes, which is called sharding. Therefore, sharding needs to be created in advance. The command is as follows:</p> <pre><code>postgres=# create default node group default_group  with (dn001,dn002);\nCREATE NODE GROUP\npostgres=# create sharding group to group default_group;\nCREATE SHARDING GROUP\n</code></pre> <ul> <li>Create database, user, table, insert/delete/update/select, etc</li> </ul> <p>Now you can access the database cluster just like you can use a stand-alone database</p> <pre><code>postgres=# create database test;\nCREATE DATABASE\npostgres=# create user test with password 'test';\nCREATE ROLE\npostgres=# alter database test owner to test;\nALTER DATABASE\npostgres=# \\c test test\nYou are now connected to database \"test\" as user \"test\".\ntest=&gt; create table foo(id bigint, str text) distribute by shard(id);\nCREATE TABLE\ntest=&gt; insert into foo values(1, 'tencent'), (2, 'shenzhen');\nCOPY 2\ntest=&gt; select * from foo;\n id |   str    \n----+----------\n  1 | tencent\n  2 | shenzhen\n(2 rows)\n</code></pre> <ul> <li> <p>stop cluster </p> <p>Stop the cluster through the stop all command of pgxc_ctl tool. The stop all command can be followed by the parameter -m fast or -m immediate to decide how to stop each node   </p> </li> </ul> <pre><code>PGXC stop all -m fast\nStopping all the coordinator masters.\nStopping coordinator master cn001.\nStopping coordinator master cn002.\nDone.\nStopping all the datanode slaves.\nStopping datanode slave dn001.\nStopping datanode slave dn002.\npg_ctl: PID file \"/data/opentenbase/data/dn002/postmaster.pid\" does not exist\nIs server running?\nStopping all the datanode masters.\nStopping datanode master dn001.\nStopping datanode master dn002.\nDone.\nStop GTM slave\nwaiting for server to shut down..... done\nserver stopped\nStop GTM master\nwaiting for server to shut down.... done\nserver stopped\nPGXC monitor all\nNot running: gtm master\nNot running: gtm slave\nNot running: coordinator master cn001\nNot running: coordinator master cn002\nNot running: datanode master dn001\nNot running: datanode slave dn001\nNot running: datanode master dn002\nNot running: datanode slave dn002\n</code></pre> <ul> <li> <p>start cluster </p> <p>Start the cluster through the start all command of pgxc_ctl tool. </p> </li> </ul> <pre><code>[opentenbase@localhost ~]$ pgxc_ctl\n/usr/bin/bash\nInstalling pgxc_ctl_bash script as /data/opentenbase/pgxc_ctl/pgxc_ctl_bash.\nInstalling pgxc_ctl_bash script as /data/opentenbase/pgxc_ctl/pgxc_ctl_bash.\nReading configuration using /data/opentenbase/pgxc_ctl/pgxc_ctl_bash --home /data/opentenbase/pgxc_ctl --configuration /data/opentenbase/pgxc_ctl/pgxc_ctl.conf\nFinished reading configuration.\n   ******** PGXC_CTL START ***************\n\nCurrent directory: /data/opentenbase/pgxc_ctl\nPGXC start all\n</code></pre> <ul> <li>Concluding remarks      This document is just a quick start guide for users, demonstrating how to build a complete OpenTenBase cluster step by step from the source code. Refer to other documents for OpenTenBase features, use, optimization, problem location, etc.</li> </ul>"},{"location":"en/guide/02-access/","title":"Application Access Guide","text":"<p>In Quick Start article, we introduced opentenbase architecture, source code compilation and installation, cluster running status, startup and stop, etc.</p> <p>This chapter will introduce how to connect to OpenTenBase for create database, table, data import, query and other operations.</p> <p>OpenTenBase is compatible with all clients that support the Postgres protocol. Now we introduce the commonly used development languages including JAVA, C, shell, python, PHP, golang for connect to OpenTenBase.</p>"},{"location":"en/guide/02-access/#1java","title":"1\u3001JAVA","text":""},{"location":"en/guide/02-access/#11create-table","title":"1.1\u3001Create Table","text":"<pre><code>import java.sql.Connection;\nimport java.sql.DriverManager;\nimport java.sql.Statement;\n\n\npublic class createtable {\n   public static void main( String args[] )\n     {\n       Connection c = null;\n       Statement stmt = null;\n       try {\n         Class.forName(\"org.postgresql.Driver\");\n         c = DriverManager.getConnection(\"jdbc:postgresql://127.0.0.1:15432/postgres?currentSchema=public&amp;binaryTransfer=false\",\"opentenbase\", \"opentenbase\");\n         System.out.println(\"Opened database successfully\");\n         stmt = c.createStatement();\n         String sql = \"create table opentenbase(id int,nickname text) distribute by shard(id) to group  default_group\" ;\n         stmt.executeUpdate(sql);\n         stmt.close();\n         c.close();\n       } catch ( Exception e ) {\n         System.err.println( e.getClass().getName()+\": \"+ e.getMessage() );\n         System.exit(0);\n       }\n       System.out.println(\"Table created successfully\");\n     }\n}\n</code></pre> <p>Explain\uff1a </p> <ul> <li>The node in here is an arbitrary CN master node. All subsequent operations, unless otherwise specified, are performed by connecting to the CN master node.</li> </ul>"},{"location":"en/guide/02-access/#12insert-data-use-general-protocol","title":"1.2\u3001Insert data use general protocol","text":"<pre><code>import java.sql.Connection;\nimport java.sql.DriverManager;\nimport java.sql.Statement;\n\npublic class insert {\n   public static void main(String args[]) {\n      Connection c = null;\n      Statement stmt = null;\n      try {\n         Class.forName(\"org.postgresql.Driver\");\n         c = DriverManager.getConnection(\"jdbc:postgresql://127.0.0.1:15432/postgres?currentSchema=public&amp;binaryTransfer=false\",\"opentenbase\", \"opentenbase\");\n         c.setAutoCommit(false);\n         System.out.println(\"Opened database successfully\");\n\n         stmt = c.createStatement();\n         String sql = \"INSERT INTO opentenbase (id,nickname) \"\n               + \"VALUES (1,'opentenbase');\";\n         stmt.executeUpdate(sql);\n\n         sql = \"INSERT INTO opentenbase (id,nickname) \"\n               + \"VALUES (2, 'pgxz' ),(3,'pgxc');\";\n         stmt.executeUpdate(sql);\n         stmt.close();\n         c.commit();\n         c.close();\n      } catch (Exception e) {\n         System.err.println( e.getClass().getName()+\": \"+ e.getMessage() );\n         System.exit(0);\n      }\n      System.out.println(\"Records created successfully\");\n   }\n}\n</code></pre>"},{"location":"en/guide/02-access/#13insert-data-use-extended-protocol","title":"1.3\u3001Insert data use extended protocol","text":"<pre><code>import java.sql.Connection;\nimport java.sql.DriverManager;\nimport java.sql.*;\nimport java.util.Random;\n\npublic class insert_prepared {\n   public static void main(String args[]) {\n      Connection c = null;\n      PreparedStatement stmt;\n      try {\n         Class.forName(\"org.postgresql.Driver\");\n         c = DriverManager.getConnection(\"jdbc:postgresql://127.0.0.1:15432/postgres?currentSchema=public&amp;binaryTransfer=false\",\"opentenbase\", \"opentenbase\");\n         c.setAutoCommit(false);\n         System.out.println(\"Opened database successfully\");\n         //Insert data\n         String sql = \"INSERT INTO opentenbase (id,nickname) VALUES (?,?)\";         \n         stmt = c.prepareStatement(sql);\n         stmt.setInt(1, 9999);\n         stmt.setString(2, \"opentenbase_prepared\");\n         stmt.executeUpdate();\n\n         //Insert update\n         sql = \"INSERT INTO opentenbase (id,nickname) VALUES (?,?) ON CONFLICT(id) DO UPDATE SET nickname=?\";\n         stmt = c.prepareStatement(sql);\n         stmt.setInt(1, 9999);\n         stmt.setString(2, \"opentenbase_prepared\");\n         stmt.setString(3, \"opentenbase_prepared_update\");\n         stmt.executeUpdate();\n\n         stmt.close();\n         c.commit();\n         c.close();\n      } catch (Exception e) {\n         System.err.println( e.getClass().getName()+\": \"+ e.getMessage() );\n         System.exit(0);\n      }\n      System.out.println(\"Records created successfully\");\n   }\n}\n</code></pre>"},{"location":"en/guide/02-access/#14use-copy-from-load-file-to-table","title":"1.4\u3001Use <code>copy from</code> load file to table","text":"<pre><code>import java.sql.Connection;\nimport java.sql.DriverManager;\nimport java.sql.Statement;\nimport org.postgresql.copy.CopyManager;  \nimport org.postgresql.core.BaseConnection;  \nimport java.io.*;\n\npublic class copyfrom {\n   public static void main( String args[] )\n     {\n       Connection c = null;\n       Statement stmt = null;\n       FileInputStream fs = null;\n       try {\n         Class.forName(\"org.postgresql.Driver\");\n         c = DriverManager.getConnection(\"jdbc:postgresql://127.0.0.1:15432/postgres?currentSchema=public&amp;binaryTransfer=false\",\"opentenbase\", \"opentenbase\");\n         System.out.println(\"Opened database successfully\");\n         CopyManager cm = new CopyManager((BaseConnection) c);\n         fs = new FileInputStream(\"/data/opentenbase/opentenbase.csv\");\n         String sql = \"COPY opentenbase FROM STDIN DELIMITER AS ','\";\n         cm.copyIn(sql, fs);\n         c.close();\n         fs.close();\n       } catch ( Exception e ) {\n         System.err.println( e.getClass().getName()+\": \"+ e.getMessage() );\n         System.exit(0);\n       }\n       System.out.println(\"Copy data successfully\");\n     }\n}\n</code></pre>"},{"location":"en/guide/02-access/#15use-copy-to-export-data-to-file","title":"1.5\u3001Use <code>copy to</code> export data to file","text":"<pre><code>import java.sql.Connection;\nimport java.sql.DriverManager;\nimport java.sql.Statement;\nimport org.postgresql.copy.CopyManager;  \nimport org.postgresql.core.BaseConnection;  \nimport java.io.*;\n\npublic class copyto {\n   public static void main( String args[] )\n     {\n       Connection c = null;\n       Statement stmt = null;\n       FileOutputStream fs = null;\n       try {\n         Class.forName(\"org.postgresql.Driver\");\n         c = DriverManager.getConnection(\"jdbc:postgresql://127.0.0.1:15432/postgres?currentSchema=public&amp;binaryTransfer=false\",\"opentenbase\", \"opentenbase\");\n         System.out.println(\"Opened database successfully\");\n         CopyManager cm = new CopyManager((BaseConnection) c);\n         fs = new FileOutputStream(\"/data/opentenbase/opentenbase.csv\");\n         String sql = \"COPY opentenbase TO STDOUT DELIMITER AS ','\";\n         cm.copyOut(sql, fs);\n         c.close();\n         fs.close();\n       } catch ( Exception e ) {\n         System.err.println( e.getClass().getName()+\": \"+ e.getMessage() );\n         System.exit(0);\n       }\n       System.out.println(\"Copy data successfully\");\n     }\n}\n</code></pre>"},{"location":"en/guide/02-access/#16download-address-for-jdbc-file","title":"1.6\u3001Download address for jdbc file","text":"<pre><code>https://jdbc.postgresql.org/download.html\n</code></pre>"},{"location":"en/guide/02-access/#2c","title":"2\u3001C","text":""},{"location":"en/guide/02-access/#21connect-to-database","title":"2.1\u3001Connect to database","text":"<pre><code>#include &lt;stdio.h&gt;  \n#include &lt;stdlib.h&gt;  \n#include \"libpq-fe.h\"     \nint\nmain(int argc, char **argv){\n    const char *conninfo;\n    PGconn     *conn;      \n    if (argc &gt; 1){\n        conninfo = argv[1];\n    }else{\n        conninfo = \"dbname = postgres\";  \n    }            \n    conn = PQconnectdb(conninfo);\n    if (PQstatus(conn) != CONNECTION_OK){\n        fprintf(stderr, \"Failed to connect to the database: %s\",PQerrorMessage(conn));              \n    }else{\n        printf(\"Connected to database successful\uff01\\n\");\n    }\n    PQfinish(conn);\n    return 0;\n}\n</code></pre> <p>Compile    </p> <pre><code>gcc -c -I /usr/local/install/opentenbase_pgxz/include/ conn.c  \ngcc -o conn conn.o -L /usr/local/install/opentenbase_pgxz/lib/ -lpq  \n</code></pre> <p>Run  </p> <pre><code>./conn \"host=172.16.0.3 dbname=postgres port=11000\"  \nConnected to database successful\uff01\n</code></pre> <pre><code>./conn \"host=172.16.0.3 dbname=postgres port=15432 user=opentenbase\"   \nConnected to database successful\uff01 \n</code></pre>"},{"location":"en/guide/02-access/#22create-table","title":"2.2\u3001Create table","text":"<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include \"libpq-fe.h\"   \nint\nmain(int argc, char **argv){\n    const char *conninfo;\n    PGconn     *conn;      \n    PGresult   *res;\n    const char *sql = \"create table opentenbase(id int,nickname text) distribute by shard(id) to group  default_group\";\n    if (argc &gt; 1){\n        conninfo = argv[1];\n    }else{\n        conninfo = \"dbname = postgres\";           \n    }        \n    conn = PQconnectdb(conninfo);\n    if (PQstatus(conn) != CONNECTION_OK){\n        fprintf(stderr, \"Failed to connect to the database: %s\",PQerrorMessage(conn));              \n    }else{\n        printf(\"Connected to database successful\uff01\\n\");\n    }\n    res = PQexec(conn,sql);\n    if(PQresultStatus(res) != PGRES_COMMAND_OK){\n        fprintf(stderr, \"Failed to create data table: %s\",PQresultErrorMessage(res)); \n    }else{\n        printf(\"Create data table successful\uff01\\n\");\n    }\n    PQclear(res);\n    PQfinish(conn);\n    return 0;\n}\n</code></pre> <p>Compile  </p> <pre><code>gcc -c -I /usr/local/install/opentenbase_pgxz/include/ createtable.c  \ngcc -o createtable createtable.o -L /usr/local/install/opentenbase_pgxz/lib/ -lpq  \n</code></pre> <p>Run  </p> <pre><code>./createtable \"port=11000 dbname=postgres\"\nConnected to database successful\uff01  \nCreate data table successful\uff01 \n</code></pre>"},{"location":"en/guide/02-access/#23insert-data","title":"2.3\u3001Insert data","text":"<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include \"libpq-fe.h\"   \nint\nmain(int argc, char **argv){\n    const char *conninfo;\n    PGconn     *conn;      \n    PGresult   *res;\n    const char *sql = \"INSERT INTO opentenbase (id,nickname) values(1,'opentenbase'),(2,'pgxz')\";\n    if (argc &gt; 1){\n        conninfo = argv[1];\n    }else{\n        conninfo = \"dbname = postgres\";           \n    }        \n    conn = PQconnectdb(conninfo);\n    if (PQstatus(conn) != CONNECTION_OK){\n        fprintf(stderr, \"Failed to connect to the database: %s\",PQerrorMessage(conn));              \n    }else{\n        printf(\"Create data table successful\uff01\\n\");\n    }\n    res = PQexec(conn,sql);\n    if(PQresultStatus(res) != PGRES_COMMAND_OK){\n        fprintf(stderr, \"Insert data failed: %s\",PQresultErrorMessage(res)); \n    }else{\n        printf(\"Insert data successful\uff01\\n\");\n    }\n    PQclear(res);\n    PQfinish(conn);\n    return 0;\n}\n</code></pre> <p>Compile  </p> <pre><code>gcc -c -I /usr/local/install/opentenbase_pgxz/include/ insert.c\ngcc -o insert insert.o -L /usr/local/install/opentenbase_pgxz/lib/ -lpq\n</code></pre> <p>Run  </p> <pre><code>./insert \"dbname=postgres port=15432\"\n</code></pre>"},{"location":"en/guide/02-access/#24query-data","title":"2.4\u3001Query data","text":"<pre><code>#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include \"libpq-fe.h\"   \nint\nmain(int argc, char **argv){\n    const char *conninfo;\n    PGconn     *conn;      \n    PGresult   *res;\n    const char *sql = \"select * from opentenbase\";\n    if (argc &gt; 1){\n        conninfo = argv[1];\n    }else{\n        conninfo = \"dbname = postgres\";           \n    }\n    conn = PQconnectdb(conninfo);    \n    if (PQstatus(conn) != CONNECTION_OK){\n        fprintf(stderr, \"Failed to connect to the database: %s\",PQerrorMessage(conn));              \n    }else{    \n        printf(\"Connected to database successful\uff01\\n\");\n    }                                \n    res = PQexec(conn,sql);\n    if(PQresultStatus(res) != PGRES_TUPLES_OK){\n        fprintf(stderr, \"Insert data failed: %s\",PQresultErrorMessage(res)); \n    }else{\n        printf(\"Query data successful\uff01\\n\");    \n        int rownum = PQntuples(res) ;\n        int colnum = PQnfields(res);\n        for(int j = 0;j&lt; colnum; ++j){\n            printf(\"%s\\t\",PQfname(res,j));\n        }\n        printf(\"\\n\");\n        for(int i = 0;i&lt; rownum; ++i){\n            for(int j = 0;j&lt; colnum; ++j){\n                printf(\"%s\\t\",PQgetvalue(res,i,j));\n            }\n            printf(\"\\n\");\n        }\n    }\n    PQclear(res);\n    PQfinish(conn);\n    return 0;\n}\n</code></pre> <p>Compile  </p> <pre><code>gcc -std=c99 -c -I /usr/local/install/opentenbase_pgxz/include/ select.c  \ngcc -o select select.o -L /usr/local/install/opentenbase_pgxz/lib/ -lpq\n</code></pre> <p>Run </p> <pre><code>./select \"dbname=postgres port=15432\"\nConnected to database successful\uff01  \nQuery data successful\uff01 \nid      nickname  \n1       opentenbase  \n2       pgxz  \n\n</code></pre>"},{"location":"en/guide/02-access/#25copy-stream-data-into-table","title":"2.5\u3001Copy Stream data into table","text":"<pre><code>#include &lt;string.h&gt;\n#include &lt;stdio.h&gt;\n#include &lt;stdlib.h&gt;\n#include \"libpq-fe.h\"   \nint \nmain(int argc, char **argv){\n    const char *conninfo;\n    PGconn     *conn;      \n    PGresult   *res;\n    const char *buffer = \"1,opentenbase\\n2,pgxz\\n3,opentenbase\u725b\";\n    if (argc &gt; 1){\n        conninfo = argv[1];\n    }else{\n        conninfo = \"dbname = postgres\";           \n    }\n    conn = PQconnectdb(conninfo);\n    if (PQstatus(conn) != CONNECTION_OK){\n        fprintf(stderr, \"Failed to connect to the database: %s\",PQerrorMessage(conn));              \n    }else{\n        printf(\"Connected to database successful\uff01\\n\");\n    }\n    res=PQexec(conn,\"COPY opentenbase FROM STDIN DELIMITER ',';\");\n    if(PQresultStatus(res) != PGRES_COPY_IN){\n        fprintf(stderr, \"Wrong from copy data 1: %s\",PQresultErrorMessage(res));\n    }else{\n        int len = strlen(buffer);\n        if(PQputCopyData(conn,buffer,len) == 1){\n             if(PQputCopyEnd(conn,NULL) == 1){\n                res = PQgetResult(conn);\n                if(PQresultStatus(res) == PGRES_COMMAND_OK){\n                    printf(\"Copy data successful\uff01\\n\");         \n                }else{\n                    fprintf(stderr, \"Wrong from copy data 2: %s\",PQerrorMessage(conn));    \n                }\n             }else{\n                fprintf(stderr, \"Wrong from copy data 3: %s\",PQerrorMessage(conn));   \n             }\n        }else{\n            fprintf(stderr, \"Wrong from copy data 4: %s\",PQerrorMessage(conn));              \n        }\n    }\n    PQclear(res);\n    PQfinish(conn);\n    return 0;\n}\n</code></pre> <p>Compile  </p> <pre><code>gcc -c -I /usr/local/install/opentenbase_pgxz/include/ copy.c\ngcc -o copy copy.o -L /usr/local/install/opentenbase_pgxz/lib/ -lpq\n</code></pre> <p>Run  </p> <pre><code>./copy \"dbname=postgres port=15432\"\nConnected to database successful\uff01 \nCopy data successful\uff01\n</code></pre>"},{"location":"en/guide/02-access/#3shell-script","title":"3\u3001Shell script","text":"<pre><code>#!/bin/sh\n\nif [ $# -ne 0 ]\nthen\n    echo \"usage: $0 exec_sql\"\n    exit 1\nfi\n\nexec_sql=$1\n\nmasters=`psql -h 172.16.0.29 -d postgres -p 15432 -t -c \"select string_agg(node_host, ' ') from (select * from pgxc_node where node_type = 'D' order by node_name) t\"`\nport_list=`psql -h 172.16.0.29 -d postgres -p 15432 -t -c \"select string_agg(node_port::text, ' ') from (select * from pgxc_node where node_type = 'D' order by node_name) t\"`\nnode_cnt=`psql -h 172.16.0.29 -d postgres -p 15432 -t -c \"select count(*) from pgxc_node where node_type = 'D'\"`\nmasters=($masters)\nports=($port_list)\n\necho $node_cnt\n\nflag=0\n\nfor((i=0;i&lt;$node_cnt;i++));\ndo\n    seq=$(($i+1))\n    master=${masters[$i]}\n    port=${ports[$i]}\n    echo $master\n    echo $port\n\n    psql -h $master -p $port  postgres -c \"$exec_sql\"\ndone\n</code></pre>"},{"location":"en/guide/02-access/#4python","title":"4\u3001Python","text":""},{"location":"en/guide/02-access/#41install-psycopg2","title":"4.1\u3001Install psycopg2","text":"<pre><code>[root@VM_0_29_centos ~]# yum install python-psycopg2\n</code></pre>"},{"location":"en/guide/02-access/#42connect-database","title":"4.2\u3001Connect database","text":"<pre><code>#coding=utf-8\n#!/usr/bin/python\nimport psycopg2\ntry:\n    conn = psycopg2.connect(database=\"postgres\", user=\"opentenbase\", password=\"\", host=\"172.16.0.29\", port=\"15432\")\n    print \"Connected to database successful\uff01\"\n    conn.close()\nexcept psycopg2.Error,msg:\n    print \"Failed to connect database, details\uff1a %s\" %(msg.args[0])\n</code></pre> <p>Run  </p> <pre><code>[opentenbase@VM_0_29_centos python]$ python conn.py \nConnected to database successful\uff01  \n</code></pre>"},{"location":"en/guide/02-access/#43create-table","title":"4.3\u3001Create table","text":"<pre><code>#coding=utf-8\n#!/usr/bin/python\nimport psycopg2\ntry:\n    conn = psycopg2.connect(database=\"postgres\", user=\"opentenbase\", password=\"\", host=\"172.16.0.29\", port=\"15432\")\n    print \"Connected to database successful\uff01\"\n    cur = conn.cursor()\n    sql = \"\"\"\n          create table opentenbase \n          (\n              id int,\n              nickname varchar(100)\n          )distribute by shard(id) to group default_group\n          \"\"\"\n    cur.execute(sql)\n    conn.commit()\n    print \"Create table successful!\"    \n    conn.close()\nexcept psycopg2.Error,msg:\n    print \"OpenTenBase Error %s\" %(msg.args[0])\n</code></pre> <p>Run  </p> <pre><code>[opentenbase@VM_0_29_centos python]$ python createtable.py   \nConnected to database successful\uff01 \nCreate table successful!\n</code></pre>"},{"location":"en/guide/02-access/#44insert-data","title":"4.4\u3001Insert data","text":"<pre><code>#coding=utf-8\n#!/usr/bin/python\nimport psycopg2\ntry:\n    conn = psycopg2.connect(database=\"postgres\", user=\"opentenbase\", password=\"\", host=\"172.16.0.29\", port=\"15432\")\n    print \"Connected to database successful!\"    \n    cur = conn.cursor()\n    sql = \"insert into opentenbase values(1,'opentenbase'),(2,'opentenbase');\"\n    cur.execute(sql)\n    sql = \"insert into opentenbase values(%s,%s)\"   \n    cur.execute(sql,(3,'pg'))\n    conn.commit()\n    print \"Insert data successful!\"    \n    conn.close()\nexcept psycopg2.Error,msg:\n    print \"OpenTenBase Error %s\" %(msg.args[0])\n</code></pre> <p>Run  </p> <pre><code>[opentenbase@VM_0_29_centos python]$ python insert.py   \nConnected to database successful\uff01  \nInsert data successful! \n</code></pre>"},{"location":"en/guide/02-access/#45query-data","title":"4.5\u3001Query data","text":"<pre><code>#coding=utf-8\n#!/usr/bin/python\nimport psycopg2\ntry:\n    conn = psycopg2.connect(database=\"postgres\", user=\"opentenbase\", password=\"\", host=\"172.16.0.29\", port=\"15432\")\n    print \"Connected to database successful!\"    \n    cur = conn.cursor()\n    sql = \"select * from opentenbase\"\n    cur.execute(sql)\n    rows = cur.fetchall()\n    for row in rows:\n        print \"ID = \", row[0]\n        print \"NICKNAME = \", row[1],\"\\n\"\n    conn.close()\nexcept psycopg2.Error,msg:\n    print \"OpenTenBase Error %s\" %(msg.args[0])\n</code></pre> <p>Run  </p> <pre><code>[opentenbase@VM_0_29_centos python]$ python select.py   \nConnected to database successful\uff01\nID =  1\nNICKNAME =  opentenbase \n\nID =  2\nNICKNAME =  pgxz \n\nID =  3\nNICKNAME =  pg\n</code></pre>"},{"location":"en/guide/02-access/#46use-copy-from-load-file-to-table","title":"4.6\u3001Use <code>copy from</code> load file to table","text":"<pre><code>#coding=utf-8\n#!/usr/bin/python\nimport psycopg2\ntry:\n    conn = psycopg2.connect(database=\"postgres\", user=\"opentenbase\", password=\"\", host=\"172.16.0.29\", port=\"15432\")\n    print \"Connected to database successful\uff01\"    \n    cur = conn.cursor()\n    filename = \"/data/opentenbase/opentenbase.txt\"\n    cols = ('id','nickname')\n    tablename=\"public.opentenbase\"\n    cur.copy_from(file=open(filename),table=tablename,columns=cols,sep=',')\n    conn.commit()\n    print \"Import data successful!\"\n    conn.close()\nexcept psycopg2.Error,msg:\n    print \"OpenTenBase Error %s\" %(msg.args[0])\n</code></pre> <p>Run</p> <pre><code>[opentenbase@VM_0_29_centos python]$ python copy_from.py \nConnected to database successful\uff01 \nImport data successful!\n</code></pre>"},{"location":"en/guide/02-access/#5php","title":"5\u3001PHP","text":""},{"location":"en/guide/02-access/#51connect-database","title":"5.1\u3001Connect database","text":"<pre><code>&lt;?php     \n$host=\"172.16.0.29\";\n$port=\"15432\";\n$dbname=\"postgres\";\n$user=\"opentenbase\" ;\n$password=\"\";  \n\n//Connect database\n$conn=@pg_connect(\"host=$host port=$port dbname=$dbname user=$user password=$password\");      \nif (!$conn){\n    $error_msg=@pg_errormessage($conn); \n    echo \"Failed to connect database\uff0cdetails\uff1a\".$error_msg.\"\\n&lt;BR&gt;\"; ;\n    exit;\n}else{\n    echo \"Connected to database successful!\"\\n&lt;BR&gt;\";      \n} \n//Close connect\npg_close($conn);\n?&gt;\n</code></pre> <p>Run  </p> <pre><code>[root@VM_0_47_centos test]# curl http://127.0.0.1:8080/dbsta/test/conn.php\nConnected to database successful!\n</code></pre>"},{"location":"en/guide/02-access/#52create-table","title":"5.2\u3001Create table","text":"<pre><code>&lt;?php     \n$host=\"172.16.0.29\";\n$port=\"15432\";\n$dbname=\"postgres\";\n$user=\"opentenbase\" ;\n$password=\"\";  \n\n//Connect database\n$conn=@pg_connect(\"host=$host port=$port dbname=$dbname user=$user password=$password\");      \nif (!$conn){\n    $error_msg=@pg_errormessage($conn); \n    echo \"Failed to connect database\uff0cdetails\uff1a\".$error_msg.\"\\n&lt;BR&gt;\"; ;\n    exit;\n}else{\n    echo \"Connected to database successful!\"\\n&lt;BR&gt;\";      \n} \n\n//Create table\n$sql=\"create table public.opentenbase(id integer,nickname varchar(100)) distribute by shard(id) to group default_group;\";\n$result = @pg_exec($conn,$sql) ;\nif (!$result){\n    $error_msg=@pg_errormessage($conn); \n    echo \"Failed to create table\uff0cdetails\uff1a\".$error_msg.\"\\n\"; ;\n    exit;\n}else{\n    echo \"Creat table successful!\"\\n\";       \n}\n//Close connect\npg_close($conn);\n?&gt;\n</code></pre> <p>run</p> <pre><code>[root@VM_0_47_centos test]# curl http://127.0.0.1:8080/dbsta/test/createtable.php\nConnected to database successful!\nCreat table successful!\n</code></pre>"},{"location":"en/guide/02-access/#53insert-data","title":"5.3\u3001Insert data","text":"<pre><code>&lt;?php     \n$host=\"172.16.0.29\";\n$port=\"15432\";\n$dbname=\"postgres\";\n$user=\"opentenbase\" ;\n$password=\"\";  \n\n//Connect database\n$conn=@pg_connect(\"host=$host port=$port dbname=$dbname user=$user password=$password\");      \nif (!$conn){\n    $error_msg=@pg_errormessage($conn); \n    echo \"Failed to connect database\uff0cdetails\uff1a\".$error_msg.\"\\n\"; ;\n    exit;\n}else{\n    echo \"Connected to database successful!\"\\n\";      \n} \n\n//Insert data\n$sql=\"insert into public.opentenbase values(1,'opentenbase'),(2,'pgxz');\";    \n$result = @pg_exec($conn,$sql) ;\nif (!$result){\n    $error_msg=@pg_errormessage($conn); \n    echo \"Failed to insert data, details\uff1a\".$error_msg.\"\\n\";\n    exit;\n}else{\n    echo \"Insert data successful!\"\\n\";       \n}\n\n//Close connect\npg_close($conn);\n\n?&gt;\n</code></pre> <p>Run</p> <pre><code>[opentenbase@VM_0_47_centos test]$ curl http://127.0.0.1:8080/dbsta/test/insert.php\nConnected to database successful!\nInsert data successful!\n</code></pre>"},{"location":"en/guide/02-access/#54query-data","title":"5.4\u3001Query data","text":"<pre><code>&lt;?php     \n$host=\"172.16.0.29\";\n$port=\"15432\";\n$dbname=\"postgres\";\n$user=\"opentenbase\" ;\n$password=\"\";  \n\n//Connect database\n$conn=@pg_connect(\"host=$host port=$port dbname=$dbname user=$user password=$password\");      \nif (!$conn){\n    $error_msg=@pg_errormessage($conn); \n    echo \"Failed to connect database\uff0cdetails: \".$error_msg.\"\\n\"; ;\n    exit;\n}else{\n    echo \"Connected to database successful!\"\\n\";      \n} \n\n//Query data\n$sql=\"select id,nickname from public.opentenbase\";    \n$result = @pg_exec($conn,$sql) ;\nif (!$result){\n    $error_msg=@pg_errormessage($conn); \n    echo \"Failed to query data, details \uff1a\".$error_msg.\"\\n\";\n    exit;\n}else{\n    echo \"Query data successful!\"\\n\";      \n}\n$record_num = pg_numrows($result);  \necho \"Return query number: \".$record_num.\"\\n\"; \n$rec=pg_fetch_all($result); \nfor($i=0;$i&lt;$record_num;$i++){\n    echo \"numbers: #\".strval($i+1).\"\\n\";\n    echo \"id\uff1a\".$rec[$i][\"id\"].\"\\n\";\n    echo \"nickname\uff1a\".$rec[$i][\"nickname\"].\"\\n\\n\";\n}\n//CLose connect \npg_close($conn);\n?&gt;\n</code></pre> <p>Use method  </p> <pre><code>[root@VM_0_47_centos ~]# curl http://127.0.0.1:8080/dbsta/test/select.php\nConnected to database successful!\nQuery data successful!\nReturn query number: 2\nnumbers: 1\nid\uff1a1\nnickname\uff1aopentenbase\n\nnumbers: 2\nid\uff1a2\nnickname\uff1apgxz\n</code></pre>"},{"location":"en/guide/02-access/#55copy-stream-data-into-table","title":"5.5\u3001Copy Stream data into table","text":"<pre><code>&lt;?php \n\n$host=\"172.16.0.29\";\n$port=\"15432\";\n$dbname=\"postgres\";\n$user=\"opentenbase\" ;\n$password=\"\";  \n\n//Connect database\n$conn=@pg_connect(\"host=$host port=$port dbname=$dbname user=$user password=$password\");      \nif (!$conn){\n    $error_msg=@pg_errormessage($conn); \n    echo \"Failed to connect database\uff0cdetails: \".$error_msg.\"\\n\"; ;\n    exit;\n}else{\n    echo \"Connected to database successful!\"\\n\";      \n}                                     \n$row=ARRAY(\"1,opentenbase\",\"2,pgxz\");   \n$flag=pg_copy_from($conn,\"public.opentenbase\",$row,\",\");\n\nif (!$flag){\n    $error_msg=@pg_errormessage($conn); \n    echo \"copy wrong\uff0cdetails\uff1a\".$error_msg.\"\\n\";\n}else{\n    echo \"copy successful!\"\\n\";          \n}\n\n//Close connect\npg_close($conn);\n\n?&gt;\n</code></pre> <p>Use method</p> <pre><code>curl http://127.0.0.1/dbsta/cron/php_copy_from.php\nConnected to database successful!\ncopy successful!\n</code></pre>"},{"location":"en/guide/02-access/#56export-data-to-array","title":"5.6\u3001Export data to Array","text":"<pre><code>&lt;?php \n\n$host=\"172.16.0.29\";\n$port=\"15432\";\n$dbname=\"postgres\";\n$user=\"opentenbase\" ;\n$password=\"\";  \n\n//Connect database\n$conn=@pg_connect(\"host=$host port=$port dbname=$dbname user=$user password=$password\");      \nif (!$conn){\n    $error_msg=@pg_errormessage($conn); \n    echo \"Failed to connect database\uff0cdetails: \".$error_msg.\"\\n\"; ;\n    exit;\n}else{\n    echo \"Connected to database successful!\"\\n\";      \n}                                    \n\n$row=pg_copy_to($conn,\"public.opentenbase\",\",\");  \nif (!$row){\n    $error_msg=@pg_errormessage($conn); \n    echo \"copy wrong\uff0cdetails\uff1a\".$error_msg.\"\\n\";\n}else{\n    print_r($row);\n}  \n//Close connect \npg_close($conn);              \n?&gt;\n</code></pre> <p>Use method </p> <pre><code>curl http://127.0.0.1/dbsta/cron/php_copy_to.php  \nConnected to database successful!\nArray\n(\n    [0] =&gt; 1,opentenbase\n\n    [1] =&gt; 2,pgxz\n\n)\n</code></pre>"},{"location":"en/guide/02-access/#6golang","title":"6\u3001golang","text":""},{"location":"en/guide/02-access/#61connect-database","title":"6.1\u3001Connect database","text":"<pre><code>package main\n\nimport (\n    \"fmt\"\n    \"time\"\n\n    \"github.com/jackc/pgx\"\n)\n\nfunc main() {\n    var error_msg string\n\n    //Connect database\n    conn, err := db_connect()\n    if err != nil {\n        error_msg = \"Failed to connect database, details\uff1a\" + err.Error()\n        write_log(\"Error\", error_msg)\n        return\n    }\n    //Close connect\n    defer conn.Close()\n    write_log(\"Log\", \"Connected to database successful\uff01\")\n\n}\n\n/*\nFunction\uff1awrite to log\n\nParameter\uff1a\nlog_level -- level of log\uff0conly `Error` or `Log`\nerror_msg -- content of log\n\nReturn\uff1anone\n*/\n\nfunc write_log(log_level string, error_msg string) {\n    //print error message\n    fmt.Println(\"Time\uff1a\", time.Now().Format(\"2006-01-02 15:04:05\"))\n    fmt.Println(\"Log level\uff1a\", log_level)\n    fmt.Println(\"Details\uff1a\", error_msg)\n}\n\n/*\nFunction\uff1aConnect database\n\nParameter\uff1anone\n\nReturn\uff1a\nconn *pgx.Conn -- connection information\nerr error -- error message\n\n*/\n\nfunc db_connect() (conn *pgx.Conn, err error) {\n    var config pgx.ConnConfig\n    config.Host = \"127.0.0.1\"    //localhost or ip\n    config.User = \"opentenbase\"         //username\n    config.Password = \"pgsql\"    //password\n    config.Database = \"postgres\" //database name\n    config.Port = 15432          //port\n    conn, err = pgx.Connect(config)\n    return conn, err\n}\n</code></pre> <pre><code>[root@VM_0_29_centos opentenbase]# go run conn.go \nTime\uff1a 2018-04-03 20:40:28\nLog level\uff1a Log\nDetails\uff1a Connected to database successful\uff01\n</code></pre> <p>Compile And Run  </p> <pre><code>[root@VM_0_29_centos opentenbase]# go build conn.go \n[root@VM_0_29_centos opentenbase]# ./conn \nTime\uff1a 2018-04-03 20:40:48\nLog level\uff1a Log\nDetails\uff1a Connected to database successful\uff01\n</code></pre>"},{"location":"en/guide/02-access/#62create-table","title":"6.2\u3001Create table","text":"<pre><code>package main\n\nimport (\n    \"fmt\"\n    \"time\"\n\n    \"github.com/jackc/pgx\"\n)\n\nfunc main() {\n    var error_msg string\n    var sql string\n\n    //Connect database\n    conn, err := db_connect()\n    if err != nil {\n        error_msg = \"Failed to connect database\uff0cdetails: \" + err.Error()\n        write_log(\"Error\", error_msg)\n        return\n    }\n    //Close connection\n    defer conn.Close()\n    write_log(\"Log\", \"Connected to database successful!\")\n\n    //Create table\n    sql = \"create table public.opentenbase(id varchar(20),nickname varchar(100)) distribute by shard(id) to group  default_group;\"\n    _, err = conn.Exec(sql)\n    if err != nil {\n        error_msg = \"Failed to create table: \" + err.Error()\n        write_log(\"Error\", error_msg)\n        return\n    } else {\n        write_log(\"Log\", \"Create table successful!\")\n    }\n}\n\n/*\nFunction\uff1a Write log process\n\nParameter\uff1a\nlog_level -- level of log\uff0conly `Error` or `Log`\nerror_msg -- content of log\n\nReturn\uff1anone\n*/\n\nfunc write_log(log_level string, error_msg string) {\n    //print error message\n    fmt.Println(\"Time\uff1a\", time.Now().Format(\"2006-01-02 15:04:05\"))\n    fmt.Println(\"Log level\uff1a\", log_level)\n    fmt.Println(\"Details\uff1a\", error_msg)\n}\n\n/*\nFunction\uff1aConnect database\n\nParameter\uff1anone\n\nReturn\uff1a\nconn *pgx.Conn -- connection information\nerr error -- error message\n\n*/\n\nfunc db_connect() (conn *pgx.Conn, err error) {\n    var config pgx.ConnConfig\n    config.Host = \"127.0.0.1\"    //localhost or ip\n    config.User = \"opentenbase\"         //username\n    config.Password = \"pgsql\"    //password\n    config.Database = \"postgres\" //database name\n    config.Port = 15432          //port\n    conn, err = pgx.Connect(config)\n    return conn, err\n}\n</code></pre> <pre><code>[root@VM_0_29_centos opentenbase]# go run createtable.go \nTime\uff1a 2018-04-03 20:50:24\nLog level\uff1a Log\nDetails\uff1a Connected to database successful\uff01\nTime\uff1a 2018-04-03 20:50:24\nLog level\uff1a Log\nDetails\uff1a Create table successful!\n</code></pre>"},{"location":"en/guide/02-access/#63insert-data","title":"6.3\u3001Insert data","text":"<pre><code>package main\n\nimport (\n    \"fmt\"\n    \"strings\"\n    \"time\"\n\n    \"github.com/jackc/pgx\"\n)\n\nfunc main() {\n    var error_msg string\n    var sql string\n    var nickname string\n\n    //Connect database\n    conn, err := db_connect()\n    if err != nil {\n        error_msg = \"Failed to connect database\uff0cdetails: \" + err.Error()\n        write_log(\"Error\", error_msg)\n        return\n    }\n    //Close connection\n    defer conn.Close()\n    write_log(\"Log\", \"Connected to database successful!\")\n\n    //Insert data\n    sql = \"insert into public.opentenbase values('1','opentenbase'),('2','pgxz');\"\n    _, err = conn.Exec(sql)\n    if err != nil {\n        error_msg = \"Failed to insert data, details: \" + err.Error()\n        write_log(\"Error\", error_msg)\n        return\n    } else {\n        write_log(\"Log\", \"Insert data successful!\")\n    }\n\n    //Bind variables to insert data, no need to do anti-injection processing\n    sql = \"insert into public.opentenbase values($1,$2),($1,$3);\"\n    _, err = conn.Exec(sql, \"3\", \"postgresql\", \"postgres\")\n    if err != nil {\n        error_msg = \"Failed to insert data, details: \" + err.Error()\n        write_log(\"Error\", error_msg)\n        return\n    } else {\n        write_log(\"Log\", \"Insert data successful!\")\n    }\n\n    //Splice sql statement to insert data, need to do anti-injection processing\n    nickname = \"OpenTenBase is ' good!\"\n    sql = \"insert into public.opentenbase values('1','\" + sql_data_encode(nickname) + \"')\"\n    _, err = conn.Exec(sql)\n    if err != nil {\n        error_msg = \"Failed to insert data, details: \" + err.Error()\n        write_log(\"Error\", error_msg)\n        return\n    } else {\n        write_log(\"Log\", \"Insert data successful!\")\n    }\n}\n\n/*\nFunction\uff1aSQL query concatenation string encoding\n\nParameter\uff1a\nstr -- The string to be encode\n\nReturn\uff1a\nReturn encoded string\n\n*/\n\nfunc sql_data_encode(str string) string {\n    return strings.Replace(str, \"'\", \"''\", -1)\n}\n\n/*\nFunction\uff1aWrite log process\n\nParameter\uff1a\nlog_level -- level of log\uff0conly `Error` or `Log`\nerror_msg -- content of log\n\nReturn\uff1anone\n*/\n\nfunc write_log(log_level string, error_msg string) {\n    //print error message\n    fmt.Println(\"Time\uff1a\", time.Now().Format(\"2006-01-02 15:04:05\"))\n    fmt.Println(\"Log level\uff1a\", log_level)\n    fmt.Println(\"Details\uff1a\", error_msg)\n}\n\n/*\nFunction\uff1aConnect database\n\nParameter\uff1anone\n\nReturn\uff1a\nconn *pgx.Conn -- connection information\nerr error -- error message\n\n*/\n\nfunc db_connect() (conn *pgx.Conn, err error) {\n    var config pgx.ConnConfig\n    config.Host = \"127.0.0.1\"    //localhost or ip\n    config.User = \"opentenbase\"         //username\n    config.Password = \"pgsql\"    //password\n    config.Database = \"postgres\" //database name\n    config.Port = 15432          //port\n    conn, err = pgx.Connect(config)\n    return conn, err\n}\n</code></pre> <pre><code>[root@VM_0_29_centos opentenbase]# go run insert.go \nTime\uff1a 2018-04-03 21:05:51\nLog level\uff1a Log\nDetails\uff1a Connected to database successful\uff01\nTime\uff1a 2018-04-03 21:05:51\nLog level\uff1a Log\nDetails\uff1a Insert data successful!\nTime\uff1a 2018-04-03 21:05:51\nLog level\uff1a Log\nDetails\uff1a Insert data successful!\nTime\uff1a 2018-04-03 21:05:51\nLog level\uff1a Log\nDetails\uff1a Insert data successful!\n</code></pre>"},{"location":"en/guide/02-access/#64query-data","title":"6.4\u3001Query data","text":"<pre><code>package main\n\nimport (\n    \"fmt\"\n    \"strings\"\n    \"time\"\n\n    \"github.com/jackc/pgx\"\n)\n\nfunc main() {\n    var error_msg string\n    var sql string\n\n    //Connect database\n    conn, err := db_connect()\n    if err != nil {\n        error_msg = \"Failed to connect database\uff0cdetails: \" + err.Error()\n        write_log(\"Error\", error_msg)\n        return\n    }\n    //Close connection\n    defer conn.Close()\n    write_log(\"Log\", \"Connected to database successful!\")\n\n    sql = \"SELECT id,nickname FROM public.opentenbase LIMIT 2\"\n    rows, err := conn.Query(sql)\n    if err != nil {\n        error_msg = \"Failed to query data, details: \" + err.Error()\n        write_log(\"Error\", error_msg)\n        return\n    } else {\n        write_log(\"Log\", \"Query data successful!\")\n    }\n\n    var nickname string\n    var id string\n\n    for rows.Next() {\n        err = rows.Scan(&amp;id, &amp;nickname)\n        if err != nil {\n            error_msg = \"Failed to query data, details: \" + err.Error()\n            write_log(\"Error\", error_msg)\n            return\n        }\n        error_msg = fmt.Sprintf(\"id\uff1a%s nickname\uff1a%s\", id, nickname)\n        write_log(\"Log\", error_msg)\n    }\n    rows.Close()\n\n    nickname = \"opentenbase\"\n\n    sql = \"SELECT id,nickname FROM public.opentenbase WHERE nickname ='\" + sql_data_encode(nickname) + \"' \"\n    rows, err = conn.Query(sql)\n    if err != nil {\n        error_msg = \"Failed to query data, details: \" + err.Error()\n        write_log(\"Error\", error_msg)\n        return\n    } else {\n        write_log(\"Log\", \"Query data successful!\")\n    }\n    defer rows.Close()\n\n    for rows.Next() {\n        err = rows.Scan(&amp;id, &amp;nickname)\n        if err != nil {\n            error_msg = \"Failed to query data, details: \" + err.Error()\n            write_log(\"Error\", error_msg)\n            return\n        }\n        error_msg = fmt.Sprintf(\"id\uff1a%s nickname\uff1a%s\", id, nickname)\n        write_log(\"Log\", error_msg)\n    }\n}\n\n/*\nFunction\uff1aSQL query concatenation string encoding\n\nParameter\uff1a\nstr -- The string to be encode\n\nReturn\uff1a\nReturn encoded string\n\n*/\n\nfunc sql_data_encode(str string) string {\n    return strings.Replace(str, \"'\", \"''\", -1)\n}\n\n/*\nFunction\uff1aWrite log process\n\nParameter\uff1a\nlog_level -- level of log\uff0conly `Error` or `Log`\nerror_msg -- content of log\n\nReturn\uff1anone\n*/\n\nfunc write_log(log_level string, error_msg string) {\n    //print error message\n    fmt.Println(\"Time\uff1a\", time.Now().Format(\"2006-01-02 15:04:05\"))\n    fmt.Println(\"Log level\uff1a\", log_level)\n    fmt.Println(\"Details\uff1a\", error_msg)\n}\n\n/*\nFunction\uff1aConnect database\n\nParameter\uff1anone\n\nReturn\uff1a\nconn *pgx.Conn -- connection information\nerr error -- error message\n\n*/\n\nfunc db_connect() (conn *pgx.Conn, err error) {\n    var config pgx.ConnConfig\n    config.Host = \"127.0.0.1\"    //localhost or ip\n    config.User = \"opentenbase\"         //username\n    config.Password = \"pgsql\"    //password\n    config.Database = \"postgres\" //database name\n    config.Port = 15432          //port\n    conn, err = pgx.Connect(config)\n    return conn, err\n}\n</code></pre> <pre><code>[root@VM_0_29_centos opentenbase]# go run select.go\nTime\uff1a 2018-04-09 10:35:50\nLog level\uff1a Log\nDetails\uff1a Connected to database successful\uff01\nTime\uff1a 2018-04-09 10:35:50\nLog level\uff1a Log\nDetails\uff1a Query data successful!\nTime\uff1a 2018-04-09 10:35:50\nLog level\uff1a Log\nDetails\uff1a id\uff1a2 nickname\uff1aopentenbase\nTime\uff1a 2018-04-09 10:35:50\nLog level\uff1a Log\nDetails\uff1a id\uff1a3 nickname\uff1apostgresql\nTime\uff1a 2018-04-09 10:35:50\nLog level\uff1a Log\nDetails\uff1a Query data successful!\nTime\uff1a 2018-04-09 10:35:50\nLog level\uff1a Log\nDetails\uff1a id\uff1a1 nickname\uff1aopentenbase\n</code></pre>"},{"location":"en/guide/02-access/#65copy-stream-data-into-table","title":"6.5\u3001Copy Stream data into table","text":"<pre><code>package main\n\nimport (\n    \"fmt\"\n    \"math/rand\"\n    \"time\"\n\n    \"github.com/jackc/pgx\"\n)\n\nfunc main() {\n    var error_msg string\n\n    //Connect database\n    conn, err := db_connect()\n    if err != nil {\n        error_msg = \"Failed to connect database\uff0cdetails: \" + err.Error()\n        write_log(\"Error\", error_msg)\n        return\n    }\n    //Close connection\n    defer conn.Close()\n    write_log(\"Log\", \"Connected to database successful!\")\n\n    //create 5000 data\n    inputRows := [][]interface{}{}\n    var id string\n    var nickname string\n    for i := 0; i &lt; 5000; i++ {\n        id = fmt.Sprintf(\"%d\", rand.Intn(10000))\n        nickname = fmt.Sprintf(\"%d\", rand.Intn(10000))\n        inputRows = append(inputRows, []interface{}{id, nickname})\n    }\n    copyCount, err := conn.CopyFrom(pgx.Identifier{\"opentenbase\"}, []string{\"id\", \"nickname\"}, pgx.CopyFromRows(inputRows))\n    if err != nil {\n        error_msg = \"Failed to use copyfrom, details: \" + err.Error()\n        write_log(\"Error\", error_msg)\n        return\n    }\n    if copyCount != len(inputRows) {\n        error_msg = fmt.Sprintf(\"Failed to use copyfrom\uff0ccopy lines\uff1a%d Return lines\uff1a%d\", len(inputRows), copyCount)\n        write_log(\"Error\", error_msg)\n        return\n    } else {\n        error_msg = \"Copy successful!\"\n        write_log(\"Log\", error_msg)\n    }\n\n}\n\n/*\nFunction\uff1aWrite log process\n\nParameter\uff1a\nlog_level -- level of log\uff0conly `Error` or `Log`\nerror_msg -- content of log\n\nReturn\uff1anone\n*/\n\nfunc write_log(log_level string, error_msg string) {\n    //print error message\n    fmt.Println(\"Time\uff1a\", time.Now().Format(\"2006-01-02 15:04:05\"))\n    fmt.Println(\"Log level\uff1a\", log_level)\n    fmt.Println(\"Details\uff1a\", error_msg)\n}\n\n/*\nFunction\uff1aConnect database\n\nParameter\uff1anone\n\nReturn\uff1a\nconn *pgx.Conn -- connection information\nerr error -- error message\n\n*/\n\nfunc db_connect() (conn *pgx.Conn, err error) {\n    var config pgx.ConnConfig\n    config.Host = \"127.0.0.1\"    //localhost or ip\n    config.User = \"opentenbase\"         //username\n    config.Password = \"pgsql\"    //password\n    config.Database = \"postgres\" //database name\n    config.Port = 15432          //port\n    conn, err = pgx.Connect(config)\n    return conn, err\n}\n</code></pre> <pre><code>[root@VM_0_29_centos opentenbase]# go run copy_from.go \nTime\uff1a 2018-04-09 10:36:40\nLog level\uff1a Log\nDetails\uff1a Connected to database successful\uff01\nTime\uff1a 2018-04-09 10:36:40\nLog level\uff1a Log\nDetails\uff1a Copy successful!\n</code></pre>"},{"location":"en/guide/02-access/#66packages-for-golang","title":"6.6\u3001Packages for golang","text":"<p>Needs to clone from git: https://github.com/jackc/pgx https://github.com/pkg/errors  </p>"},{"location":"en/guide/03-basic-use/","title":"Basic Usage","text":"<p>In Quick Start article, we introduced opentenbase architecture, source code compilation and installation, cluster running status, startup and stop, etc.</p> <p>This article will introduce the creation of shard table, replication table and basic DML operation in opentenbase.</p>"},{"location":"en/guide/03-basic-use/#1create-table","title":"1\u3001Create table","text":""},{"location":"en/guide/03-basic-use/#11create-shard-table","title":"1.1\u3001Create shard table","text":"<p>  Explain\uff1a </p> <ul> <li>distribute by shard (x) is used to specify the distribution key. Based on the value of this field, calculate which node the partition data is distributed to . </li> <li>to group XXX is used to specify storage groups (each storage group can have multiple nodes).</li> <li>distribution key field value cannot be modified, field length cannot be modified, and field type cannot be modified. </li> </ul>"},{"location":"en/guide/03-basic-use/#12create-partition-shard-table","title":"1.2\u3001Create partition shard table","text":"<pre><code>[opentenbase@VM_0_37_centos shell]$ psql -h 172.16.0.42 -p 11387 -d postgres -U opentenbase\npsql (PostgreSQL 10.0 opentenbase V2)\nType \"help\" for help.\n\npostgres=# create table public.t1_pt\n(\nf1 int not null,\nf2 timestamp not null,\nf3 varchar(20),\nprimary key(f1)\n) \npartition by range (f2) \nbegin (timestamp without time zone '2019-01-01 0:0:0') \nstep (interval '1 month') partitions (3) \ndistribute by shard(f1) \nto group default_group;\n\nCREATE TABLE\npostgres=#\n\npostgres=# \\d+ public.t1_pt\n                                             Table \"public.t1_pt\"\n Column |            Type             | Collation | Nullable | Default | Storage  | Stats target | Description \n--------+-----------------------------+-----------+----------+---------+----------+--------------+-------------\n f1     | integer                     |           | not null |         | plain    |              | \n f2     | timestamp without time zone |           | not null |         | plain    |              | \n f3     | character varying(20)       |           |          |         | extended |              | \nIndexes:\n    \"t1_pt_pkey\" PRIMARY KEY, btree (f1)\nDistribute By: SHARD(f1)\nLocation Nodes: ALL DATANODES\nPartition By: RANGE(f2)\n         # Of Partitions: 3\n         Start With: 2019-01-01\n         Interval Of Partition: 1 MONTH\n\npostgres=#  \n\n</code></pre> <p>Explain\uff1a</p> <ul> <li>partition by range (x) is used to specify the partition key. It supports the type of timesamp and int. according to this field value, it calculates which sub table the partition data is distributed in.</li> <li>begin( xxx ) is used to specifies the time point to start the partition\u3002</li> <li>step(xxx) is used to specified partition has period</li> <li>partions(xx) is used to establish the number of partition sub tables during initialization.</li> <li>Method of adding partition sub table: ALTER TABLE public.t1_pt ADD PARTITIONS 2;  </li> </ul>"},{"location":"en/guide/03-basic-use/#13create-repilication-table","title":"1.3\u3001Create repilication table","text":"<pre><code>\n[opentenbase@VM_0_37_centos shell]$ psql -h 172.16.0.42 -p 11387 -d postgres -U opentenbase\npsql (PostgreSQL 10.0 opentenbase V2)\nType \"help\" for help.\n\npostgres=# create table public.t1_rep\n(\nf1 int not null,\nf2 varchar(20),\nprimary key(f1)\n) \ndistribute by replication ;\nto group default_group;\nCREATE TABLE\n\n</code></pre> <p>Explain\uff1a</p> <ul> <li>Replication tables can be considered for small data scales that often need to join across nodes</li> <li>Replication table means that every DN has full data, which is not suitable for large data tables.</li> <li>Replication table update performance is low.  </li> </ul>"},{"location":"en/guide/03-basic-use/#2dml-related-operations","title":"2\u3001DML related operations","text":""},{"location":"en/guide/03-basic-use/#21insert","title":"2.1\u3001INSERT","text":"<ul> <li>Insert multiple records</li> </ul> <pre><code>CREATE TABLE public.t1_insert_mul \n( \n    f1 int not null,\n    f2 varchar(20),\n    primary key(f1) \n)  distribute by shard(f1) to group default_group;  \n\npostgres=# INSERT INTO  t1_insert_mul VALUES(1,'opentenbase'),(2,'pg'); \nINSERT 0 2\n\n</code></pre> <ul> <li>Insert for updating</li> </ul> <pre><code>create table public.t1_conflict \n( \n    f1 int not null,\n    f2 varchar(20),\n    primary key(f1) \n)  distribute by shard(f1) to group default_group;   \n\ninsert into t1_conflict values(1,'opentenbase') ON CONFLICT (f1)  DO UPDATE SET f2 = 'opentenbase';\n\ncreate table public.t1_conflict \n( \n    f1 int not null,\n    f2 varchar(20) not null,\n    f3 int ,\n    primary key(f1,f2) \n) distribute by shard(f1) to group default_group;      \n\ninsert into t1_conflict values(1,'opentenbase',2) ON CONFLICT (f1,f2)  DO UPDATE SET f3 = 2;\n\n</code></pre> <ul> <li>Insert for returning</li> </ul> <pre><code>create table public.t1_insert_return \n( \n    f1 int not null,\n    f2 varchar(20) not null default 'opentenbase',\n    primary key(f1) \n) distribute by shard(f1) to group default_group;    \n\npostgres=# insert into t1_insert_return values(1) returning *;  \n\n f1 |  f2    \n----+-------  \n  1 | opentenbase \n (1 row) \n INSERT 0 1\n\n</code></pre> <ul> <li>For more usage of insert, please refer to PostgreSQL usage</li> </ul> <pre><code>http://www.postgres.cn/docs/10/sql-insert.html\n</code></pre>"},{"location":"en/guide/03-basic-use/#22update","title":"2.2\u3001UPDATE","text":"<ul> <li>Update based on distribution key condition</li> </ul> <pre><code>create table public.t1_update_pkey \n( \n    f1 int not null,\n    f2 varchar(20) not null default 'opentenbase',\n    f3 varchar(32), \n    primary key(f1) \n) distribute by shard(f1) to group default_group;   \n\npostgres=# explain UPDATE t1_update_pkey SET f2='opentenbase' where f1=1;                                                \n\n                                    QUERY PLAN\n----------------------------------------------------------------------------------  \nRemote Fast Query Execution  (cost=0.00..0.00 rows=0 width=0)    \n        Node/s: dn001    \n        -&gt;  Update on t1_update_pkey  (cost=0.15..4.17 rows=1 width=154)          \n        -&gt;  Index Scan using t1_update_pkey_pkey on t1_update_pkey  (cost=0.15..4.17 rows=1 width=154)                \n            Index Cond: (f1 = 1) \n\n</code></pre> <p>Best performance, good scalability</p> <ul> <li>Update based on non-distribution key condition</li> </ul> <pre><code>postgres=# explain UPDATE t1_update_pkey SET f2='opentenbase' where f3='pg';                                                                              QUERY PLAN \n----------------------------------------------------------------------------------    \nRemote Fast Query Execution  (cost=0.00..0.00 rows=0 width=0)    \n    Node/s: dn001, dn002    \n    -&gt;  Update on t1_update_pkey  (cost=0.00..15.12 rows=2 width=154)          \n        -&gt;  Seq Scan on t1_update_pkey  (cost=0.00..15.12 rows=2 width=154)\n            Filter: ((f3)::text = 'pg'::text) \n(5 rows) \n\n</code></pre> <p>UPDATE statement will send to all nodes.</p> <ul> <li>Update partition table based on partition condition</li> </ul> <pre><code>create table public.t1_pt_update \n(  f1 int not null,f2 timestamp not null,f3 varchar(20),primary key(f1)  )  \npartition by range (f2) begin (timestamp without time zone '2019-01-01 0:0:0') step (interval '1 month') partitions (2) distribute by shard(f1) to group default_group; \n\npostgres=# explain update t1_pt_update set f3='opentenbase' where f1=1 and f2&gt;'2019-01-01' and f2&lt;'2019-02-01';                                                                                                                       QUERY PLAN\n-----------------------------------------------------------------------------------\nRemote Fast Query Execution  (cost=0.00..0.00 rows=0 width=0)    \n        Node/s: dn001    \n    -&gt;  Update on t1_pt_update_part_0  (cost=0.15..4.17 rows=1 width=80)          \n        -&gt;  Index Scan using t1_pt_update_pkey_part_0 on t1_pt_update_part_0  (cost=0.15..4.17 rows=1 width=80)                \n            Index Cond: (f1 = 1)                \n            Filter: ((f2 &gt; '2019-01-01 00:00:00'::timestamp without time zone) AND (f2 &lt; '2019-02-01 00:00:00'::timestamp without time zone)) \n</code></pre> <p>Update based on partition condition\uff0cbest performance, good scalability</p> <ul> <li>Update partition table without partition condition</li> </ul> <pre><code>postgres=# explain update t1_pt_update set f3='opentenbase' where f1=1;                                                                                                               QUERY PLAN\n------------------------------------------------------------------------------------\nRemote Fast Query Execution  (cost=0.00..0.00 rows=0 width=0)    \n    Node/s: dn001    \n    -&gt;  Update on t1_pt_update  (cost=0.15..4.17 rows=1 width=80)          \n        -&gt;  Index Scan using t1_pt_update_pkey_part_0 on t1_pt_update (partition sequence: 0, name: t1_pt_update_part_0)  (cost=0.15..2.08 rows=0 width=80)                \n            Index Cond: (f1 = 1)          \n        -&gt;  Index Scan using t1_pt_update_pkey_part_1 on t1_pt_update (partition sequence: 1, name: t1_pt_update_part_1)  (cost=0.15..2.08 rows=0 width=80)               \n            Index Cond: (f1 = 1) \n(7 rows) \n\n</code></pre> <p>All partition sub tables need to be scanned</p> <ul> <li>Table association update</li> </ul> <pre><code>create table public.t1_update_join1 \n(\n    f1 int not null,f2 varchar(20) not null default 'opentenbase',primary key(f1) \n)\ndistribute by shard(f1) to group default_group;\n\ncreate table public.t1_update_join2 \n( \n    f1 int not null,f2 varchar(20) not null default 'opentenbase',primary key(f1) \n) \ndistribute by shard(f1) to group default_group; \n\nupdate t1_update_join1 set f2='pg' from t1_update_join2 where t1_update_join1.f1=t1_update_join2.f1;  \n\n</code></pre> <p>Table Association updates can only be based on distribution key associations</p> <ul> <li>Distribution key, partition key cannot be updated</li> </ul> <pre><code>create table public.t1_update_pkey \n( \n    f1 int not null,f2 varchar(20) not null default 'opentenbase', primary key(f1) \n) distribute by shard(f1) to group default_group;   \n\npostgres=# update t1_update_pkey set f1=2 where f1=1;  \nERROR:  Distributed column or partition column \"f1\" can't be updated in current version \nTime: 0.910 ms. \n\n</code></pre> <p>The current solution is \"delete old records and add new records\" </p> <ul> <li>Please refer to PostgreSQL for more usage of UPDATE</li> </ul> <pre><code>http://www.postgres.cn/docs/10/sql-update.html\n</code></pre>"},{"location":"en/guide/03-basic-use/#23delete","title":"2.3\u3001DELETE","text":"<ul> <li>Return deleted records when deleting</li> </ul> <pre><code>create table public.t1_delete_return \n( \n    f1 int not null,f2 varchar(20) not null default 'opentenbase',primary key(f1) \n) \ndistribute by shard(f1) to group default_group;    \n\npostgres=# insert into t1_delete_return values(1,'opentenbase');   \nINSERT 0 1 \n\npostgres=# delete from t1_delete_return where f1=1 returning *;     \n\n f1 |  f2    \n----+-------   \n  1 | opentenbase \n(1 row)\n\n</code></pre> <ul> <li> <p>The optimal usage of update is also suitable for delete</p> </li> <li> <p>Please refer to PostgreSQL for more usage of DELETE</p> </li> </ul> <pre><code>http://www.postgres.cn/docs/10/sql-delete.html\n</code></pre>"},{"location":"en/guide/03-basic-use/#24select","title":"2.4\u3001SELECT","text":"<ul> <li>Select based on distributed key</li> </ul> <pre><code>create table public.t1_select \n( \n    f1 int not null,f2 varchar(20) not null default 'opentenbase',f3 varchar(32), primary key(f1) \n) \ndistribute by shard(f1) to group default_group;   \n\npostgres=# explain select * from t1_select where f1=1;                                                                          QUERY PLAN\n----------------------------------------------------------------------------------  \nRemote Fast Query Execution  (cost=0.00..0.00 rows=0 width=0)    \n    Node/s: dn001    \n    -&gt;  Index Scan using t1_select_pkey on t1_select  (cost=0.15..4.17 rows=1 width=144)          \n            Index Cond: (f1 = 1)\n\n</code></pre> <p>best performance, good scalability</p> <ul> <li>Select based on non-distributed key</li> </ul> <pre><code>postgres=# explain select * from t1_select where f1&lt;3;\n                                    QUERY PLAN\n-------------------------------------------------------------------------------------  \nRemote Fast Query Execution  (cost=0.00..0.00 rows=0 width=0)   \n    Node/s: dn001, dn002   \n    -&gt;  Bitmap Heap Scan on t1_select  (cost=3.21..14.92 rows=137 width=144)          \n        Recheck Cond: (f1 &lt; 3)          \n        -&gt;  Bitmap Index Scan on t1_select_pkey  (cost=0.00..3.17 rows=137 width=0)\n            Index Cond: (f1 &lt; 3)\n\n</code></pre> <p>The query statement will be sent to all nodes and then summarized in CN.</p> <ul> <li>Join query based on distributed key</li> </ul> <pre><code>create table public.t1_select_join1 \n(   f1 int not null,f2 int,primary key(f1)  ) \ndistribute by shard(f1) to group default_group;  \n\ncreate index t1_select_join1_f2_idx on t1_select_join1(f2); \n\ncreate table public.t1_select_join2 \n(  f1 int not null,f2 int,primary key(f1)  ) \ndistribute by shard(f1) to group default_group;  \n\ncreate index t1_select_join2_f2_idx on t1_select_join2(f2);   \n\npostgres=# explain select t1_select_join1.* from t1_select_join1,t1_select_join2 where t1_select_join1.f1=t1_select_join2.f1 and t1_select_join1.f1=1;   \n                                    QUERY PLAN                                                   --------------------------------------------------------------------------------------\nRemote Fast Query Execution  (cost=0.00..0.00 rows=0 width=0)   \n    Node/s: dn001    \n    -&gt;  Nested Loop  (cost=0.30..8.35 rows=1 width=8)          \n        -&gt;  Index Scan using t1_select_join1_pkey on t1_select_join1  (cost=0.15..4.17 rows=1 width=8)                \n            Index Cond: (f1 = 1)          \n        -&gt;  Index Only Scan using t1_select_join2_pkey on t1_select_join2  (cost=0.15..4.17 rows=1 width=4)                \n            Index Cond: (f1 = 1) \n\n</code></pre> <p>best performance, good scalability</p> <ul> <li>Join query based on non-distributed key</li> </ul> <pre><code>postgres=# explain select * from t1_select_join1,t1_select_join2 where t1_select_join1.f1=t1_select_join2.f2 and t1_select_join1.f2=1 ;                                                       \n                                    QUERY PLAN                                                       ------------------------------------------------------------------------------------------  \nRemote Subquery Scan on all (dn001,dn002)  (cost=2.26..33.48 rows=7 width=16)    \n    -&gt;  Nested Loop  (cost=2.26..33.48 rows=7 width=16)          \n        -&gt;  Bitmap Heap Scan on t1_select_join1  (cost=2.13..9.57 rows=7 width=8)                               Recheck Cond: (f2 = 1)                \n            -&gt;  Bitmap Index Scan on t1_select_join1_f2_idx  (cost=0.00..2.13 rows=7 width=0)                      \n                    Index Cond: (f2 = 1)          \n        -&gt;  Materialize  (cost=100.12..103.45 rows=7 width=8)                \n            -&gt;  Remote Subquery Scan on all (dn001,dn002)  (cost=100.12..103.44 rows=7 width=8)                      \n                    Distribute results by S: f2                      \n            -&gt;  Index Scan using t1_select_join2_f2_idx on t1_select_join2  (cost=0.12..3.35 rows=7 width=8)                            \n                Index Cond: (f2 = t1_select_join1.f1) \n\n</code></pre> <p>Need to redistribute data in DN.</p>"},{"location":"en/guide/03-basic-use/#25truncate","title":"2.5\u3001TRUNCATE","text":"<ul> <li>Truncate of non-partition table</li> </ul> <pre><code>create table public.t1_delete_truncate \n( f1 int not null,f2 varchar(20) not null default 'opentenbase',primary key(f1) ) \ndistribute by shard(f1) to group default_group; \n\ninsert into t1_delete_truncate select t,t::text from generate_series(1,1000000) as t; \n\ntruncate table t1_delete_truncate;  \n</code></pre> <ul> <li>Truncate of partition table</li> </ul> <pre><code>postgres=# create table public.t1_pt\n(\nf1 int not null,\nf2 timestamp not null,\nf3 varchar(20),\nprimary key(f1)\n) \npartition by range (f2) \nbegin (timestamp without time zone '2019-01-01 0:0:0') \nstep (interval '1 month') partitions (3) \ndistribute by shard(f1) \nto group default_group;\n\ntruncate public.t1_pt partition for  ('2019-01-01' ::timestamp without time zone); \n</code></pre>"},{"location":"en/guide/07-user-rights/","title":"User Management","text":""},{"location":"en/guide/07-user-rights/#create-user","title":"Create User","text":""},{"location":"en/guide/07-user-rights/#create-regular-user","title":"Create Regular User","text":"<p>Using the administrator \"opentenbase\" to connect to a specific \"cn\" node, the following operations are the same:</p> <pre><code>[opentenbase@VM_0_29_centos ~]$ psql -h 172.16.0.29 -U opentenbase -d postgres -p 15432\npsql (PostgreSQL 10.0 opentenbase V2)\nType \"help\" for help.\n\npostgres=# create role user1 with login password 'user1@123';\nCREATE ROLE\n</code></pre> <p>Explanation:</p> <ul> <li>The above command creates a user named <code>user1</code> with specified attributes using the <code>with</code> clause.</li> <li><code>login</code> specifies that the user can log in.</li> <li>password  'user1@123' specifies the user's password. </li> </ul>"},{"location":"en/guide/07-user-rights/#create-an-administrator-user","title":"Create an administrator user","text":"<pre><code>[opentenbase@VM_0_29_centos ~]$ psql -h 172.16.0.29 -U opentenbase -d postgres -p 15432\npsql (Postgr\neSQL 10.0 opentenbase V2)\nType \"help\" for help.\n\npostgres=# create role opentenbaseadmin with login password 'opentenbaseadmin @123' superuser;\nCREATE ROLE\n</code></pre> <p>Explanation:</p> <ul> <li><code>with superuser</code> specifies that this user is an administrator </li> </ul>"},{"location":"en/guide/07-user-rights/#additional-user-attribute-configuration","title":"Additional User Attribute Configuration","text":"<pre><code>[opentenbase@VM_0_29_centos ~]$ psql -h 172.16.0.29 -U opentenbase -d postgres -p 15432\npsql (PostgreSQL 10.0 opentenbase V2)\nType \"help\" for help.\n\npostgres=# create role user1 with login password 'user1@123' createdb createrole replication CONNECTION LIMIT 100 VALID UNTIL '2023-09-30 23:59:59';\nCREATE ROLE\n</code></pre> <p>Explanation:</p> <ul> <li><code>createdb</code> specifies that the user can create databases</li> <li><code>createrole</code>specifies that the user can create other users.</li> <li><code>replication</code>specifies that the user can be used for data synchronization replication.</li> <li><code>CONNECTION LIMIT 100</code>indicates that the user's maximum connection limit is 100. Note that connections between opentenbase dn nodes will also connect to each other; <code>-1</code> (default) indicates no limit.</li> <li><code>VALID UNTIL '2023-09-30 23:59:59'</code>ndicates the expiration time for the user's password,Use <code>VALID UNTIL 'infinity'</code> to make a password valid indefinitely.</li> </ul>"},{"location":"en/guide/07-user-rights/#modify-user-attributes","title":"Modify User Attributes","text":""},{"location":"en/guide/07-user-rights/#disallow-user-login","title":"Disallow User Login","text":"<pre><code>[opentenbase@VM_0_29_centos ~]$ psql -h 172.16.0.29 -U opentenbase -d postgres -p 15432\npsql (PostgreSQL 10.0 opentenbase V2)\nType \"help\" for help.\n\npostgres=# alter role user1 with nologin ;\nALTER ROLE\n\npostgres=# alter role user1 with login ;\nALTER ROLE\n</code></pre>"},{"location":"en/guide/07-user-rights/#set-user-as-administrator-and-non-administrator","title":"Set User as Administrator and Non-Administrator","text":"<pre><code>[opentenbase@VM_0_29_centos ~]$ psql -h 172.16.0.29 -U opentenbase -d postgres -p 15432\npsql (PostgreSQL 10.0 opentenbase V2)\nType \"help\" for help.\n\npostgres=#  alter role user1 with superuser ;\nALTER ROLE\n\npostgres=#  alter role user1 with nosuperuser ;\nALTER ROLE\n</code></pre>"},{"location":"en/guide/07-user-rights/#user-connection-limit","title":"User Connection Limit","text":"<pre><code>[opentenbase@VM_0_29_centos  ~]$ psql -h 172.16.0.29 -U opentenbase -d postgres -p 15432\npsql (PostgreSQL 10.0 opentenbase V2)\nType \"help\" for help.\n\npostgres=# alter role user1 with CONNECTION LIMIT 100;\nALTER ROLE\n\npostgres=# alter role user1 with CONNECTION LIMIT -1; \nALTER ROLE\n</code></pre> <p>Explanation:</p> <ul> <li><code>CONNECTION LIMIT 100</code> indicates that the user's maximum connection limit is 100. Note that connections between opentenbase dn nodes will also connect to each other; <code>-1</code> (default) indicates no limit.</li> </ul>"},{"location":"en/guide/07-user-rights/#set-user-password-expiry-time","title":"Set User Password Expiry Time","text":"<pre><code>[opentenbase@VM_0_29_centos ~]$ psql -h 172.16.0.29 -U opentenbase -d postgres -p 15432\npsql (PostgreSQL 10.0 opentenbase V2)\nType \"help\" for help.\n\npostgres=# alter role user1 with VALID UNTIL '2023-09-30 23:59:59';\nALTER ROLE\n\npostgres=# alter role user1 with VALID UNTIL 'infinity'; \nALTER ROLE\n</code></pre> <p>Explanation:</p> <ul> <li><code>VALID UNTIL '2023-09-30 23:59:59'</code>indicates the expiration time for the user's password. Use <code>VALID UNTIL 'infinity'</code>  to make a password valid indefinitely.</li> </ul>"},{"location":"en/guide/07-user-rights/#change-user-password","title":"Change User Password","text":"<pre><code>[opentenbase@VM_0_29_centos ~]$ psql -h 172.16.0.29 -U opentenbase -d postgres -p 15432\npsql (PostgreSQL 10.0 opentenbase V2)\nType \"help\" for help.\n\n--Password modification method one\npostgres=# role user1 with password 'user1@123' ;\nALTER ROLE\n\n\n--Password modification method two\npostgres=# \\password user1\nEnter new password: \nEnter it again: \npostgres=#  \n</code></pre> <p>Enter the new password twice. Changing the password using <code>\\password</code> is more secure because the password information is not recorded in the log file.  </p>"},{"location":"en/guide/07-user-rights/#additional-user-attribute-configuration_1","title":"Additional User Attribute Configuration","text":"<pre><code>[opentenbase@VM_0_29_centos  ~]$ psql -h 172.16.0.29 -U opentenbase -d postgres -p 15432\npsql (PostgreSQL 10.0 opentenbase V2)\nType \"help\" for help.\n\npostgres=# alter role user1 with createdb createrole replication;\nCREATE ROLE\n\npostgres=# alter role user1 with nocreatedb nocreaterole noreplication ;\nCREATE ROLE\n</code></pre> <p>Explanation:</p> <ul> <li><code>createdb/nocreatedb</code> specifies whether the user can create databases.</li> <li><code>createrole/nocreaterole</code> specifies whether the user can create other users.</li> <li><code>replication/nocreaterole</code>specifies whether the user can be used for data synchronization replication.</li> </ul>"},{"location":"en/guide/07-user-rights/#query-user","title":"Query User","text":""},{"location":"en/guide/07-user-rights/#psql-shortcut-commands-for-querying","title":"psql Shortcut Commands for Querying","text":"<pre><code>[opentenbase@VM_0_29_centos  ~]$ psql -h 172.16.0.29 -U opentenbase -d postgres -p 15432\npsql (PostgreSQL 10.0 opentenbase V2)\nType \"help\" for help.\n\npostgres=# \\du\n                                      List of roles\n   Role name    |                         Attributes                         | Member of \n----------------+------------------------------------------------------------+-----------\n audit_admin    | No inheritance                                             | {}\n mls_admin      | No inheritance                                             | {}\n opentenbase          | Superuser, Create role, Create DB, Replication, Bypass RLS | {}\n opentenbase_01_admin | Superuser                                                  | {}\n opentenbaseadmin     | Superuser, Create role, Create DB                          | {}\n user1          | Password valid until infinity                              | {}\n</code></pre> <p>Explanation:</p> <ul> <li><code>Attributes</code> displayed the user's attributes </li> </ul>"},{"location":"en/guide/07-user-rights/#query-user-system-table","title":"Query User System Table","text":"<pre><code>[opentenbase@VM_0_29_centos  ~]$ psql -h 172.16.0.29 -U opentenbase -d postgres -p 15432\npsql (PostgreSQL 10.0 opentenbase V2)\nType \"help\" for help.\n\npostgres=# select * from pg_roles where rolname='opentenbase';\n-[ RECORD 1 ]--+---------\nrolname        | opentenbase\nrolsuper       | t\nrolinherit     | t\nrolcreaterole  | t\nrolcreatedb    | t\nrolcanlogin    | t\nrolreplication | t\nrolconnlimit   | -1\nrolpassword    | ********\nrolvaliduntil  | \nrolbypassrls   | t\nrolconfig      | \noid            | 10\n</code></pre>"},{"location":"en/guide/07-user-rights/#drop-user","title":"Drop User","text":"<pre><code>[opentenbase@VM_0_29_centos  ~]$ psql -h 172.16.0.29 -U opentenbase -d postgres -p 15432\npsql (PostgreSQL 10.0 opentenbase V2)\nType \"help\" for help.\n\npostgres=# drop role user1 ;\nDROP ROLE\n</code></pre> <p>Explanation:</p> <ul> <li>If the user has existing tables, the removal may be restricted. To prevent user logins without completely removing the user, consider using <code>nologin</code> to disable user login.</li> </ul>"},{"location":"en/guide/07-user-rights/#user-and-resource-search-path-management","title":"User and Resource Search Path Management","text":"<p>The default resource search path in OpenTenBase is:</p> <pre><code>postgres=# show search_path ;\n   search_path   \n-----------------\n \"$user\", public\n(1 row)\n</code></pre> <p>When accessing resources such as tables and views, the system first searches for objects in a schema with a name matching the user's name. If no matching schema is found, the system then searches in the public schema.</p>"},{"location":"en/guide/07-user-rights/#configuring-users-default-search-path","title":"Configuring User's Default Search Path","text":"<pre><code>[opentenbase@VM_0_29_centos ~]$ psql -h 172.16.0.29 -U opentenbase -d postgres -p 15432\npsql (PostgreSQL 10.0 opentenbase V2)\nType \"help\" for help.\n\npostgres=# alter role user1 set search_path to opentenbase,\"$user\", public;\nALTER ROLE\n\npostgres=#  alter role user1 set search_path to DEFAULT ;\nALTER ROLE\npostgres=# \n\n</code></pre> <p>Explanation: </p> <ul> <li>Configures the search path for the user <code>user1</code> to include the schemas <code>opentenbase</code>, <code>user1</code>, and <code>public</code>.</li> <li>Setting the search path for <code>user1</code> to <code>DEFAULT</code> restores the search mode to the system's default value. </li> </ul>"},{"location":"en/guide/07-user-rights/#adding-a-schema-to-a-user","title":"Adding a Schema to a User","text":"<pre><code>[opentenbase@VM_0_29_centos ~]$ psql -h 172.16.0.29 -U opentenbase -d postgres -p 15432\npsql (PostgreSQL 10.0 opentenbase V2)\nType \"help\" for help.\n\npostgres=# create schema user1 AUTHORIZATION user1;\n\n</code></pre> <p>Explanation:  </p> <ul> <li>The command creates a schema named <code>user1</code> with <code>user1</code> as its owner.</li> </ul>"},{"location":"en/guide/07-user-rights/#permission-management","title":"Permission Management","text":""},{"location":"en/guide/07-user-rights/#schema-permission-management","title":"Schema Permission Management","text":""},{"location":"en/guide/07-user-rights/#granting-user-access-to-a-schema","title":"Granting User Access to a Schema","text":"<pre><code>[opentenbase@VM_0_29_centos ~]$ psql -h 172.16.0.29 -U opentenbase -d postgres -p 15432\npsql (PostgreSQL 10.0 opentenbase V2)\nType \"help\" for help.\n\npostgres=# grant usage on SCHEMA mysch to user1;\nGRANT\npostgres=#\n</code></pre> <p>Explanation:</p> <ul> <li>By default, regular users cannot access schemas without proper authorization. Therefore, granting usage permission on a schema (mysch in this case) is necessary for a user to access tables within that schema</li> <li>If there is no permission for schema access, an error will occur: <code>ERROR: permission denied for schema mysch</code></li> </ul>"},{"location":"en/guide/07-user-rights/#revoking-user-access-to-a-schema","title":"Revoking User Access to a Schema","text":"<pre><code>[opentenbase@VM_0_29_centos ~]$ psql -h 172.16.0.29 -U opentenbase -d postgres -p 15432\npsql (PostgreSQL 10.0 opentenbase V2)\nType \"help\" for help.\n\npostgres=# revoke usage on SCHEMA mysch from user1;\nREVOKE\n</code></pre>"},{"location":"en/guide/07-user-rights/#modifying-the-owner-of-a-schema","title":"Modifying the Owner of a Schema","text":"<pre><code>[opentenbase@VM_0_29_centos ~]$ psql -h 172.16.0.29 -U opentenbase -d postgres -p 15432\npsql (PostgreSQL 10.0 opentenbase V2)\nType \"help\" for help.\n\npostgres=# alter schema mysch owner to user1;\nALTER SCHEMA\n</code></pre>"},{"location":"en/guide/07-user-rights/#table-permission-management","title":"Table Permission Management","text":""},{"location":"en/guide/07-user-rights/#granting-user-permissions-to-insert-delete-update-and-select-records-in-a-table","title":"Granting User Permissions to Insert, Delete, Update, and Select Records in a Table","text":"<pre><code>[opentenbase@VM_0_29_centos ~]$ psql -h 172.16.0.29 -U opentenbase -d postgres -p 15432\npsql (PostgreSQL 10.0 opentenbase V2)\nType \"help\" for help.\n\npostgres=# grant ALL on mysch.t2 to user1;\nGRANT\n\npostgres=# grant SELECT on mysch.t2 to user1;\nGRANT\npostgres=# \n</code></pre> <p>Explanation:</p> <ul> <li><code>ALL</code> permission includes the ability to insert, delete, update, and select records.</li> <li>If granting specific permissions, ALL can be replaced with INSERT, DELETE, UPDATE, or SELECT accordingly.</li> </ul>"},{"location":"en/guide/07-user-rights/#revoking-user-access-permissions","title":"Revoking User Access Permissions","text":"<pre><code>[opentenbase@VM_0_29_centos ~]$ psql -h 172.16.0.29 -U opentenbase -d postgres -p 15432\npsql (PostgreSQL 10.0 opentenbase V2)\nType \"help\" for help.\n\npostgres=# revoke ALL on mysch.t2 from user1; \nREVOKE\n\npostgres=# revoke select on mysch.t2 from user1;   \nREVOKE\n</code></pre>"},{"location":"en/guide/07-user-rights/#granting-permissions-for-a-table-with-a-serial-column-and-its-sequence","title":"Granting Permissions for a Table with a Serial Column and Its Sequence","text":"<pre><code>[opentenbase@VM_0_29_centos ~]$ psql -h 172.16.0.29 -U opentenbase -d postgres -p 15432\npsql (PostgreSQL 10.0 opentenbase V2)\nType \"help\" for help.\n\npostgres=# create table mysch.t3(f1 serial,f2 int);\nCREATE TABLE\npostgres=# \\d+  mysch.t3\n                                                   Table \"mysch.t3\"\n Column |  Type   | Collation | Nullable |               Default                | Storage | Stats target | Description \n--------+---------+-----------+----------+--------------------------------------+---------+--------------+-------------\n f1     | integer |           | not null | nextval('mysch.t3_f1_seq'::regclass) | plain   |              | \n f2     | integer |           |          |                                      | plain   |              | \nDistribute By: SHARD(f1)\nLocation Nodes: ALL DATANODES\n\npostgres=# \n\n-- Authorization must be done like this\npostgres=# grant all on mysch.t3 to user1 ;\nGRANT\n\npostgres=# grant all on SEQUENCE mysch.t3_f1_seq to user1;             \nGRANT\n\n</code></pre> <p>Explanation:</p> <ul> <li>If permissions are not granted, it will result in an error indicating insufficient sequence access permissions (<code>permission denied for sequence t3_f1_seq</code>).</li> </ul>"},{"location":"en/guide/07-user-rights/#grant-access-to-all-tables-in-a-schema-to-a-specific-user","title":"Grant access to all tables in a schema to a specific user","text":"<pre><code>[opentenbase@VM_0_29_centos ~]$ psql -h 172.16.0.29 -U opentenbase -d postgres -p 15432\npsql (PostgreSQL 10.0 opentenbase V2)\nType \"help\" for help.\n\npostgres=#  grant ALL ON ALL TABLES IN SCHEMA  mysch  TO user1;\nGRANT\n</code></pre>"},{"location":"en/guide/07-user-rights/#revoke-access-to-all-tables-in-a-schema-from-a-specific-user","title":"Revoke access to all tables in a schema from a specific user","text":"<pre><code>[opentenbase@VM_0_29_centos ~]$ psql -h 172.16.0.29 -U opentenbase -d postgres -p 15432\npsql (PostgreSQL 10.0 opentenbase V2)\nType \"help\" for help.\n\npostgres=# revoke ALL ON ALL TABLES IN SCHEMA  mysch  FROM user1;       \nREVOKE\n</code></pre>"},{"location":"en/guide/07-user-rights/#conclusion","title":"Conclusion","text":"<p>OpenTenBase is an enterprise-level distributed HTAP database management system. It provides high consistency distributed database services and high-performance data warehouse services for customers through a single database cluster, forming a comprehensive enterprise solution. Feel free to leave us a message if you encounter any related issues in the field of databases.</p>"},{"location":"en/guide/11-pg_unlock/","title":"V2.3.0 Upgrade Features: pg_unlock Usage Instructions","text":""},{"location":"en/guide/11-pg_unlock/#1-install-the-pg_unlock-tool","title":"1. Install the pg_unlock Tool:","text":"<p>Connect to any primary CN:</p> <pre><code>CREATE EXTENSION pg_unlock;\n</code></pre>"},{"location":"en/guide/11-pg_unlock/#2-construct-a-distributed-deadlock-scenario","title":"2. Construct a Distributed Deadlock Scenario","text":"<p>session1\u2014cn1:</p> <pre><code>postgres=# begin; select * from a;\n</code></pre> <p>session2\u2014cn2:</p> <pre><code>postgres=# begin; select * from b;\n</code></pre> <p>session1\u2014cn1:</p> <pre><code>postgres=# drop table b;\n</code></pre> <p>session2\u2014cn2:</p> <pre><code>postgres=# drop table a;\n</code></pre>"},{"location":"en/guide/11-pg_unlock/#3-identify-transaction-dependencies-without-deadlock-detection","title":"3. Identify Transaction Dependencies (Without Deadlock Detection)","text":"<p>session3\u2014cn1:</p> <pre><code>postgres=# select * from pg_unlock_check_dependency();\ndependencyid |      dependency       |    nodename     |              query              \n--------------+-----------------------+-----------------+---------------------------------\n            0 | 0:1998:5 --&gt; 1:1995:1 | cn001 --&gt; cn002 | drop table b; --&gt; drop table a;\n            1 | 1:1995:1 --&gt; 0:1998:5 | cn002 --&gt; cn001 | drop table a; --&gt; drop table b;\n(2 rows)\n</code></pre> <p>The above scenario shows transactional dependencies between transactions, where <code>dependencyid</code> indicates the record number and <code>dependency</code> displays the waiting relationship between transactions using their global transaction IDs. \"0:1998:5 --&gt; 1:1995:1\" signifies that transaction \"1998:5\" is waiting for transaction \"1995:1\".</p>"},{"location":"en/guide/11-pg_unlock/#4-detect-deadlocks-in-the-cluster-without-resolving-them","title":"4. Detect Deadlocks in the Cluster (Without Resolving Them)","text":"<pre><code>postgres=# select * from pg_unlock_check_deadlock();\ndeadlockid |                   deadlocks                   | nodename |     query     \n------------+-----------------------------------------------+----------+---------------\n          0 | 0:1998:5       (100.105.50.198 :30004       )+| cn001   +| drop table b;+\n            | 1:1995:1       (100.105.50.198 :30005       ) | cn002    | drop table a;\n(1 row)\n</code></pre> <p>This example shows all existing deadlocks in the cluster. The <code>deadlockid</code> represents the deadlock record count, while <code>deadlocks</code> presents all transactions involved in each deadlock, connected by \"+\" signs. It also prints out the IP and port of the node where each transaction originated.</p>"},{"location":"en/guide/11-pg_unlock/#5-detect-and-resolve-deadlocks","title":"5. Detect and Resolve Deadlocks","text":"<pre><code>postgres=# select * from pg_unlock_execute();\nexecutetime | txnindex |                  rollbacktxnifo                  | nodename | cancel_query  \n-------------+----------+--------------------------------------------------+----------+---------------\n           0 |        0 | 0:1998:5       (100.105.50.198 :30004          ) | cn001    | drop table b;\n(1 row)\n</code></pre> <p>This illustrates the transaction rolled back to resolve the deadlock. The <code>executetime</code> indicates the number of times a transaction was ended to resolve deadlocks; if there are new deadlocks formed or more than 50 deadlocks detected initially, only some may be resolved in the first execution. The <code>txnindex</code> denotes the index of the transaction being terminated; the <code>rollbacktxninfo</code> provides information about the terminated transaction, including its global transaction ID, IP address, and port.</p>"},{"location":"en/guide/11-pg_unlock/#6-analysis-process","title":"6. Analysis Process","text":"<p>1) In this example, transaction \"1998:5\" is initiated on CN1, and transaction \"1995:1\" is started on CN2.</p> <p>2) Initially, both sessions execute \"select\" statements, causing transaction \"1998:5\" to acquire an ACCESS SHARE lock on table a, and transaction \"1995:1\" acquires an ACCESS SHARE lock on table b.</p> <p>3) Subsequently, when both sessions attempt to execute \"drop table\" commands, transaction \"1998:5\" requests an ACCESS EXCLUSIVE lock on table b, which conflicts with the ACCESS SHARE lock held by transaction \"1995:1\". Thus, a \"1998:5 --&gt; 1995:1\" dependency is created. Similarly, there's a reciprocal dependency \"1995:1 --&gt; 1998:5\".</p> <p>4) At this point, a deadlock situation arises between the two transactions. Upon detection of the deadlock, the tool terminates transaction \"1998:5\". In summary, the pg_unlock tool offers a means to identify and resolve deadlock situations in distributed database environments, ensuring smooth operation of database transactions.</p>"},{"location":"en/guide/13-opentenbase_monitoring/","title":"Monitoring visualization with Prometheus/Grafana","text":"<p>This monitoring will use Prometheus, Grafana visualization tools, and postgres_exporter to comprehensively monitor and optimize OpenTenBase.</p>"},{"location":"en/guide/13-opentenbase_monitoring/#install","title":"Install","text":"<p>Environment dependency: Docker</p>"},{"location":"en/guide/13-opentenbase_monitoring/#install-prometheus","title":"Install Prometheus","text":"<p>When performing monitoring optimization, you can download the latest version from the official Prometheus website:https://prometheus.io/download/</p> <p>You can choose to download the source code and unzip it for use, or you can directly start it through Docker. This tutorial will focus on deploying quickly using Docker.</p> <p>Execute the command:</p> <p><code>docker run -d -p 9090:9090 -v /etc/prometheus:/etc/prometheus prom/prometheus</code></p> <p>After mounting is completed, please make necessary modifications to the configuration file to ensure proper system monitoring.</p> <p><code>vim prometheus.yml</code></p> <pre><code># my global config\nglobal:\n  scrape_interval: 15s # Set the scrape interval to every 15 seconds. Default is every 1 minute.\n  evaluation_interval: 15s # Evaluate rules every 15 seconds. The default is every 1 minute.\n  # scrape_timeout is set to the global default (10s).\n\n# Alertmanager configuration\nalerting:\n  alertmanagers:\n    - static_configs:\n        - targets:\n          # - alertmanager:9093\n\n# Load rules once and periodically evaluate them according to the global 'evaluation_interval'.\nrule_files:\n  # - \"first_rules.yml\"\n  # - \"second_rules.yml\"\n\n# A scrape configuration containing exactly one endpoint to scrape:\n# Here it's Prometheus itself.\nscrape_configs:\n  # The job name is added as a label `job=&lt;job_name&gt;` to any timeseries scraped from this config.\n  - job_name: \"prometheus\"\n\n    # metrics_path defaults to '/metrics'\n    # scheme defaults to 'http'.\n\n    static_configs:\n      - targets: [\"192.168.56.10:9090\"]\n  # Mainly change here, add scanning in file format\n  - job_name: \"node\"\n    file_sd_configs:\n    - refresh_interval: 10s\n      files:\n      - \"/etc/prometheus/conf/node*.yaml\"\n</code></pre> <p>Currently, Prometheus's configuration uses file-based service discovery. When modifying the configuration, there is no need to restart, the system will automatically update and take effect, with an update interval of 10 seconds.</p> <p>To modify the relevant configuration files, first create a directory named conf (<code>mkdir conf</code>), then navigate to the directory using the cd command (<code>cd /etc/prometheus/conf</code>), and then use the vim editor to edit the file (<code>vim node-ms.yaml</code>).</p> <pre><code>- targets:\n  - \"ip:port\"\n  labels:\n    hostname: pg\n</code></pre> <p>To customize the configuration information, please modify the corresponding IP address and hostname to your own information. After making the modifications, start the Prometheus service, then you can access http://yourIPAddress:9090/ to view the monitoring data of Prometheus.</p>"},{"location":"en/guide/13-opentenbase_monitoring/#install-grafana","title":"Install Grafana","text":"<p>To ensure the persistence of the configuration, we can start Grafana in a Docker container in a persistent manner. You can use the following command to start the Grafana container and preserve the configuration information after the container restarts:</p> <p><code>docker run -d -p 3000:3000 --name=grafana   --volume grafana-storage:/var/lib/grafana  grafana/grafana-enterprise</code></p> <p>After startup, you can enter http://yourIPAddress:3000/ in the browser.</p> <p>To log in and view the Grafana monitoring interface, use the default username and password admin/admin.</p>"},{"location":"en/guide/13-opentenbase_monitoring/#configure-data-source","title":"Configure data source","text":"<p>Here, you just need to fill in the URL (http://ip:9090/) to save the configuration. This URL points to the address of Prometheus. Grafana will use this address to establish a connection with Prometheus, in order to retrieve data for displaying on the monitoring dashboard.</p> <p></p>"},{"location":"en/guide/13-opentenbase_monitoring/#install-exporter","title":"Install Exporter","text":"<p>The official Prometheus website provides a variety of Exporters. You can find relevant information at https://prometheus.io/docs/instrumenting/exporters/.</p> <p>We can install postgres_exporter to monitor the database. The official address is https://github.com/prometheus-community/postgres_exporter.</p> <p>Similarly, you can start it with Docker:</p> <p><code>docker run  --net=host  -e DATA_SOURCE_NAME=\"postgresql://opentenbase:@ip:port/postgres?sslmode=disable\"  quay.io/prometheuscommunity/postgres-exporter</code></p> <p>Change the IP and host to your own information, in the official example, no login password is set for the opentenbase user, and we also do not set a password for login.</p> <p>After starting up, we first log in to the database, and then proceed with the relevant settings for the database users.</p> <pre><code>CREATE OR REPLACE FUNCTION __tmp_create_user() returns void as $$\nBEGIN\n  IF NOT EXISTS (\n          SELECT                       -- SELECT list can stay empty for this\n          FROM   pg_catalog.pg_user\n          WHERE  usename = 'postgres_exporter') THEN\n    CREATE USER postgres_exporter;\n  END IF;\nEND;\n$$ language plpgsql;\n</code></pre> <pre><code>SELECT __tmp_create_user();\n\nDROP FUNCTION __tmp_create_user();\n\nALTER USER postgres_exporter WITH PASSWORD 'password';\n\nALTER USER postgres_exporter SET SEARCH_PATH TO postgres_exporter,pg_catalog;\n\nGRANT CONNECT ON DATABASE postgres TO postgres_exporter;\n\n-- The PostgreSQL version integrated in OpenTenBase is 10, so you can execute the following statement, and you can check the historical versions on the open source repository.\nGRANT pg_monitor to postgres_exporter;\n</code></pre>"},{"location":"en/guide/13-opentenbase_monitoring/#configure-monitoring-dashboard","title":"Configure monitoring dashboard","text":"<p>Once all components are successfully started, next we need to go to the marketplace to find the monitoring dashboards we want. You can visit Grafana's official dashboard marketplace at: https://grafana.com/grafana/dashboards/?search=postgresql</p> <p></p> <p>Once you find a dashboard you like, click here to import it. Use ID: 9628 as an example for the import process.</p> <p>Choose our data source here.</p> <p></p> <p>Let's see how it looks in action:</p> <p></p>"},{"location":"en/guide/14-kubeblocks-support/","title":"OpenTenBase Add-on for KubeBlocks","text":"<p>This folder contains two Helm charts for deploying the OpenTenBase KubeBlocks add-on on a Kubernetes cluster. Use this add-on, you can deploy and manage OpenTenBase clusters on Kubernetes. </p> <p>Now, already support OS architecture <code>amd64</code> and <code>arm64</code>. You can follow the steps below to deploy the OpenTenBase Cluster on you laptop(including Mac M1). This significantly lowers the barrier and difficulty for users to experience OpenTenBase.</p>"},{"location":"en/guide/14-kubeblocks-support/#what-is-kubeblocks","title":"What is KubeBlocks?","text":"<p>KubeBlocks is an open-source control plane software that runs and manages databases, message queues and other data infrastructure on K8s. The name KubeBlocks is inspired by Kubernetes and LEGO blocks, signifying that running and managing data infrastructure on K8s can be standard and productive, like playing with LEGO blocks.</p> <p>More information about KubeBlocks can be found in the KubeBlocks GitHub repository and the KubeBlocks website. You can find all supported add-ons in the KubeBlocks Add-ons GitHub repository.</p>"},{"location":"en/guide/14-kubeblocks-support/#prerequisites","title":"Prerequisites","text":"<p>Before you deploy the OpenTenBase KubeBlocks add-on, you need to have the following prerequisites:</p> <ul> <li>A Kubernetes cluster, you can use minikube to create a local cluster for testing</li> <li>The <code>kubectl</code> command-line tool installed on your local machine</li> <li>The <code>helm</code> command-line tool installed on your local machine</li> <li>The <code>kbcli</code> command-line tool to install the KubeBlocks control plane</li> </ul>"},{"location":"en/guide/14-kubeblocks-support/#install-kubeblocks","title":"Install KubeBlocks","text":"<p>Refer to the KubeBlocks installation guide to install the <code>kbcli</code> and  KubeBlocks control plane on your Kubernetes cluster.</p>"},{"location":"en/guide/14-kubeblocks-support/#deploy-opentenbase-add-on","title":"Deploy OpenTenBase Add-on","text":"<p>To deploy the OpenTenBase add-on on your Kubernetes cluster, follow these steps:</p> <pre><code>$ helm install opentenbase ./opentenbase\n</code></pre> <p>Check the ClusterDefinition and ClusterVersion:</p> <pre><code>$ kubectl get cd opentenbase\nNAME          MAIN-COMPONENT-NAME   STATUS      AGE\nopentenbase   gtm                   Available   11m\n\n$ kubectl get cv |grep opentenbase\nopentenbase-2.5.0     opentenbase          Available   12m\n</code></pre>"},{"location":"en/guide/14-kubeblocks-support/#create-an-opentenbase-cluster","title":"Create an OpenTenBase Cluster","text":"<p>Run the following command to create an OpenTenBase cluster:</p> <pre><code>$ helm install otb ./opentenbase-cluster\n</code></pre> <p>This command will create an OpenTenBase cluster with one GTM, one Coordinator, and two Datanodes. Run the following command to check the status of the OpenTenBase cluster:</p> <pre><code>$ kubectl get cluster otb\nNAME   CLUSTER-DEFINITION   VERSION              TERMINATION-POLICY   STATUS     AGE\notb    opentenbase          opentenbase-2.5.0   Delete               Creating   12s\n</code></pre> <p>Check the pods of the OpenTenBase cluster:</p> <pre><code>$ kubectl get pods -l app.kubernetes.io/instance=otb\nNAME         READY   STATUS    RESTARTS   AGE\notb-cn-0-0   1/1     Running   0          2m39s\notb-dn-0-0   2/2     Running   0          2m39s\notb-dn-1-0   2/2     Running   0          2m39s\notb-gtm-0    1/1     Running   0          2m39s\n</code></pre> <p>Check all components status:</p> <pre><code>$ kbcli cluster describe otb\nName: otb        Created Time: Apr 07,2024 15:28 UTC+0800\nNAMESPACE   CLUSTER-DEFINITION   VERSION              STATUS     TERMINATION-POLICY   \ndefault     opentenbase          opentenbase-2.5.0   Updating   Delete               \n\nEndpoints:\nCOMPONENT   MODE        INTERNAL                                  EXTERNAL   \ngtm         ReadWrite   otb-gtm.default.svc.cluster.local:50001   &lt;none&gt;     \ndn-0        ReadWrite   otb-dn-0.default.svc.cluster.local:5432   &lt;none&gt;     \ndn-1        ReadWrite   otb-dn-1.default.svc.cluster.local:5432   &lt;none&gt;     \ncn-0        ReadWrite   otb-cn-0.default.svc.cluster.local:5432   &lt;none&gt;     \n\nTopology:\nCOMPONENT   INSTANCE     ROLE     STATUS    AZ       NODE                            CREATED-TIME                 \ncn-0        otb-cn-0-0   &lt;none&gt;   Running   &lt;none&gt;   kind-control-plane/172.18.0.2   Apr 07,2024 15:28 UTC+0800   \ndn-0        otb-dn-0-0   &lt;none&gt;   Running   &lt;none&gt;   kind-control-plane/172.18.0.2   Apr 07,2024 15:28 UTC+0800   \ndn-1        otb-dn-1-0   &lt;none&gt;   Running   &lt;none&gt;   kind-control-plane/172.18.0.2   Apr 07,2024 15:28 UTC+0800   \ngtm         otb-gtm-0    &lt;none&gt;   Running   &lt;none&gt;   kind-control-plane/172.18.0.2   Apr 07,2024 15:28 UTC+0800   \n\nResources Allocation:\nCOMPONENT   DEDICATED   CPU(REQUEST/LIMIT)   MEMORY(REQUEST/LIMIT)   STORAGE-SIZE   STORAGE-CLASS   \ngtm         false       1 / 1                1Gi / 1Gi               data:20Gi      standard        \ndn-0        false       1 / 1                1Gi / 1Gi               data:20Gi      standard        \ndn-1        false       1 / 1                1Gi / 1Gi               data:20Gi      standard        \ncn-0        false       1 / 1                1Gi / 1Gi               data:20Gi      standard        \n\nImages:\nCOMPONENT   TYPE   IMAGE                                    \ngtm         gtm    docker.io/domainlau/opentenbase:v2.5.0   \ndn-0        dn     docker.io/domainlau/opentenbase:v2.5.0   \ndn-1        dn     docker.io/domainlau/opentenbase:v2.5.0   \ncn-0        cn     docker.io/domainlau/opentenbase:v2.5.0   \n\nShow cluster events: kbcli cluster list-events -n default otb\n</code></pre>"},{"location":"en/guide/14-kubeblocks-support/#connect-to-the-opentenbase-cluster","title":"Connect to the OpenTenBase Cluster","text":"<p>Run the following command to connect to the OpenTenBase cluster:</p> <pre><code>$ kubectl exec -it otb-cn-0-0 -- bash\n\nopentenbase@otb-cn-0-0:~$ psql postgres\npsql (PostgreSQL 10.0 OpenTenBase V2)\nType \"help\" for help.\n\npostgres=# select * from pgxc_node;\n node_name | node_type | node_port |     node_host     | nodeis_primary | nodeis_preferred |   node_id   |  node_cluster_name  \n-----------+-----------+-----------+-------------------+----------------+------------------+-------------+---------------------\n a_one     | G         |     50001 | otb-gtm           | t              | f                | -1343982441 | opentenbase_cluster\n dn_0      | D         |      5432 | otb-dn-0          | f              | f                |  1485981022 | opentenbase_cluster\n dn_1      | D         |      5432 | otb-dn-1          | f              | f                | -1300059100 | opentenbase_cluster\n cn_0      | C         |      5432 | otb-cn-0          | f              | f                | -1541982360 | opentenbase_cluster\n(4 rows)\n\npostgres=# create default node group default_group with(dn_0, dn_1);\nCREATE NODE GROUP\npostgres=# create sharding group to group default_group;\nCREATE SHARDING GROUP\npostgres=# clean sharding;\nCLEAN SHARDING\npostgres=# select * from pgxc_group;\n  group_name   | default_group | group_members \n---------------+---------------+---------------\n default_group |             1 | 16384 16385\n(1 row)\npostgres=# create table public.t1_pt(\nf1 int not null,\nf2 timestamp not null,\nf3 varchar(20),\nprimary key(f1)) \npartition by range (f2) \nbegin (timestamp without time zone '2019-01-01 0:0:0') \nstep (interval '1 month') partitions (3) \ndistribute by shard(f1) \nto group default_group;\nCREATE TABLE\npostgres=# \\d+ public.t1_pt\n                                             Table \"public.t1_pt\"\n Column |            Type             | Collation | Nullable | Default | Storage  | Stats target | Description \n--------+-----------------------------+-----------+----------+---------+----------+--------------+-------------\n f1     | integer                     |           | not null |         | plain    |              | \n f2     | timestamp without time zone |           | not null |         | plain    |              | \n f3     | character varying(20)       |           |          |         | extended |              | \nIndexes:\n    \"t1_pt_pkey\" PRIMARY KEY, btree (f1)\nDistribute By: SHARD(f1)\nLocation Nodes: ALL DATANODES\nPartition By: RANGE(f2)\n     Partitions number: 3\n     Start With: 2019-01-01\n     Interval Of Partition: 1 MONTH\n</code></pre> <p>Or, you can use <code>kubectl port-forward</code> and connect to the OpenTenBase cluster from your local machine:</p> <pre><code>$ kubectl port-forward svc/otb-cn-0 5432:5432\n</code></pre> <p>Then, you can connect to the OpenTenBase cluster using the <code>psql</code> command:</p> <pre><code>$ psql -h 127.0.0.1 -p 5432 -U opentenbase postgres\n</code></pre>"},{"location":"en/guide/14-kubeblocks-support/#delete-the-opentenbase-cluster","title":"Delete the OpenTenBase Cluster","text":"<p>Run the following command to delete the OpenTenBase cluster:</p> <pre><code>$ helm uninstall otb\n</code></pre>"},{"location":"en/guide/15-docker-deploy/","title":"Intro for Build Cluster(1C2D) using docker","text":"<p>In this example, we try to build a cluster which includes 1 Coordinator Node and 2 Data Node using docker techniques. We aim to provide users with a basic example of building a distributed cluster using Docker for OpenTenbase. This will facilitate quick deployment for users and allow for further customization and development.</p>"},{"location":"en/guide/15-docker-deploy/#1build-docker-images","title":"1.Build docker images","text":"<pre><code>export SOURCECODE_PATH=/path/to/your/otb/source/code\ncd ${SOURCECODE_PATH}/docker\n./buildImage.sh\n</code></pre> <p>Commands above will build <code>opentenbasebase</code> and <code>opentenbase</code> images.</p>"},{"location":"en/guide/15-docker-deploy/#2start-the-example-service-and-enter-the-cn-contaioner","title":"2.Start the example service and enter the CN contaioner","text":"<pre><code>cd ${SOURCECODE_PATH}/example/1c_2d_cluster\ndocker-compose up -d\ndocker-compose exec opentenbaseCN /bin/bash\n\n</code></pre>"},{"location":"en/guide/15-docker-deploy/#3ssh-trust-configuration","title":"3.SSH trust configuration","text":"<pre><code>su opentenbase\ncopy-ssh-keys\n</code></pre> <p>Enter \"yes\", then press Enter. Then enter the password \"qwerty\".</p>"},{"location":"en/guide/15-docker-deploy/#4deployment-and-initialization","title":"4.Deployment and initialization","text":"<p>Copy the configuration file to the specified directory:</p> <pre><code>\nmkdir ~/pgxc_ctl\ncp ~/pgxc_conf/pgxc_ctl.conf ~/pgxc_ctl\n</code></pre> <p>Use <code>pgxc_ctl</code> for deployment. Avoid using commands like <code>ls</code> or <code>echo</code> after entering <code>pgxc_ctl</code>.</p> <pre><code>pgxc_ctl                                # This step will enter --home location, which is by default /home/$USER/pgxc_ctl. Type exit to exit or Ctrl + D\ndeploy all                              # This will use pgxc.conf located in /home/$USER/pgxc_ctl/pgxc.conf for deployment\ninit all\n\nexit\n</code></pre>"},{"location":"en/guide/15-docker-deploy/#5connect-opentenbase-using-psql","title":"5.Connect OpenTenbase using psql","text":"<pre><code>psql -h 172.16.200.10 -p 30004 -d postgres -U opentenbase\n</code></pre> <p>The following SQL commands are explained in detail in the Quick Start section of the documentation:</p> <pre><code>-- Using dn001 and dn002 as storage nodes to form the default storage group\ncreate default node group default_group  with (dn001,dn002); \ncreate sharding group to group default_group;      -- Setting up the storage group for tables of shard type\ncreate database test;                              -- Creating the test database\ncreate user test with password 'test';             -- Creating a user test with password test\nalter database test owner to test;                 -- Changing the owner of the test database to the user test\n\\c test test                                       -- Switching to the test database\n-- Creating a shard table foo, using id as the distribution key\ncreate table foo(id bigint, str text) distribute by shard(id);\ninsert into foo values(1, 'tencent'), (2, 'shenzhen');\nselect * from foo;\n</code></pre> <p>After successful deployment, you can continue to explore other content in the official documentation.</p>"},{"location":"en/guide/19-txsql_access/","title":"Application Access","text":""},{"location":"en/guide/21-txsql_advanced/","title":"Advanced Usage","text":""},{"location":"en/guide/22-txsql_faq/","title":"FAQ","text":"<ol> <li>\u5f3a\u540c\u6b65\u7b49\u5f85ack\u8d85\u8fc7sqlasyntimeout\uff08\u9ed8\u8ba430s\uff09\u540e\u7684\u9519\u8bef\u63d0\u793a</li> </ol> <pre><code>ERROR 1613 (XA106): The transaction is in doubt. Please check whether the transaction has been committed.\n</code></pre> <ol> <li>\u5927\u4e8b\u52a1\u4ea7\u751f\u7684binlog\u8d85\u8fc7binlog_write_threshold\uff08\u9ed8\u8ba41610612736\uff09\u540e\u9519\u8bef\u63d0\u793a\uff1a</li> </ol> <pre><code>ERROR 4040 (HY000): binlog write threshold(xxx) exceeded, the transaction has xxx (bytes) binlogs, it is aborted.\n</code></pre>"},{"location":"en/guide/23-opentenbase_ai/","title":"opentenbase_ai Plugin Documentation","text":""},{"location":"en/guide/23-opentenbase_ai/#introduction","title":"Introduction","text":"<p>The opentenbase_ai plugin provides an interface for integrating large language model AI capabilities into PostgreSQL databases, allowing you to use AI features directly in SQL. The plugin supports multiple AI model providers (including OpenAI, DeepSeek, Tencent Hunyuan, Alibaba Tongyi Qianwen, etc.), offering text generation, translation, sentiment analysis, question answering, text summarization, embedding vector generation, and image analysis capabilities.</p>"},{"location":"en/guide/23-opentenbase_ai/#installation","title":"Installation","text":""},{"location":"en/guide/23-opentenbase_ai/#prerequisites","title":"Prerequisites","text":"<ul> <li>HTTP extension (the plugin depends on HTTP extension for API calls)</li> </ul>"},{"location":"en/guide/23-opentenbase_ai/#installation-steps","title":"Installation Steps","text":"<ol> <li>Ensure your instance has the HTTP extension installed</li> <li>Install the opentenbase_ai plugin:</li> </ol> <pre><code>CREATE EXTENSION opentenbase_ai;\n</code></pre> <p>Or install with the pgsql-http plugin together:</p> <pre><code>CREATE EXTENSION opentenbase_ai CASCADE;\n</code></pre>"},{"location":"en/guide/23-opentenbase_ai/#quick-start-using-hunyuan-model-as-example","title":"Quick Start (Using Hunyuan Model as Example)","text":""},{"location":"en/guide/23-opentenbase_ai/#configure-hunyuan-model","title":"Configure Hunyuan Model","text":"<ol> <li> <p>Obtain an API token for the Hunyuan model</p> </li> <li> <p>Add the Hunyuan model definition to the model metadata table</p> </li> </ol> <p><code>sql    SELECT ai.add_completion_model(        model_name =&gt; 'hunyuan_chat',        uri =&gt; 'https://api.hunyuan.cloud.tencent.com/v1/chat/completions',        default_args =&gt; '{\"model\": \"hunyuan-lite\"}'::jsonb,        token =&gt; 'your_hunyuan_api_key',        model_provider =&gt; 'tencent'    );</code></p> <ol> <li>Configure Hunyuan as the default model</li> </ol> <p><code>sql    SET ai.completion_model = 'hunyuan_chat';</code></p>"},{"location":"en/guide/23-opentenbase_ai/#using-the-llm","title":"Using the LLM","text":"<p>After configuring the Hunyuan model, you can start using it:</p> <p>Text Generation</p> <pre><code>SELECT ai.generate_text('Write an attractive description for the following product: Smart Watch');\n</code></pre> <p>Sentiment Analysis</p> <pre><code>SELECT ai.sentiment('This product is very good, I am satisfied');\n</code></pre> <p>Text Summarization </p> <pre><code>SELECT ai.summarize('Here is a long product description text...');\n</code></pre> <p>Generate with Specific Return Type</p> <pre><code>SELECT ai.generate('9*9 = ?',NULL::integer);\n</code></pre>"},{"location":"en/guide/23-opentenbase_ai/#model-management","title":"Model Management","text":""},{"location":"en/guide/23-opentenbase_ai/#adding-models","title":"Adding Models","text":"<p>The plugin provides multiple ways to add AI models:</p> <ol> <li>Add OpenAI-compatible completion model:</li> </ol> <pre><code>SELECT ai.add_completion_model(\n    model_name =&gt; 'gpt-4',\n    uri =&gt; 'https://api.openai.com/v1/chat/completions',\n    default_args =&gt; '{\"model\": \"gpt-4\", \"temperature\": 0.7}'::jsonb,\n    token =&gt; 'your_openai_api_key',\n    model_provider =&gt; 'openai'\n);\n</code></pre> <ol> <li>Add OpenAI-compatible embedding model:</li> </ol> <pre><code>SELECT ai.add_embedding_model(\n    model_name =&gt; 'text-embedding-ada-002',\n    uri =&gt; 'https://api.openai.com/v1/embeddings',\n    default_args =&gt; '{\"model\": \"text-embedding-ada-002\"}'::jsonb,\n    token =&gt; 'your_openai_api_key',\n    model_provider =&gt; 'openai'\n);\n</code></pre> <ol> <li>Add OpenAI-compatible image model:</li> </ol> <pre><code>SELECT ai.add_image_model(\n    model_name =&gt; 'gpt-4-vision',\n    uri =&gt; 'https://api.openai.com/v1/chat/completions',\n    default_args =&gt; '{\"model\": \"gpt-4-vision-preview\", \"max_tokens\": 300}'::jsonb,\n    token =&gt; 'your_openai_api_key',\n    model_provider =&gt; 'openai'\n);\n</code></pre> <ol> <li>Examples of adding other LLM models:</li> </ol> <pre><code>-- DeepSeek\nSELECT ai.add_completion_model(\n    model_name =&gt; 'deepseek-chat',\n    uri =&gt; 'https://api.deepseek.com/v1/chat/completions',\n    default_args =&gt; '{\"model\": \"deepseek-chat\", \"temperature\": 0.7}'::jsonb,\n    token =&gt; 'your_deepseek_api_key',\n    model_provider =&gt; 'deepseek'\n);\n\n-- Tencent Hunyuan\nSELECT ai.add_completion_model(\n    model_name =&gt; 'hunyuan_chat',\n    uri =&gt; 'https://api.hunyuan.cloud.tencent.com/v1/chat/completions',\n    default_args =&gt; '{\"model\": \"hunyuan-lite\"}'::jsonb,\n    token =&gt; 'your_hunyuan_api_key',\n    model_provider =&gt; 'tencent'\n);\n\nSELECT ai.add_completion_model(\n    model_name =&gt; 'hunyuan_generate',\n    uri =&gt; 'https://api.hunyuan.cloud.tencent.com/v1/chat/completions',\n    default_args =&gt; '{\n        \"model\": \"hunyuan-lite\"\n    }'::jsonb,\n    model_provider =&gt; 'tencent',\n    token =&gt; 'your_hunyuan_api_key'\n);\n\n-- Alibaba Tongyi Qianwen\nSELECT ai.add_completion_model(\n    model_name =&gt; 'qwen_chat',\n    uri =&gt; 'https://dashscope.aliyuncs.com/compatible-mode/v1/chat/completions',\n    default_args =&gt; '{\"model\": \"qwen-turbo\"}'::jsonb,\n    token =&gt; 'your_qwen_api_key',\n    model_provider =&gt; 'aliyun'\n);\n</code></pre> <p>:bulb: Tip: Note that the 'model' field in default_args must be filled in.</p>"},{"location":"en/guide/23-opentenbase_ai/#managing-existing-models","title":"Managing Existing Models","text":"<pre><code>-- List all configured models\nSELECT * FROM ai.list_models();\n\n-- Get details for a specific model\nSELECT * FROM ai.get_model_details('model_name');\n\n-- Update model configuration\nSELECT ai.update_model('model_name', 'config_field', 'new_value');\n\n-- Delete a model\nSELECT ai.delete_model('model_name');\n</code></pre>"},{"location":"en/guide/23-opentenbase_ai/#configuration","title":"Configuration","text":""},{"location":"en/guide/23-opentenbase_ai/#setting-default-models","title":"Setting Default Models","text":"<p>You can configure the default AI models by setting the following GUC (Grand Unified Configuration) parameters:</p> <pre><code>-- Set the default text completion model\nSET ai.completion_model = 'model_name';\n\n-- Set the default embedding vector model\nSET ai.embedding_model = 'embedding_model_name';\n\n-- Set the default image analysis model\nSET ai.image_model = 'image_model_name';\n</code></pre> <p>You can set these parameters at different levels:</p> <pre><code>-- Session level (only effective for the current session)\nSET ai.completion_model = 'gpt-4';\n\n-- User level (effective for all sessions of a specific user)\nALTER USER username SET ai.completion_model = 'gpt-4';\n\n-- Database level (effective for all sessions in a specific database)\nALTER DATABASE dbname SET ai.completion_model = 'gpt-4';\n\n-- Global level (needs to be configured in postgresql.conf)\n-- Add to postgresql.conf: ai.completion_model = 'gpt-4'\n</code></pre>"},{"location":"en/guide/23-opentenbase_ai/#basic-features","title":"Basic Features","text":""},{"location":"en/guide/23-opentenbase_ai/#polymorphic-generate-function","title":"Polymorphic Generate Function","text":"<p>The core of opentenbase_ai is its polymorphic <code>generate</code> function, which can return different data types as needed. This function is the foundation for all type-specific generation functions:</p> <pre><code>-- Complete signature of the polymorphic generate function\nai.generate(\n    prompt text,             -- Prompt text\n    dummy anyelement,        -- Placeholder to determine return type\n    model_name text = NULL,  -- Optional: model name to use\n    config jsonb = '{}'      -- Optional: additional configuration parameters\n) RETURNS anyelement;        -- Returns a result of the same type as the dummy parameter\n</code></pre> <p>Usage examples:</p> <pre><code>-- Return text\nSELECT ai.generate('What are the main features of PostgreSQL?', NULL::text);\n\n-- Return integer\nSELECT ai.generate('Calculate the result of 123 + 456', NULL::integer);\n\n-- Return floating point\nSELECT ai.generate('What is the value of pi?', NULL::double precision);\n\n-- Return boolean\nSELECT ai.generate('Is the Earth round?', NULL::boolean);\n\n-- Specify model\nSELECT ai.generate('What is artificial intelligence?', NULL::text, 'gpt-4');\n\n-- Specify configuration\nSELECT ai.generate(\n    'Explain the basic principles of quantum computing',\n    NULL::text,\n    'gpt-4',\n    '{\"temperature\": 0.2, \"max_tokens\": 1000}'::jsonb\n);\n</code></pre> <p>The polymorphic generate function currently supports the following return types: - Text types: text - Integer types: integer, bigint - Floating point types: real, double precision - Boolean type: boolean</p>"},{"location":"en/guide/23-opentenbase_ai/#type-specific-generation-functions","title":"Type-Specific Generation Functions","text":"<p>opentenbase_ai provides various type-specific generation functions, which are wrappers around the polymorphic <code>generate</code> function, generating different types of results based on your needs:</p>"},{"location":"en/guide/23-opentenbase_ai/#text-generation","title":"Text Generation","text":"<pre><code>-- Basic text generation\nSELECT ai.generate_text('Please introduce the main features of PostgreSQL database');\n\n-- Specify model\nSELECT ai.generate_text('Please introduce the main features of PostgreSQL database', 'gpt-4');\n\n-- Custom configuration parameters\nSELECT ai.generate_text(\n    'Please introduce the main features of PostgreSQL database',\n    'gpt-4',\n    '{\"temperature\": 0.3, \"max_tokens\": 500}'::jsonb\n);\n</code></pre>"},{"location":"en/guide/23-opentenbase_ai/#numeric-generation","title":"Numeric Generation","text":"<pre><code>-- Integer generation\nSELECT ai.generate_int('What is the world population?');\n\n-- Floating point generation\nSELECT ai.generate_double('What is the value of pi?');\n</code></pre>"},{"location":"en/guide/23-opentenbase_ai/#boolean-generation","title":"Boolean Generation","text":"<pre><code>-- Boolean generation\nSELECT ai.generate_bool('Is the Earth round?');\n</code></pre>"},{"location":"en/guide/23-opentenbase_ai/#text-processing-functions","title":"Text Processing Functions","text":""},{"location":"en/guide/23-opentenbase_ai/#text-summarization","title":"Text Summarization","text":"<pre><code>-- Basic usage\nSELECT ai.summarize('Here is a long text content...');\n\n-- Specify model\nSELECT ai.summarize('Here is a long text content...', 'gpt-4');\n\n-- Custom configuration\nSELECT ai.summarize(\n    'Here is a long text content...',\n    'gpt-4',\n    '{\"temperature\": 0.3}'::jsonb\n);\n</code></pre>"},{"location":"en/guide/23-opentenbase_ai/#text-translation","title":"Text Translation","text":"<pre><code>-- Basic usage\nSELECT ai.translate('Hello, world!', 'Chinese');\n\n-- Translate to specific language\nSELECT ai.translate('\u4f60\u597d\uff0c\u4e16\u754c\uff01', 'English');\n\n-- Specify model and configuration\nSELECT ai.translate(\n    '\u4f60\u597d\uff0c\u4e16\u754c\uff01',\n    'English',\n    'gpt-4',\n    '{\"temperature\": 0.3}'::jsonb\n);\n</code></pre>"},{"location":"en/guide/23-opentenbase_ai/#sentiment-analysis","title":"Sentiment Analysis","text":"<pre><code>-- Basic usage\nSELECT ai.sentiment('This product is very good, I am satisfied!');\n\n-- Specify model\nSELECT ai.sentiment('This product is very good, I am satisfied!', 'gpt-4');\n</code></pre>"},{"location":"en/guide/23-opentenbase_ai/#question-answering","title":"Question Answering","text":"<pre><code>-- Basic usage\nSELECT ai.extract_answer(\n    'Question: Who invented relativity?',\n    'Einstein published the general theory of relativity in 1915, which was a major breakthrough in physics.'\n);\n\n-- Specify model and configuration\nSELECT ai.extract_answer(\n    'Question: Who invented relativity?',\n    'Einstein published the general theory of relativity in 1915, which was a major breakthrough in physics.',\n    'gpt-4',\n    '{\"temperature\": 0.1}'::jsonb\n);\n</code></pre>"},{"location":"en/guide/23-opentenbase_ai/#embedding-vector-generation","title":"Embedding Vector Generation","text":"<pre><code>-- Basic usage\nSELECT ai.embedding('This is a text that needs to generate embedding vectors');\n\n-- Specify model\nSELECT ai.embedding('This is a text that needs to generate embedding vectors', 'text-embedding-ada-002');\n</code></pre>"},{"location":"en/guide/23-opentenbase_ai/#image-analysis","title":"Image Analysis","text":"<pre><code>-- Using image URL\nSELECT ai.image('What is in this image?', 'https://example.com/image.jpg');\n\n-- Using binary image data\nSELECT ai.image('What is in this image?', image_data_column)\nFROM images_table\nWHERE id = 1;\n\n-- Specify model and configuration\nSELECT ai.image(\n    'What is in this image?',\n    'https://example.com/image.jpg',\n    'gpt-4-vision',\n    '{\"max_tokens\": 500}'::jsonb\n);\n</code></pre> <p>:bulb: Tip: Note that when calling a model, it will first use the model name specified in the function parameters. If not specified, it will use the default model set in the current GUC settings.</p>"},{"location":"en/guide/23-opentenbase_ai/#advanced-configuration-and-customization","title":"Advanced Configuration and Customization","text":""},{"location":"en/guide/23-opentenbase_ai/#model-metadata-table","title":"Model Metadata Table","text":"<p>The opentenbase_ai plugin uses the ai_model_list table to store configuration information for all models. The structure of this table is as follows:</p> <pre><code>CREATE TABLE public.ai_model_list (\n    model_name TEXT PRIMARY KEY,        -- Model name\n    model_provider TEXT,                -- Model provider\n    request_type TEXT NOT NULL,         -- Request type (GET/POST etc.)\n    request_header http_header[],       -- HTTP request headers\n    uri TEXT NOT NULL,                  -- API endpoint URL\n    content_type TEXT NOT NULL,         -- Content type\n    default_args JSONB NOT NULL,        -- Default parameters\n    json_path TEXT NOT NULL             -- JSON response path\n)\n</code></pre>"},{"location":"en/guide/23-opentenbase_ai/#adding-non-openai-compatible-format-models","title":"Adding Non-OpenAI Compatible Format Models","text":"<p>The opentenbase_ai plugin supports adding models with non-OpenAI compatible formats through the ai.add_model function. This allows you to integrate model services with any custom API format:</p> <pre><code>SELECT ai.add_model(\n    model_name =&gt; 'custom_model',           -- Model name\n    request_header =&gt; ARRAY[                -- Request headers\n        http_header('Authorization', 'Bearer your_token'),\n        http_header('X-Custom-Header', 'value')\n    ],\n    uri =&gt; 'https://api.example.com/v1/endpoint',  -- API endpoint\n    default_args =&gt; '{\"key\": \"value\"}'::jsonb,     -- Default parameters\n    model_provider =&gt; 'custom',                    -- Provider\n    request_type =&gt; 'POST',                        -- Request type\n    content_type =&gt; 'application/json',            -- Content type\n    json_path =&gt; 'SELECT %L::jsonb-&gt;''result''-&gt;''text''::TEXT'  -- Response parsing path (fill according to actual http response path)\n);\n</code></pre>"},{"location":"en/guide/23-opentenbase_ai/#network-configuration","title":"Network Configuration","text":"<p>opentenbase_ai makes HTTP calls to remote models through the pgsql-http plugin, so HTTP-related configuration can be modified through parameters related to the pgsql-http plugin.</p> <p>Common parameter configurations are as follows:</p> <pre><code>-- Set request timeout in milliseconds\nSET http.timeout_msec TO 200000;\n\nSELECT http.http_set_curlopt('CURLOPT_TIMEOUT', '200000');\n\n-- Set connection timeout\nSELECT http.http_set_curlopt('CURLOPT_CONNECTTIMEOUT_MS', '200000')\n</code></pre> <p>For more detailed configuration, refer to the community pgsql-http plugin official website:</p> <p>https://github.com/pramsey/pgsql-http</p>"},{"location":"en/guide/23-opentenbase_ai/#appendix","title":"Appendix","text":""},{"location":"en/guide/23-opentenbase_ai/#function-list","title":"Function List","text":"Feature Function Return Type Polymorphic Generation <code>ai.generate(prompt, dummy, model_name, config)</code> anyelement Text Generation <code>ai.generate_text(prompt, model_name, config)</code> TEXT Integer Generation <code>ai.generate_int(prompt, model_name, config)</code> INTEGER Float Generation <code>ai.generate_double(prompt, model_name, config)</code> DOUBLE PRECISION Boolean Generation <code>ai.generate_bool(prompt, model_name, config)</code> BOOLEAN Text Summarization <code>ai.summarize(text_content, model_name, config)</code> TEXT Text Translation <code>ai.translate(text_content, target_language, model_name, config)</code> TEXT Sentiment Analysis <code>ai.sentiment(text_content, model_name, config)</code> TEXT Question Answering <code>ai.extract_answer(question, context, model_name, config)</code> TEXT Embedding Vector Generation <code>ai.embedding(input, model_name, config)</code> TEXT Image Analysis <code>ai.image(prompt, image_url, model_name, config)</code> TEXT Image Analysis <code>ai.image(prompt, image_bytea, model_name, config)</code> TEXT"},{"location":"en/guide/23-opentenbase_ai/#model-management-functions","title":"Model Management Functions","text":"Feature Function Return Type Add Generic Model <code>ai.add_model(...)</code> BOOLEAN Add Completion Model <code>ai.add_completion_model(...)</code> BOOLEAN Add Embedding Model <code>ai.add_embedding_model(...)</code> BOOLEAN Add Image Model <code>ai.add_image_model(...)</code> BOOLEAN Delete Model <code>ai.delete_model(model_name)</code> BOOLEAN Update Model Config <code>ai.update_model(model_name, config, value)</code> BOOLEAN List All Models <code>ai.list_models()</code> SETOF ai_model_list"},{"location":"en/guide/23-opentenbase_ai/#advanced-usage","title":"Advanced Usage","text":"Feature Function Return Type Low-level Model Call <code>ai.invoke_model(model_name, user_args)</code> TEXT Raw HTTP Response <code>ai.raw_invoke_model(model_name, user_args)</code> http_response"},{"location":"en/guide/23-opentenbase_ai/#guc-parameter-list","title":"GUC Parameter List","text":"Parameter Name Description Default Value Level <code>ai.completion_model</code> Default text completion model NULL USERSET <code>ai.embedding_model</code> Default embedding vector model NULL USERSET <code>ai.image_model</code> Default image analysis model NULL USERSET"},{"location":"en/release/v2-2-0/","title":"V2.2.0-release","text":"<p>The main modifications of V2.2.0-release version focus on:</p>"},{"location":"en/release/v2-2-0/#1-executoroptimizer-optimization","title":"1. Executor/optimizer optimization:","text":"<p>1\uff09Optimize sub-queries into related query. After optimization, statements can be pushed down to the DN computing node for processing, and the performance of some statements can be improved by hundreds of times;</p> <p>2\uff09FQS query push-down capabilities are enhanced to support more sub-query scenarios to use FQS to push down, and the performance is improved dozens of times;  </p>"},{"location":"en/release/v2-2-0/#2-memory-usage-optimization","title":"2. Memory usage optimization:","text":"<p>1\uff09Provides a detailed query view of session memory usage </p> <p>2\uff09Automatically release idle connections with excessive memory, reducing the memory usage of all idle connections by about 90%;</p> <p>3\uff09Support Relcache LRU replacement, which reduces the memory usage in the session by about 55%;  </p>"},{"location":"en/release/v2-2-0/#3-improve-the-display-of-explain-analyze-execution-plan","title":"3. Improve the display of explain analyze execution plan\uff1a","text":"<p>On CN, you can view the execution information of the operators executed on each DN (previously, the function was limited, and only those on CN could be displayed):  </p> <p>previously:   now: </p> <p>The slower-running operators can be found through the complete execution information, which provides direction for SQL performance optimization.  </p>"},{"location":"en/release/v2-2-0/#4-added-global-session-view-function","title":"4. Added global session view function:","text":"<p>You can get the running status of the processes belonging to all sessions of the entire cluster from CN. The method of use is as follows:</p> <p>1)  Add the following configuration to postgresql.conf of all nodes(CN and DN): <code>shared_preload_libraries = 'pg_stat_cluster_activity'</code></p> <p>2)  create extension pg_stat_cluster_activity;</p> <p>3)  select session ID: </p> <p>4)  select the detailed information of the distributed active session according to the session ID: </p> <p>In addition to the above, some known bugs have been fixed, and the cluster stability has been improved to a higher level.</p>"},{"location":"en/release/v2-4-0/","title":"V2.4.0-release","text":"<p>The main changes to the V2.4.0-release version are as follows:</p> <ol> <li> <p>Distributed computing performance improvement:</p> <ul> <li>hasAggs/having/sort/limit/Stable function/ optimization is pushed down to DN, and the performance is improved nearly a hundredfold.</li> <li>ProcLock segmented lock optimization for distributed processes to reduce lock conflicts and improve execution efficiency by about 5 times.</li> <li>execute plan optimization: if the number of redistributed nodes is 1, skip the remote operator and simplify the execution plan.</li> </ul> </li> <li> <p>2PC transaction optimization:</p> <ul> <li>performance optimization of deadlock checking: batch acquisition of gxid; traversal lookup gxid is modified to binary lookup, and the     number of try rounds is increased.</li> <li>2PC adds protection mode to prevent partial submission.</li> <li>drop database adds a prepare process to ensure that there is no residual node failure.</li> </ul> </li> <li> <p>Enhanced ease of use:</p> <ul> <li>added pooler multithreaded log feature to facilitate problem analysis.</li> <li>GTM logs are optimized. Logs are aggregated into one file, and active logs are automatically split to facilitate users to view them at any time.</li> <li>support gtm_ctl-l to specify the log file path to start, making it easy for users to manage logs.</li> </ul> </li> <li> <p>The new features support:</p> <ul> <li>self-developed partition table pruning, adding IN syntax pruning to speed up pruning in advance.</li> <li>data shuffle supports user-defined functions.</li> <li>allows you to delete columns of a primary table with distributed foreign key constraints.</li> </ul> </li> </ol>"},{"location":"en/release/v2-5-0/","title":"V2.5.0-release","text":"<p>The main modifications of V2.5.0-release version focus on:</p> <ol> <li> <p>Performance optimization</p> <p>When using the extended protocol, multiple pieces of data in insert/function are rewritten as copy, and the writing performance is improved by dozens of times The accuracy of cost estimation is improved, and the execution plan performance is improved by more than 2 times pg_stat_cluster_activity memory usage optimization</p> </li> <li> <p>Enhanced functions</p> <p>Join tables of different nodegroups that support resource isolation Support subscribing DN WAL logs from CN Support the synchronization of analyze information to other CNs to ensure that the statistical information of different CNs is consistent Increase libpq TCP timeout setting The error message prompt is strengthened, which is convenient for users to analyze problems</p> </li> <li> <p>Other known bug fixes</p> </li> </ol>"},{"location":"en/release/v2-6-0/","title":"V2.6.0-release","text":"<p>The main modifications of V2.6.0-release version focus on:</p> <ol> <li> <p>Enhanced functions</p> <p>Support for spatial database plugin PostGIS.</p> <p>Support for RPM package deployment.</p> <p>Added a plugin <code>slowquery</code> to log SQL queries that exceed the set execution time threshold.</p> </li> <li> <p>Other known bug fixes</p> <p>Fixed operating systems support issues</p> <p>Fixed the make html compilation issue caused by /doc/src/sgml/func.sgml</p> </li> <li> <p>Peripheral ecosystem</p> <p>Added guidelines and documentation for docker deployment cases</p> <p>Added support for the KubeBlock plugin for Kubernetes cluster deployment, along with new deployment case guidelines and documentation</p> <p>Added guidelines and documentation for monitoring deployment cases based on Grafana/Prometheus</p> </li> </ol>"}]}